{"version":3,"sources":["webpack://HyperFormula/webpack/universalModuleDefinition","webpack://HyperFormula/webpack/bootstrap","webpack://HyperFormula/./lib/index.js","webpack://HyperFormula/./node_modules/core-js/modules/es.reflect.construct.js","webpack://HyperFormula/./node_modules/core-js/internals/export.js","webpack://HyperFormula/./node_modules/core-js/internals/global.js","webpack://HyperFormula/(webpack)/buildin/global.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/descriptors.js","webpack://HyperFormula/./node_modules/core-js/internals/fails.js","webpack://HyperFormula/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://HyperFormula/./node_modules/core-js/internals/create-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/internals/to-indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/indexed-object.js","webpack://HyperFormula/./node_modules/core-js/internals/classof-raw.js","webpack://HyperFormula/./node_modules/core-js/internals/require-object-coercible.js","webpack://HyperFormula/./node_modules/core-js/internals/to-primitive.js","webpack://HyperFormula/./node_modules/core-js/internals/is-object.js","webpack://HyperFormula/./node_modules/core-js/internals/has.js","webpack://HyperFormula/./node_modules/core-js/internals/to-object.js","webpack://HyperFormula/./node_modules/core-js/internals/ie8-dom-define.js","webpack://HyperFormula/./node_modules/core-js/internals/document-create-element.js","webpack://HyperFormula/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://HyperFormula/./node_modules/core-js/internals/object-define-property.js","webpack://HyperFormula/./node_modules/core-js/internals/an-object.js","webpack://HyperFormula/./node_modules/core-js/internals/redefine.js","webpack://HyperFormula/./node_modules/core-js/internals/set-global.js","webpack://HyperFormula/./node_modules/core-js/internals/inspect-source.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-store.js","webpack://HyperFormula/./node_modules/core-js/internals/internal-state.js","webpack://HyperFormula/./node_modules/core-js/internals/native-weak-map.js","webpack://HyperFormula/./node_modules/core-js/internals/shared-key.js","webpack://HyperFormula/./node_modules/core-js/internals/shared.js","webpack://HyperFormula/./node_modules/core-js/internals/is-pure.js","webpack://HyperFormula/./node_modules/core-js/internals/uid.js","webpack://HyperFormula/./node_modules/core-js/internals/hidden-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://HyperFormula/./node_modules/core-js/internals/own-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/get-built-in.js","webpack://HyperFormula/./node_modules/core-js/internals/path.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://HyperFormula/./node_modules/core-js/internals/object-keys-internal.js","webpack://HyperFormula/./node_modules/core-js/internals/array-includes.js","webpack://HyperFormula/./node_modules/core-js/internals/to-length.js","webpack://HyperFormula/./node_modules/core-js/internals/to-integer.js","webpack://HyperFormula/./node_modules/core-js/internals/to-absolute-index.js","webpack://HyperFormula/./node_modules/core-js/internals/enum-bug-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://HyperFormula/./node_modules/core-js/internals/is-forced.js","webpack://HyperFormula/./node_modules/core-js/internals/a-function.js","webpack://HyperFormula/./node_modules/core-js/internals/object-create.js","webpack://HyperFormula/./node_modules/core-js/internals/object-define-properties.js","webpack://HyperFormula/./node_modules/core-js/internals/object-keys.js","webpack://HyperFormula/./node_modules/core-js/internals/html.js","webpack://HyperFormula/./node_modules/core-js/internals/function-bind.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.slice.js","webpack://HyperFormula/./node_modules/core-js/internals/is-array.js","webpack://HyperFormula/./node_modules/core-js/internals/create-property.js","webpack://HyperFormula/./node_modules/core-js/internals/well-known-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/native-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-v8-version.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-user-agent.js","webpack://HyperFormula/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://HyperFormula/./node_modules/core-js/internals/array-method-has-species-support.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.to-string.js","webpack://HyperFormula/./node_modules/core-js/internals/to-string-tag-support.js","webpack://HyperFormula/./node_modules/core-js/internals/object-to-string.js","webpack://HyperFormula/./node_modules/core-js/internals/classof.js","webpack://HyperFormula/./node_modules/core-js/modules/es.function.name.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.from.js","webpack://HyperFormula/./node_modules/core-js/internals/array-from.js","webpack://HyperFormula/./node_modules/core-js/internals/function-bind-context.js","webpack://HyperFormula/./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://HyperFormula/./node_modules/core-js/internals/iterator-close.js","webpack://HyperFormula/./node_modules/core-js/internals/is-array-iterator-method.js","webpack://HyperFormula/./node_modules/core-js/internals/iterators.js","webpack://HyperFormula/./node_modules/core-js/internals/get-iterator-method.js","webpack://HyperFormula/./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/string-multibyte.js","webpack://HyperFormula/./node_modules/core-js/internals/define-iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/create-iterator-constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/iterators-core.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://HyperFormula/./node_modules/core-js/internals/set-to-string-tag.js","webpack://HyperFormula/./node_modules/core-js/internals/object-set-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/internals/a-possible-prototype.js","webpack://HyperFormula/./node_modules/core-js/modules/es.symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack://HyperFormula/./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack://HyperFormula/./node_modules/core-js/internals/define-well-known-symbol.js","webpack://HyperFormula/./node_modules/core-js/internals/array-iteration.js","webpack://HyperFormula/./node_modules/core-js/internals/array-species-create.js","webpack://HyperFormula/./node_modules/core-js/modules/es.symbol.description.js","webpack://HyperFormula/./node_modules/core-js/modules/es.symbol.iterator.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/add-to-unscopables.js","webpack://HyperFormula/./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack://HyperFormula/./node_modules/core-js/internals/dom-iterables.js","webpack://HyperFormula/./node_modules/core-js/modules/es.weak-map.js","webpack://HyperFormula/./node_modules/core-js/internals/redefine-all.js","webpack://HyperFormula/./node_modules/core-js/internals/internal-metadata.js","webpack://HyperFormula/./node_modules/core-js/internals/freezing.js","webpack://HyperFormula/./node_modules/core-js/internals/collection.js","webpack://HyperFormula/./node_modules/core-js/internals/iterate.js","webpack://HyperFormula/./node_modules/core-js/internals/an-instance.js","webpack://HyperFormula/./node_modules/core-js/internals/inherit-if-required.js","webpack://HyperFormula/./node_modules/core-js/internals/collection-weak.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.get-own-property-descriptor.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.get-prototype-of.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.get-own-property-names.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.starts-with.js","webpack://HyperFormula/./node_modules/core-js/internals/not-a-regexp.js","webpack://HyperFormula/./node_modules/core-js/internals/is-regexp.js","webpack://HyperFormula/./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack://HyperFormula/./lib/Cell.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.assign.js","webpack://HyperFormula/./node_modules/core-js/internals/object-assign.js","webpack://HyperFormula/./lib/DependencyGraph/index.js","webpack://HyperFormula/./lib/DependencyGraph/DependencyGraph.js","webpack://HyperFormula/./node_modules/regenerator-runtime/runtime.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.map.js","webpack://HyperFormula/./node_modules/core-js/modules/es.set.js","webpack://HyperFormula/./node_modules/core-js/internals/collection-strong.js","webpack://HyperFormula/./node_modules/core-js/internals/set-species.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.concat.js","webpack://HyperFormula/./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack://HyperFormula/./node_modules/core-js/internals/array-for-each.js","webpack://HyperFormula/./node_modules/core-js/internals/array-method-is-strict.js","webpack://HyperFormula/./lib/AbsoluteCellRange.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.is-finite.js","webpack://HyperFormula/./node_modules/core-js/internals/number-is-finite.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/string-trim.js","webpack://HyperFormula/./node_modules/core-js/internals/whitespaces.js","webpack://HyperFormula/./lib/parser/index.js","webpack://HyperFormula/./lib/parser/addressRepresentationConverters.js","webpack://HyperFormula/./node_modules/core-js/modules/es.regexp.constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-flags.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack://HyperFormula/./node_modules/core-js/modules/es.regexp.exec.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-exec.js","webpack://HyperFormula/./node_modules/core-js/modules/es.regexp.to-string.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.reduce.js","webpack://HyperFormula/./node_modules/core-js/internals/array-reduce.js","webpack://HyperFormula/./node_modules/core-js/internals/engine-is-node.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.split.js","webpack://HyperFormula/./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack://HyperFormula/./node_modules/core-js/internals/species-constructor.js","webpack://HyperFormula/./node_modules/core-js/internals/advance-string-index.js","webpack://HyperFormula/./node_modules/core-js/internals/regexp-exec-abstract.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.replace.js","webpack://HyperFormula/./node_modules/core-js/internals/get-substitution.js","webpack://HyperFormula/./lib/parser/CellAddress.js","webpack://HyperFormula/./lib/parser/ColumnAddress.js","webpack://HyperFormula/./lib/parser/LexerConfig.js","webpack://HyperFormula/external {\"root\":\"chevrotain\",\"commonjs2\":\"chevrotain\",\"commonjs\":\"chevrotain\",\"amd\":\"chevrotain\"}","webpack://HyperFormula/./lib/parser/RowAddress.js","webpack://HyperFormula/./lib/parser/ParserWithCaching.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.join.js","webpack://HyperFormula/./lib/parser/Ast.js","webpack://HyperFormula/./lib/parser/binaryOpTokenMap.js","webpack://HyperFormula/./lib/parser/Cache.js","webpack://HyperFormula/./node_modules/core-js/modules/es.map.js","webpack://HyperFormula/./lib/parser/FormulaParser.js","webpack://HyperFormula/./node_modules/core-js/modules/es.reflect.get.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.is-integer.js","webpack://HyperFormula/./node_modules/core-js/internals/is-integer.js","webpack://HyperFormula/./lib/error-message.js","webpack://HyperFormula/./lib/parser/Unparser.js","webpack://HyperFormula/./lib/parser/collectDependencies.js","webpack://HyperFormula/./lib/parser/RelativeDependency.js","webpack://HyperFormula/./lib/Span.js","webpack://HyperFormula/./lib/absolutizeDependencies.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.filter.js","webpack://HyperFormula/./lib/interpreter/SimpleRangeValue.js","webpack://HyperFormula/./lib/interpreter/InterpreterValue.js","webpack://HyperFormula/./lib/statistics/index.js","webpack://HyperFormula/./lib/statistics/EmptyStatistics.js","webpack://HyperFormula/./lib/statistics/Statistics.js","webpack://HyperFormula/./lib/statistics/StatType.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/AddressMapping.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.fill.js","webpack://HyperFormula/./node_modules/core-js/internals/array-fill.js","webpack://HyperFormula/./lib/errors.js","webpack://HyperFormula/./lib/DependencyGraph/collectAddressesDependentToMatrix.js","webpack://HyperFormula/./lib/DependencyGraph/FormulaCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/MatrixVertex.js","webpack://HyperFormula/./lib/Matrix.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.splice.js","webpack://HyperFormula/./lib/DependencyGraph/RangeVertex.js","webpack://HyperFormula/./lib/DependencyGraph/Graph.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.reverse.js","webpack://HyperFormula/./lib/DependencyGraph/MatrixMapping.js","webpack://HyperFormula/./lib/DependencyGraph/RangeMapping.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.sort.js","webpack://HyperFormula/./lib/DependencyGraph/SheetMapping.js","webpack://HyperFormula/./lib/i18n/index.js","webpack://HyperFormula/./lib/i18n/TranslationPackage.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.keys.js","webpack://HyperFormula/./node_modules/core-js/modules/es.object.values.js","webpack://HyperFormula/./node_modules/core-js/internals/object-to-array.js","webpack://HyperFormula/./lib/DependencyGraph/EmptyCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ValueCellVertex.js","webpack://HyperFormula/./lib/DependencyGraph/ParsingErrorVertex.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/SparseStrategy.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/DenseStrategy.js","webpack://HyperFormula/./lib/CellValue.js","webpack://HyperFormula/./lib/Config.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.includes.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.includes.js","webpack://HyperFormula/./lib/DateTimeDefault.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.trim.js","webpack://HyperFormula/./node_modules/core-js/internals/string-trim-forced.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.ends-with.js","webpack://HyperFormula/./lib/DateTimeHelper.js","webpack://HyperFormula/./lib/DependencyGraph/AddressMapping/ChooseAddressMappingPolicy.js","webpack://HyperFormula/./lib/format/format.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.to-fixed.js","webpack://HyperFormula/./node_modules/core-js/internals/this-number-value.js","webpack://HyperFormula/./node_modules/core-js/internals/string-repeat.js","webpack://HyperFormula/./lib/format/parser.js","webpack://HyperFormula/./lib/HyperFormula.js","webpack://HyperFormula/./lib/CellContentParser.js","webpack://HyperFormula/./lib/interpreter/ArithmeticHelper.js","webpack://HyperFormula/./node_modules/unorm/lib/unorm.js","webpack://HyperFormula/./lib/StringHelper.js","webpack://HyperFormula/./lib/Operations.js","webpack://HyperFormula/./lib/ClipboardOperations.js","webpack://HyperFormula/./lib/ContentChanges.js","webpack://HyperFormula/./lib/dependencyTransformers/AddColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/Transformer.js","webpack://HyperFormula/./lib/dependencyTransformers/AddRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/MoveCellsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveColumnsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveRowsTransformer.js","webpack://HyperFormula/./lib/dependencyTransformers/RemoveSheetTransformer.js","webpack://HyperFormula/./lib/GraphBuilder.js","webpack://HyperFormula/./lib/GraphBuilderMatrixHeuristic.js","webpack://HyperFormula/./lib/NamedExpressions.js","webpack://HyperFormula/./lib/Sheet.js","webpack://HyperFormula/./lib/dependencyTransformers/CleanOutOfScopeDependenciesTransformer.js","webpack://HyperFormula/./lib/Emitter.js","webpack://HyperFormula/./node_modules/tiny-emitter/index.js","webpack://HyperFormula/./lib/BuildEngineFactory.js","webpack://HyperFormula/./lib/Exporter.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.log10.js","webpack://HyperFormula/./lib/LazilyTransformingAstService.js","webpack://HyperFormula/./lib/dependencyTransformers/CombinedTransformer.js","webpack://HyperFormula/./lib/Lookup/SearchStrategy.js","webpack://HyperFormula/./lib/Lookup/ColumnBinarySearch.js","webpack://HyperFormula/./lib/interpreter/binarySearch.js","webpack://HyperFormula/./lib/Lookup/AdvancedFind.js","webpack://HyperFormula/./lib/Lookup/ColumnIndex.js","webpack://HyperFormula/./node_modules/core-js/modules/es.array.find.js","webpack://HyperFormula/./lib/CrudOperations.js","webpack://HyperFormula/./lib/UndoRedo.js","webpack://HyperFormula/./lib/Evaluator.js","webpack://HyperFormula/./lib/interpreter/Interpreter.js","webpack://HyperFormula/./lib/interpreter/Criterion.js","webpack://HyperFormula/./lib/interpreter/FunctionRegistry.js","webpack://HyperFormula/./lib/interpreter/plugin/VersionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FunctionPlugin.js","webpack://HyperFormula/./lib/NumberLiteralHelper.js","webpack://HyperFormula/./lib/Serialization.js","webpack://HyperFormula/./lib/helpers/licenseKeyValidator.js","webpack://HyperFormula/./lib/helpers/licenseKeyHelper.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.code-point-at.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.pad-start.js","webpack://HyperFormula/./node_modules/core-js/internals/string-pad.js","webpack://HyperFormula/./node_modules/core-js/internals/string-pad-webkit-bug.js","webpack://HyperFormula/./lib/i18n/languages/enGB.js","webpack://HyperFormula/./lib/interpreter/index.js","webpack://HyperFormula/./lib/interpreter/plugin/index.js","webpack://HyperFormula/./lib/interpreter/plugin/AbsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitShiftPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BitwiseLogicOperationsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/BooleanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CharPlugin.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.trunc.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.from-code-point.js","webpack://HyperFormula/./lib/interpreter/plugin/CodePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountBlankPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/CountUniquePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DateTimePlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DegreesPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/DeltaPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ExpPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FinancialPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/FormulaTextPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/InformationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsEvenPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/IsOddPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/LogarithmPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MathConstantsPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MatrixPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/MedianPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/ModuloPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/NumericAggregationPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/PowerPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadiansPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RadixConversionPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RandomPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/RoundingPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SqrtPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SumifPlugin.js","webpack://HyperFormula/./lib/interpreter/CriterionFunctionCompute.js","webpack://HyperFormula/./lib/generatorUtils.js","webpack://HyperFormula/./lib/interpreter/plugin/SumprodPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/TextPlugin.js","webpack://HyperFormula/./node_modules/core-js/modules/es.string.repeat.js","webpack://HyperFormula/./lib/interpreter/plugin/TrigonometryPlugin.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.sinh.js","webpack://HyperFormula/./node_modules/core-js/internals/math-expm1.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.asinh.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.cosh.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.acosh.js","webpack://HyperFormula/./node_modules/core-js/internals/math-log1p.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.tanh.js","webpack://HyperFormula/./node_modules/core-js/modules/es.math.atanh.js","webpack://HyperFormula/./lib/interpreter/plugin/LookupPlugin.js","webpack://HyperFormula/./lib/Lookup/RowSearchStrategy.js","webpack://HyperFormula/./lib/interpreter/plugin/RomanPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/SimpleArithmertic.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/bessel/bessel.js","webpack://HyperFormula/./lib/interpreter/plugin/3rdparty/jstat/jstat.js","webpack://HyperFormula/./lib/interpreter/plugin/MathPlugin.js","webpack://HyperFormula/./node_modules/core-js/modules/es.number.max-safe-integer.js","webpack://HyperFormula/./lib/interpreter/plugin/ComplexPlugin.js","webpack://HyperFormula/./lib/interpreter/plugin/StatisticalAggregationPlugin.js"],"names":["HyperFormulaNS","HyperFormula","ErrorType","CellType","CellValueType","CellValueDetailedType","DetailedCellError","ExportedCellChange","ExportedNamedExpressionChange","ConfigValueTooBigError","ConfigValueTooSmallError","EvaluationSuspendedError","ExpectedOneOfValuesError","ExpectedValueOfTypeError","FunctionPlugin","FunctionPluginValidationError","InvalidAddressError","InvalidArgumentsError","LanguageNotRegisteredError","LanguageAlreadyRegisteredError","MatrixFormulasNotSupportedError","MissingTranslationError","NamedExpressionDoesNotExistError","NamedExpressionNameIsAlreadyTakenError","NamedExpressionNameIsInvalidError","NoOperationToRedoError","NoOperationToUndoError","NoRelativeAddressesAllowedError","NoSheetWithIdError","NoSheetWithNameError","NotAFormulaError","NothingToPasteError","ProtectedFunctionTranslationError","SheetNameAlreadyTakenError","SheetSizeLimitExceededError","SourceLocationHasMatrixError","TargetLocationHasMatrixError","UnableToParseError","defaultLanguage","Config","defaultConfig","language","registerLanguage","enGB","languages","langCode","Object","getOwnPropertyNames","plugins","pluginName","startsWith","registerFunctionPlugin","getCellType","vertex","FormulaCellVertex","ParsingErrorVertex","FORMULA","ValueCellVertex","MatrixVertex","isNumeric","VALUE","isFormula","MATRIX","EMPTY","CellValueNoNumber","CellValueJustNumber","assign","NumberType","CellValueTypeOrd","arg","NUMBER","STRING","BOOLEAN","ERROR","Error","getCellValueType","cellValue","EmptyValue","CellError","SimpleRangeValue","getCellValueDetailedType","getCellValueFormat","undefined","type","message","address","ErrorMessage","ParseError","simpleRowAddress","sheet","row","invalidSimpleRowAddress","simpleColumnAddress","col","invalidSimpleColumnAddress","simpleCellAddress","invalidSimpleCellAddress","movedSimpleCellAddress","toSheet","toRight","toBottom","absoluteSheetReference","baseAddress","DependencyGraph","addressMapping","rangeMapping","sheetMapping","matrixMapping","stats","lazilyTransformingAstService","functionRegistry","namedExpressions","dependencyQueryAddresses","RangeVertex","rangeDependencyQuery","map","_","dependenciesResult","formulaDependencyQuery","dependencies","dependency","NamedExpressionDependency","namedExpression","namedExpressionOrPlaceholder","name","dependencyQueryVertices","v","AbsoluteCellRange","fetchRange","start","end","fetchCell","allDeps","findSmallerRange","range","smallerRangeVertex","restRange","graph","adjacentNodes","has","push","addresses","cell","getCell","EmptyCellVertex","formula","getAddress","getFormula","deps","Graph","ast","hasVolatileFunction","hasStructuralChangeFunction","ensureThatVertexIsNonMatrixCellVertex","newVertex","version","exchangeOrAddGraphNode","setCell","processCellDependencies","markNodeAsSpecialRecentlyChanged","markAsVolatile","markAsDependentOnStructureChange","correctInfiniteRangesDependency","errorVertex","value","oldValue","getValues","rawValue","setValues","parsedValue","size","emptyVertex","exchangeGraphNode","adjacentNodesCount","removeVertex","removeCell","clearSpecialNodesRecentlyChanged","Set","specialNodesRecentlyChanged","volatileVertices","cellDependencies","endVertex","forEach","dep","rangeVertex","getRange","setRange","addNode","isFinite","markNodeAsInfiniteRange","addEdge","bruteForce","cellFromRange","removeEdge","matrix","getMatrix","fetchCellOrCreateEmpty","correctInfiniteRangesDependenciesByRangeVertex","sheetOfVertex","namedExpressionVertex","fetchNamedExpressionVertex","expressionName","sheetId","addressFrom","addressTo","vertexFrom","vertexTo","infiniteRanges","infiniteRangeVertex","intersection","intersectionWith","addressInRange","removedRows","isFormulaMatrixInRows","measure","StatType","ADJUSTING_GRAPH","verticesFromRowsSpan","adjacentNode","ADJUSTING_MATRIX_MAPPING","truncateMatricesAfterRemovingRows","ADJUSTING_ADDRESS_MAPPING","removeRows","ADJUSTING_RANGES","truncateRanges","addStructuralNodesToChangeSet","removedSheetId","matrices","sheetEntries","adr","add","values","removeMatrix","rangesToRemove","removeRangesInSheet","removeSheet","setCellEmpty","setMatrixEmpty","removedColumns","isFormulaMatrixInColumns","verticesFromColumnsSpan","truncateMatricesAfterRemovingColumns","removeColumns","addedRows","addRows","rowStart","numberOfRows","expandMatricesAfterAddingRows","moveAllRangesInSheetAfterRowByRows","fixRangesWhenAddingRows","addedColumns","addColumns","columnStart","numberOfColumns","expandMatricesAfterAddingColumns","moveAllRangesInSheetAfterColumnByColumns","fixRangesWhenAddingColumns","isFormulaMatrixInRange","sourceRange","addressesWithDirection","sourceAddress","targetAddress","sourceVertex","targetVertex","containsRange","rangeVerticesContainedInRange","newEmptyVertex","moveRangesInsideSourceRange","numericMatrices","matrixVertex","breakNumericMatrix","numericMatricesInRange","matrixRange","spanFrom","width","height","valueVertex","getCellValue","getRawValue","addVertex","nodeDependencies","length","setVertexAddress","setAddressMappingForMatrixVertex","verticesFromRange","setMatrix","entriesFromRange","nodes","rowsSpan","entriesFromRowsSpan","columnsSpan","entriesFromColumnsSpan","ScalarExpected","fromNode","toNode","existsEdge","sheetName","fetch","fetchDisplayName","getHeight","getWidth","topSortWithScc","markNodeAsSpecial","markNodeAsChangingWithStructure","ensureRecentData","specialNodes","destroy","getScalarValue","oldNode","newNode","adjNodesStored","hasNode","specialNodesStructuralChanges","originalValues","Array","from","rangesInSheet","includesRow","addedSubrangeInThatRange","rangeWithSameWidth","currentRangeVertex","find","newRangeVertex","addAllFromRange","column","includesColumn","subrange","rangeWithSameHeight","formulaAddress","verticesToRemove","truncateMatricesByRows","span","coordinate","verticesToMerge","existingVertex","mergedVertex","mergeRangeVertices","removeVertexAndCleanupDependencies","truncateMatricesByColumns","numericMatricesInRows","RowsSpan","fromRowStartAndEnd","addedRange","numericMatricesInColumns","ColumnsSpan","fromColumnStartAndEnd","removeRange","softRemoveEdge","inputVertex","removeNode","next","delete","candidate","ret","castVertex","config","AddressMapping","chooseAddressMappingPolicy","RangeMapping","SheetMapping","translationPackage","MatrixMapping","DIFFERENT_SHEETS_ERROR","WRONG_RANGE_SIZE","Number","other","startRow","Math","max","endRow","min","startCol","endCol","byCols","byRows","rowEnd","shiftByRows","columnEnd","shiftByColumns","startColumn","result","y","x","newStart","dependencyGraph","currentRow","effectiveEndRow","currentColumn","effectiveEndColumn","right","bottom","maxColumns","maxRows","_dependencyGraph","AstNodeType","CELL_RANGE","fromCellRange","COLUMN_RANGE","AbsoluteColumnRange","fromColumnRange","AbsoluteRowRange","fromRowRange","CellAddress","toSimpleCellAddress","topLeftCorner","x1","y1","x2","y2","cellAddress","POSITIVE_INFINITY","_numberOfRows","_byRows","_rowStart","_rowEnd","_maxRows","getSheetHeight","toSimpleColumnAddress","_numberOfColumns","_columnStart","_columnEnd","_maxColumns","getSheetWidth","toSimpleRowAddress","addressRegex","RegExp","sheetNameRegexp","columnRegex","rowRegex","simpleSheetNameRegex","simpleSheetName","cellAddressFromString","stringAddress","exec","columnLabelToIndex","extractSheetNumber","absolute","absoluteCol","absoluteRow","relative","columnAddressFromString","ColumnAddress","rowAddressFromString","RowAddress","simpleCellAddressFromString","sheetContext","simpleCellAddressToString","sheetIndexMapping","sheetIndex","columnIndexToLabel","sheetIndexToString","columnStringRepresentation","toUpperCase","charCodeAt","split","reduce","nextLetter","String","fromCharCode","floor","sheetMappingFn","test","replace","regexResult","_a","maybeSheetName","CellReferenceType","CELL_REFERENCE_ABSOLUTE","CELL_REFERENCE_ABSOLUTE_ROW","CELL_REFERENCE_ABSOLUTE_COL","isColumnRelative","isRowRelative","CELL_REFERENCE_RELATIVE","newSheet","isColumnAbsolute","isRowAbsolute","withSheet","sheetPart","simpleAddress","rowDollar","colDollar","ReferenceType","ABSOLUTE","RELATIVE","_toBottom","dollar","AdditionOp","pattern","Lexer","NA","PlusOp","categories","MinusOp","MultiplicationOp","TimesOp","DivOp","PowerOp","PercentOp","BooleanOp","EqualsOp","NotEqualOp","GreaterThanOp","LessThanOp","GreaterThanOrEqualOp","LessThanOrEqualOp","ConcatenateOp","quotedSheetName","CellReference","ColumnRange","RowRange","RangeSeparator","LParen","RParen","ProcedureName","NamedExpression","StringLiteral","ErrorLiteral","WhiteSpace","buildLexerConfig","offsetProcedureNameLiteral","getFunctionTranslation","errorMapping","functionMapping","buildFunctionMapping","ArgSeparator","functionArgSeparator","NumberLiteral","decimalSeparator","OffsetProcedureName","allTokens","ParserWithCaching","statsCacheUsed","lexerConfig","lexer","FormulaLexer","formulaParser","FormulaParser","cache","Cache","text","lexerResult","tokenizeFormula","errors","e","ParsingErrorType","LexingError","hash","computeHashFromTokens","tokens","cacheResult","get","processedTokens","bindWhitespacesToTokens","parsingResult","parseFromTokens","set","relativeDependencies","computeHashFromAst","fetchCachedResult","idx","token","image","concat","procedureName","slice","canonicalProcedureName","startAddress","endAddress","maybeSetAndThenGet","computeHashOfAstNode","leadingWhitespace","NAMED_EXPRESSION","FUNCTION_CALL","args","join","rightPart","internalWhitespace","CELL_REFERENCE","reference","ROW_RANGE","sheetReferenceType","RangeSheetReferenceType","BOTH_ABSOLUTE","MINUS_UNARY_OP","PLUS_UNARY_OP","PERCENT_OP","getErrorTranslation","error","ERROR_WITH_RAW_INPUT","rawInput","PARENTHESIS","expression","left","binaryOpTokenMap","first","i","current","previous","parsingError","buildEmptyArgAst","buildNumberAst","buildStringAst","buildCellReferenceAst","buildCellRangeAst","assertRangeConsistency","buildColumnRangeAst","buildRowRangeAst","buildConcatenateOpAst","CONCATENATE_OP","buildEqualsOpAst","EQUALS_OP","buildNotEqualOpAst","NOT_EQUAL_OP","buildGreaterThanOpAst","GREATER_THAN_OP","buildLessThanOpAst","LESS_THAN_OP","buildGreaterThanOrEqualOpAst","GREATER_THAN_OR_EQUAL_OP","buildLessThanOrEqualOpAst","LESS_THAN_OR_EQUAL_OP","buildPlusOpAst","PLUS_OP","buildMinusOpAst","MINUS_OP","buildTimesOpAst","TIMES_OP","buildDivOpAst","DIV_OP","buildPowerOpAst","POWER_OP","buildMinusUnaryOpAst","buildPlusUnaryOpAst","buildPercentOpAst","buildProcedureAst","buildNamedExpressionAst","buildParenthesisAst","buildCellErrorAst","buildErrorWithRawInputAst","buildParsingErrorAst","imageWithWhitespace","buildCacheEntry","Map","astRelativeDependencies","cacheEntry","doesContainFunctions","isFunctionVolatile","isFunctionDependentOnSheetStructureChange","entryFromCache","clear","functionCriterion","some","outputCst","maxLookahead","RULE","CONSUME","SUBRULE","booleanExpression","lhs","concatenateExpression","MANY","op","rhs","SUBRULE2","ACTION","booleanExpressionOrEmpty","OR","ALT","additionExpression","multiplicationExpression","powerExpression","atomicExpression","customParsingError","ParserError","rightUnaryOpAtomicExpression","positiveAtomicExpression","percentage","OPTION","atomicExpCache","parenthesisExpression","cellRangeExpression","columnRangeExpression","rowRangeExpression","offsetExpression","cellReference","procedureExpression","namedExpressionExpression","number","numericStringToNumber","str","errString","errorType","procedureNameToken","argument","separator","rParenToken","offsetProcedure","offsetProcedureExpression","RangeOffsetNotAllowed","endOfRangeWithOffsetStartExpression","ARGS","MANY_SEP","SEP","DEF","handleOffsetHeuristic","CONSUME2","endOfRangeExpression","startImage","endImage","REF","exceedsSheetSizeLimits","NAME","rangeSheetReferenceType","withAbsoluteSheet","endRangeReference","START_ABSOLUTE","endRangeWithOffsetStartReference","buildCellRange","lParenToken","input","normalized","performSelfAnalysis","formulaWithContext","cellArg","StaticOffsetError","rowsArg","rowShift","isInteger","columnsArg","colShift","heightArg","widthArg","OutOfSheet","bottomRightCorner","EmbeddedActionsParser","ensureOptimizations","lexingResult","tokenize","trimTrailingWhitespaces","skipWhitespacesInsideRanges","skipWhitespacesBeforeArgSeparators","filterTokensByNeighbors","shouldBeSkipped","filteredTokens","pop","DistinctSigns","WrongArgNumber","EmptyArg","MatrixDimensions","ValueSmall","ValueLarge","BadCriterion","RangeManySheets","CellRangeExpected","NumberCoercion","NumberExpected","IntegerExpected","BadMode","DateBounds","WrongType","NaN","EqualLength","Negative","NotBinary","NotOctal","NotHex","EndStartPeriod","CellRefExpected","BadRef","NumberRange","ValueNotFound","ValueBaseLarge","ValueBaseSmall","ValueBaseLong","NegativeLength","PatternNotFound","MatrixParams","OneValue","TwoValues","ThreeValues","IndexBounds","IndexLarge","Formula","NegativeCount","SheetRef","MatrixFunction","PeriodLong","InvalidDate","BitshiftLong","EmptyString","LengthBounds","NegativeTime","NoDefault","Selector","StartEndDate","IncorrectDateTime","CharacterCodeBounds","NonZero","LessThanOne","WeekendString","InvalidRoman","WrongOrder","ComplexNumberExpected","ShouldBeIorJ","FunctionName","NamedExpressionName","LicenseKey","Unparser","unparseAst","_b","formatNumber","isFunctionTranslated","originalNamedExpressionName","nearestNamedExpression","displayName","unparseSheetName","unparse","formatRange","unparsedExpr","startSheeet","endSheet","unparsedStart","unparsedEnd","numericString","toString","collectDependenciesFn","dependenciesSet","needArgument","AddressDependency","CellRangeDependency","ColumnRangeDependency","RowRangeDependency","functionNeedArgument","doesFunctionNeedArgumentToBeComputed","argAst","collectDependencies","_baseAddress","otherSpan","absolutizeDependencies","absolutize","filterDependenciesOutOfScope","filter","ArrayData","data","_hasOnlyNumbers","j","hasOnlyNumbers","OnlyRangeData","_range","ensureThatComputed","iterateValuesFromTopLeftCorner","computeDataFromDependencyGraph","raw","valuesFromTopLeftCorner","rawNumbers","scalar","Symbol","num","RichNumber","val","format","constructor","cloneNumber","newVal","fromNumber","DateNumber","NUMBER_DATE","CurrencyNumber","NUMBER_CURRENCY","TimeNumber","NUMBER_TIME","DateTimeNumber","NUMBER_DATETIME","PercentNumber","NUMBER_PERCENT","isExtendedNumber","getTypeOfExtendedNumber","getDetailedType","NUMBER_RAW","getFormatOfExtendedNumber","getTypeFormatOfExtendedNumber","EmptyStatistics","_name","Statistics","CRITERION_FUNCTION_FULL_CACHE_USED","CRITERION_FUNCTION_PARTIAL_CACHE_USED","startTimes","newValue","Date","now","startTime","func","policy","mapping","strategy","sheetBoundaries","fill","strategyConstructor","call","addSheet","getMatrixCellValue","getMatrixCellRawValue","entries","getEntries","expectedArguments","replacer","key","JSON","stringify","expectedType","paramName","ConfigValueEmpty","minimum","maximum","functionId","functionName","ProtectedFunctionError","AliasAlreadyExisting","collectAddressesDependentToMatrix","funcitonRegistry","d","cachedCellValue","updatingService","applyTransformations","newAst","newAddress","newVersion","NotComputedMatrix","MatrixSize","ErroredMatrix","Matrix","newFormula","removedRowsFromMatrix","rowsFromMatrix","intersect","removedColumnsFromMatrix","columnsFromMatrix","fromNumberOfColumns","fromNumberOfRows","matrixSizeForTranspose","inputSize","matrixSizeForMultiplication","leftMatrixSize","rightMatrixSize","matrixSizeForPoolFunction","inputMatrix","windowSize","stride","checkMatrixSize","astIt","NUM","windowArg","window","strideArg","aboveRow","splice","zeroArrays","aboveColumn","outOfBound","leftmostColumn","rightmostColumn","count","leftCorner","functionCache","criterionFunctionCache","dependentCacheRanges","cacheKey","criterionString","getCriterionFunctionValues","dependentRange","NodeVisitStatus","dependencyQuery","edges","node","nodeEdges","edgesForNode","removeDependencies","getTopSortedWithSccSubgraphFrom","_node","modifiedNodes","operatingFunction","onCycle","entranceTime","low","parent","inSCC","nodeStatus","order","time","sccNonSingletons","reverse","DFSstack","SCCstack","ON_STACK","u","t","PROCESSED","uLow","currentSCC","POPPED","shouldBeUpdatedMapping","sorted","cycled","s","sourceNode","mtx","spansThroughSheetRows","rows","isFormulaMatrixInRow","spansThroughSheetColumn","columns","isFormulaMatrixInColumn","doesOverlap","mtxKey","sheetMap","getStart","keyFromAddresses","getEnd","maybeRange","updated","entriesFromSheet","removeSpan","shouldBeRemoved","removeByKey","sort","compareBy","oldKey","newKey","keyFromRange","getByKey","updateVerticesFromSheet","expandByRows","expandByColumns","moveToSheet","ranges","iterator","valuesRangeEndRowLess","rowLessVertex","fn","leftStart","rightStart","leftEnd","rightEnd","canonicalize","sheetDisplayName","toLowerCase","Sheet","id","mappingFromCanonicalName","mappingFromId","lastSheetId","fetchSheetById","sheetNamePrefix","getUITranslation","UIElement","NEW_SHEET_PREFIX","newSheetDisplayName","newSheetCanonicalName","store","canonicalName","newDisplayName","currentDisplayName","sheetWithThisCanonicalName","currentCanonicalName","TranslationPackage","functions","ui","_protectedTranslations","checkUI","checkErrors","checkFunctionTranslations","additionalFunctionTranslations","keys","functionIds","translations","LIC","functionNames","protectedTranslation","buildTranslationPackage","rawTranslationPackage","_cellValue","SparseStrategy","colMapping","rowMapping","tmpMapping","rowNumber","colNumber","rightmostRowRemoved","numberOfRowsRemoved","rightmostColumnRemoved","numberOfColumnsRemoved","rowVertex","DenseStrategy","getCellVertex","newRows","PossibleGPUModeString","privatePool","WeakMap","accentSensitive","caseSensitive","caseFirst","dateFormats","timeFormats","thousandSeparator","licenseKey","functionPlugins","gpujs","gpuMode","ignorePunctuation","leapYear1900","localeLang","smartRounding","matrixDetection","matrixDetectionThreshold","evaluateNullToZero","nullYear","parseDateTime","stringifyDateTime","stringifyDuration","precisionEpsilon","precisionRounding","useColumnIndex","binarySearchThreshold","nullDate","useStats","undoLimit","useRegularExpressions","useWildcards","matchWholeCell","currencySymbol","valueFromParam","valueFromParamCheck","isArray","validateNumberToBeAtLeast","validateNumberToBeAtMost","getLanguage","buildErrorMapping","instanceOfSimpleDate","licenseKeyValidityState","checkIfParametersNotInConflict","init","mergedConfig","getConfig","inputValue","fromVersion","replacementName","console","warn","includes","typeCheck","valuesMap","params","param","names","duplicates","entry","paramNames","AlwaysDense","defaultParseToDateTime","defaultStringifyDateTime","defaultStringifyDuration","year","month","day","dateTimeString","dateFormat","timeFormat","trim","ampmtoken","substring","dateItems","timeItems","defaultParseToTime","defaultParseToDate","parsedDate","parsedTime","secondsExtendedRegexp","endsWith","formatItems","ampm","fractionOfSecondPrecision","hourIndex","indexOf","minuteIndex","secondIndex","hourString","hours","minuteString","minutes","secondString","seconds","round","pow","monthIndex","dayIndex","yearIndexLong","yearIndexShort","yearString","monthString","dayString","numDays","prefSumDays","obj","instanceOfSimpleTime","maxDate","DateTimeHelper","minDateAboluteValue","dateToNumberFromZero","maxDateValue","dateToNumber","epochYearZero","numberToSimpleDate","dayNumber","parseDateTimeFromConfigFormats","dateTime","timeToNumber","dateString","getNullYear","isValidDate","parseDateTimeFromFormats","dateFormatsIterate","timeFormatsIterate","parseSingleFormat","date","isNaN","isLeapYear","dateNumber","dayOfYear","dayToMonth","numberToSimpleTime","leapYearsCount","daysInMonth","countLeapDays","offsetMonth","offset","totalM","truncateDayInMonth","roundToNearestSecond","toBasisEU","DenseSparseChooseBasedOnThreshold","threshold","AlwaysSparse","formatArg","dateHelper","tryDateTime","numberToSimpleDateTime","tryDuration","numberFormat","padLeft","padRight","countChars","char","TokenType","FREE_TEXT","tokenParts","integerFormat","decimalFormat","valueParts","toFixed","integerPart","decimalPart","padSizeInteger","substr","padSizeDecimal","FORMAT","am","pm","dateFormatRegex","numberFormatRegex","formatToken","FormatExpressionType","matchDateFormat","lastIndex","m","matchNumberFormat","numberFormatToken","createTokens","regexTokens","index","beforeToken","lastToken","afterLastToken","parseForDateTimeFormat","dateFormatTokens","every","elem","isEscapeToken","DATE","parseForNumberFormat","numberFormatTokens","parse","_config","_stats","_columnSearch","_parser","_unparser","_cellContentParser","_evaluator","_lazilyTransformingAstService","_crudOperations","_exporter","_namedExpressions","_serialization","_functionRegistry","_emitter","Emitter","_evaluationSuspended","ensureEvaluationIsNotSuspended","getCellFormula","getCellSerialized","getSheetValues","getSheetFormulas","getSheetSerialized","genericAllSheetsGetter","getSheetDimensions","getAllSheetsValues","getAllSheetsFormulas","getAllSheetsSerialized","newParams","newConfig","mergeConfig","configNewLanguage","serializedSheets","withNewConfig","serializedNamedExpressions","getAllNamedExpressionsSerialized","newEngine","BuildEngineFactory","rebuildWithConfig","columnSearch","parser","unparser","cellContentParser","evaluator","crudOperations","exporter","serialization","addNamedExpression","scope","options","updateConfig","snapshot","undo","recomputeIfDependencyGraphNeedsIt","redo","isThereSomethingToUndo","isThereSomethingToRedo","topLeftCornerAddress","ensureRangeInSizeLimits","ensureItIsPossibleToChangeContent","cellContents","setCellContents","setRowOrder","validateSwapRowIndexes","testRowOrderForMatrices","newRowOrder","mappingFromOrder","swapRowIndexes","columnMapping","setColumnOrder","validateSwapColumnIndexes","testColumnOrderForMatrices","newColumnOrder","swapColumnIndexes","indexes","normalizedIndexes","ensureItIsPossibleToAddRows","ensureItIsPossibleToRemoveRows","ensureItIsPossibleToAddColumns","ensureItIsPossibleToRemoveColumns","sourceLeftCorner","destinationLeftCorner","operations","ensureItIsPossibleToMoveCells","moveCells","targetRow","ensureItIsPossibleToMoveRows","moveRows","targetColumn","ensureItIsPossibleToMoveColumns","moveColumns","copy","getRangeValues","cut","targetLeftCorner","paste","isClipboardEmpty","clearClipboard","undoRedo","clearRedoStack","clearUndoStack","cellRange","arrayOfAddressesInRange","subarray","ensureItIsPossibleToAddSheet","addedSheetName","emit","Events","SheetAdded","ensureSheetExists","getDisplayNameByName","changes","SheetRemoved","clearSheet","ensureItIsPossibleToChangeSheetContents","setSheetContent","getAdjacentNodesAddresses","getDisplayName","sheetNames","hasSheetWithName","numberOfSheets","newName","ensureItIsPossibleToRenameSheet","oldName","renameSheet","SheetRenamed","batchOperations","suspendEvaluation","beginUndoRedoBatchMode","commitUndoRedoBatchMode","resumeEvaluation","EvaluationSuspended","EvaluationResumed","ensureItIsPossibleToAddNamedExpression","NamedExpressionAdded","scopeId","namedExpressionForScope","newExpression","ensureItIsPossibleToChangeNamedExpression","changeNamedExpressionExpression","isItPossibleToRemoveNamedExpression","removedNamedExpression","removeNamedExpression","NamedExpressionRemoved","getAllNamedExpressionsNamesInScope","formulaString","extractTemporaryFormula","internalCellValue","runAndForget","exportValue","getFunctionTranslations","getRegisteredFunctionIds","getFunctionPlugin","getPlugins","parsedCellContent","exampleTemporaryFormulaAddress","CellContent","event","listener","on","once","off","getAndClearContentChanges","verticesToRecomputeFrom","verticesToRecompute","clearRecentlyChangedVertices","addAll","partialRun","exportedChanges","exportChanges","isEmpty","ValuesUpdated","engine","configInput","buildFromEngineState","buildFromSheet","sheets","buildFromSheets","buildEmpty","languageCode","registeredLanguages","languagePackage","plugin","FunctionRegistry","unregisterFunctionPlugin","registerFunction","unregisterFunction","unregisterAll","code","buildDate","releaseDate","Boolean","Empty","instance","MatrixFormula","isBoolean","tl","isMatrix","isError","upperCased","errorRegex","prototype","hasOwnProperty","CellContentParser","numberLiteralsHelper","currency","content","getSingletonInstance","getDate","getMonth","getFullYear","trimmedContent","mode","res","currencyMatcher","numericStringToMaybeNumber","parseAsNum","parsedDateNumber","dateStringToDateNumber","COMPLEX_NUMBER_SYMBOL","complexParsingRegexp","ArithmeticHelper","dateTimeHelper","lt","compare","leq","gt","geq","eq","neq","addWithEpsilonRaw","abs","actualEps","addWithEpsilon","typeOfResult","inferExtendedNumberTypeAdditive","ExtendedNumberFactory","unaryMinus","unaryPlus","unaryPercent","nonstrictadd","subtract","leftArg","rightArg","divide","DIV_BY_ZERO","inferExtendedNumberTypeMultiplicative","multiply","manyToExactComplex","coerced","coerceScalarToComplex","coerceNumbersExactRanges","manyToNumbers","manyToExactNumbers","coerceNumbersCoerceRangesDropNulls","manyToCoercedNumbersDropNulls","manyToOnlyNumbersDropNulls","coerceScalarToNumberOrError","collator","regexp","buildRegex","normalizeString","c","charAt","isWildcard","needsEscape","regexpStr","escapeNoCharacters","escapeNonWildcards","escapeAllCharacters","leftTmp","rightTmp","floatCmp","coerceEmptyToValue","stringCmp","numberCmp","coerceBooleanToNumber","mod","coerceToMaybeNumber","coerceNonDateScalarToMaybeNumber","vals","expandedVals","arr","rangeFn","coerceStringToComplex","match","val1","parseComplexToken","val2","typeFormat","coerceComplexToString","symb","re","im","imStr","coerceToRange","fromScalar","coerceToRangeNumbersOrError","coerceScalarToBoolean","argUppered","coerceScalarToString","zeroIfEmpty","isNumberOverflow","Infinity","fixNegativeZero","escapedCharacters","leftType","leftFormat","rightType","rightFormat","forceNormalizeString","form","normalize","unorm","collatorFromConfig","sensitivity","Intl","Collator","RemoveRowsCommand","normalizeRemovedIndexes","normalizedIndex","AddRowsCommand","normalizeAddedIndexes","AddColumnsCommand","RemoveColumnsCommand","Operations","ContentChanges","empty","allocateNamedExpressionAddressSpace","cmd","rowsRemovals","rowsSpans","rowsToRemove","rowsRemoval","doRemoveRows","doAddRows","columnsSpans","doAddColumns","columnsRemovals","columnsToRemove","columnsRemoval","doRemoveColumns","TRANSFORM_ASTS","transformation","RemoveSheetTransformer","performEagerTransformations","addTransformation","scopedNamedExpressions","getAllNamedExpressionsForScope","namedexpression","normalizeExpressionName","autoAddSheet","rowsToAdd","beginCombinedMode","commitCombinedMode","columnsToAdd","targetRange","breakNumericMatricesInRange","currentDataAtTarget","getRangeClipboardCells","valuesToRemove","rawValuesFromRange","removeValues","valuesToMove","moveValues","MoveCellsTransformer","addedGlobalNamedExpressions","updateNamedExpressionsForMovedCells","overwrittenCellsData","buffer","oldContent","source","target","rowRange","restoreClipboardCells","storeNamedExpressionInCell","lookupNextAddress","adjustNamedExpressionEdges","restoreCell","restoredNamedExpression","restoreNamedExpression","oldNamedExpression","getClipboardCell","remove","globalNamedExpression","workbookNamedExpressionOrPlaceholder","exchangeNode","isPositiveInteger","isRowOrColumnRange","hasSheetWithId","sourceSheetId","cells","addedNamedExpressions","clipboardCell","ClipboardCellType","updateNamedExpressionsForTargetAddress","setValueToCell","setFormulaToCellFromCache","PARSING_ERROR","setParsingErrorToCell","rowEffectivelyNotInSheet","removedCells","cellType","RemoveRowsTransformer","rowFrom","rowCount","columnEffectivelyNotInSheet","RemoveColumnsTransformer","columnFrom","columnCount","AddRowsTransformer","AddColumnsTransformer","sheetHeight","sheetWidth","newCellContent","setMatrixCellValue","change","addChange","formulaWithBraces","addNewMatrixVertex","setFormulaToCell","newSheetContent","setCellContent","formulaHash","absoluteDependencies","CleanOutOfScopeDependenciesTransformer","transformSingleAst","cleanedAst","rememberNewAst","cleanedDependencies","forceApplyPostponedTransformations","localVertex","globalVertex","fetchCachedResultForAst","sourceSheet","namedExpressionDependency","namedExpressionInTargetScope","isExpressionInScope","targetScopeExpressionVertex","copyOrFetchGlobalNamedExpressionVertex","a","b","merged","acc","startIndex","amount","shift","ClipboardOperationType","Clipboard","ClipboardOperations","clipboard","CUT","COPY","generateValues","matrixValue","addSingleCellValue","exportChange","_formulaAddress","transformRange","_start","_end","dependencyAddress","absoluteDependencySheet","absolutizedDependencyAddress","shiftedByColumns","transformCellAddress","newEnd","Transformer","matrixFormulaNodes","cachedAst","setFormula","setAddress","transformAst","fixNodeAddress","transformCellReferenceAst","transformCellRangeAst","transformColumnRangeAst","transformRowRangeAst","newCellAddress","newRange","transformCellRange","transformColumnRange","transformRowRange","shiftedByRows","dependentFormulaTransformer","DependentFormulaTransformer","transformAddress","absoluteDependencyAddress","shiftAbsoluteDimensions","shiftRelativeDimensions","absoluteStart","absoluteEnd","shouldMove","moved","rowInRange","columnInRange","startSheet","actualStart","actualEnd","startSCA","endSCA","GraphBuilder","buildStrategy","MatrixDetectionStrategy","SimpleStrategy","run","processDependencies","columnIndex","getSheetId","cellContent","existsVertex","parseResult","PARSER","buildMatrixVertex","addMatrixVertex","matrixHeuristic","GraphBuilderMatrixHeuristic","MATRIX_DETECTION","notMatrices","getSheetName","Array2d","_size","array","scanResult","findMatrices","possibleMatrix","fromRange","matrixFromPlainValues","setCellValue","colours","colour","rightColour","bottomColour","diag","diagColour","fromCoordinates","old","withStart","InternalNamedExpression","added","WorkbookStore","normalizedExpressionName","ne","WorksheetStore","NamedExpressions","nextNamedExpressionRow","workbookStore","worksheetStores","addressCache","isNameAvailable","worksheetStore","getExisting","worksheetStoreOrCreate","nextAddress","getAllNamedExpressions","storedNamedExpressions","expr","sheetNum","SHEET_FOR_WORKBOOK_EXPRESSIONS","doesContainRelativeReferences","isAbsolute","validateAsSheet","findBoundaries","cellsCount","currentRowWidth","currentCol","currentValue","sheetSize","isInvalid","TinyEmitter","BUILD_ENGINE_TOTAL","LazilyTransformingAstService","boundaries","numberLiteralHelper","NumberLiteralHelper","CrudOperations","GRAPH_BUILD","graphBuilder","buildGraph","Exporter","Serialization","Evaluator","buildEngine","newsheetprefix","namedExpressionInAddress","detailedError","cellValueRounding","originAddress","magnitudeMultiplierExponent","log10","placesMultiplier","transformations","combinedTransformer","CombinedTransformer","TRANSFORM_ASTS_POSTPONED","isIrreversible","storeDataForVersion","transformedAst","transformedAddress","buildColumnSearchStrategy","statistics","ColumnIndex","ColumnBinarySearch","computeListOfValuesInRange","AdvancedFind","rangeLowerBound","centerValueFn","center","lowerBound","cmp","keyMatcher","transformingService","binarySearchStrategy","removeSingleValue","columnMap","getColumnMap","valueIndex","upperBound","advancedFind","getValueIndex","actualVersion","relevantTransformations","getTransformationsFrom","BUILD_COLUMN_INDEX","addValue","shiftRows","removeRowsFromValues","rowIndex","afterRow","clipboardOperations","UndoRedo","addRowsCommand","abortCut","saveOperation","AddRowsUndoEntry","removeRowsCommand","RemoveRowsUndoEntry","addColumnsCommand","AddColumnsUndoEntry","removeColumnsCommand","RemoveColumnsUndoEntry","MoveCellsUndoEntry","MoveRowsUndoEntry","MoveColumnsUndoEntry","ensureItIsPossibleToCopy","isCutClipboard","isCopyClipboard","ensureItIsPossibleToCopyPaste","getContent","PasteUndoEntry","beginBatchMode","commitBatchMode","AddSheetUndoEntry","originalName","oldSheetContent","getSheetClipboardCells","RemoveSheetUndoEntry","RenameSheetUndoEntry","ClearSheetUndoEntry","ensureItIsPossibleToChangeCellContents","modifiedCellContents","newContent","SetCellContentsUndoEntry","SetSheetContentUndoEntry","SetRowOrderUndoEntry","validateRowOrColumnMapping","SetColumnOrderUndoEntry","newOrder","rowOrColumn","limit","sources","targets","isNonnegativeInteger","isUndoStackEmpty","isRedoStackEmpty","sheetScope","ensureNamedExpressionNameIsValid","AddNamedExpressionUndoEntry","ChangeNamedExpressionUndoEntry","RemoveNamedExpressionUndoEntry","ensureNamedExpressionIsValid","newRowsCount","numberOfRowsToAdd","newColumnsCount","numberOfColumnsToAdd","sourceStart","targetStart","existingSheetId","isFormulaMatrixAtAddress","inputAddress","isNameValid","parsedExpression","BaseUndoEntry","command","undoRemoveRows","redoRemoveRows","undoMoveCells","redoMoveCells","undoAddRows","redoAddRows","undoSetRowOrder","redoSetRowOrder","undoSetColumnOrder","redoSetColumnOrder","undoSetSheetContent","redoSetSheetContent","undoStart","undoEnd","undoMoveRows","redoMoveRows","undoMoveColumns","redoMoveColumns","undoAddColumns","redoAddColumns","undoRemoveColumns","redoRemoveColumns","undoAddSheet","redoAddSheet","undoRemoveSheet","redoRemoveSheet","undoRenameSheet","redoRenameSheet","undoClearSheet","redoClearSheet","undoSetCellContents","redoSetCellContents","undoPaste","redoPaste","undoAddNamedExpression","redoAddNamedExpression","undoRemoveNamedExpression","redoRemoveNamedExpression","undoChangeNamedExpression","redoChangeNamedExpression","BatchUndoEntry","arguments","operation","undoBatch","redoBatch","undoStack","redoStack","oldData","batchUndoEntry","addUndoEntry","astHash","currentOldData","undoEntry","doUndo","batchOperation","reversedOperations","restoreOldDataFromVersion","addedRowsSpans","addedColumnsSpans","cellContentData","restoreOperationOldContent","redoEntry","doRedo","oldDataToRestore","entryToRestore","interpreter","Interpreter","TOP_SORT","EVALUATION","recomputeFormulas","vertices","isComputed","newCellValue","evaluateAstToCellValue","evaluateAstToRangeValue","newCellMatrix","addMatrixChange","setErrorValue","clearCache","valueOrNull","CYCLE","tmpRanges","interpreterValue","evaluateAst","initializePlugins","arithmeticHelper","criterionBuilder","CriterionBuilder","evaluateAstWithoutPostprocessing","wrapperForAddress","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","leftResult","rightResult","passErrors","wrapperBinary","wrapperUnary","functionIsProtected","pluginEntry","getFunction","pluginFunction","pluginInstance","rangeSpansOneSheet","onlyNumbersDataWithRange","onlyRange","gpu","attachAddress","CriterionType","buildCriterion","operator","trueString","getMaybeFunctionTranslation","falseString","criterion","parseCriterion","lambda","buildCriterionLambda","EQUAL","ANY_CRITERION_REGEX","criterionValue","criterionType","StrToCriterionType","boolvalue","NOT_EQUAL","GREATER_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN","LESS_THAN_OR_EQUAL","eqMatcherFunction","neqMatcherFunction","validateAndReturnMetadataFromName","implementedFunctions","aliases","functionNotDeclaredInPlugin","volatileFunctions","structuralChangeFunctions","functionsWhichDoesNotNeedArgumentsToBeComputed","instancePlugins","loadPluginFunctions","protectedFunctions","loadFunctionUnprotected","categorizeFunction","instances","foundPluginInstance","methodName","method","functionMetadata","isVolatile","doesNotNeedArgumentsToBeComputed","isDependentOnSheetStructureChange","loadTranslations","loadPluginFunction","cannotUnregisterFunctionWithId","protectedPlugins","protectedPlugin","cannotUnregisterProtectedPlugin","registeredPlugin","_protectedPlugins","getRegisteredLanguagesCodes","extendFunctions","registry","cannotRegisterFunctionWithId","functionMethodNotFound","VersionPlugin","LICENSE_STATUS_MAP","runFunction","metadata","validityState","status","parameters","ArgumentTypes","functionDefinition","runFunctionTemplate","runMatrixFunction","argumentDefinitions","scalarValues","expandRanges","listOfScalarValues","coercedArguments","argCoerceFailure","repeatLastArgs","ignorable","defaultValue","optionalArg","coercedArg","coerceToType","argumentType","SCALAR","returnNumberWrapper","returnNumberType","runFunctionWithReferenceArgument","noArgCallback","referenceCallback","nonReferenceCallback","fromAst","asts","scalarValue","coercedType","RANGE","ANY","INTEGER","maxValue","minValue","lessThan","greaterThan","NOERROR","COMPLEX","passSubtype","numberPattern","allThousandSeparatorsRegex","formulaVertex","genericSheetGetter","getter","sheetGetter","displayNames","newUnparser","consoleMessages","invalid","expired","keyValidityDate","missing","_notified","checkLicenseKeyValidity","messageDescriptor","template","vars","releaseDays","getTime","keyValidityDays","formatDate","monthNames","_rl","_hd","parseInt","_pi","_nm","_ss","l","_cp","extractTime","checkKeySchema","sp","padStart","dictionary","ABS","ACOS","ACOSH","ACOT","ACOTH","AND","ARABIC","ASIN","ASINH","ATAN2","ATAN","ATANH","AVERAGE","AVERAGEA","AVERAGEIF","BASE","BIN2DEC","BIN2HEX","BIN2OCT","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","CEILING","CHAR","CHOOSE","CLEAN","CODE","COLUMN","COLUMNS","CONCATENATE","CORREL","COS","COSH","COT","COTH","COUNT","COUNTA","COUNTBLANK","COUNTIF","COUNTIFS","COUNTUNIQUE","CSC","CSCH","CUMIPMT","CUMPRINC","DATEDIF","DATEVALUE","DAY","DAYS360","DAYS","DB","DDB","DEC2BIN","DEC2HEX","DEC2OCT","DECIMAL","DEGREES","DELTA","DOLLARDE","DOLLARFR","EDATE","EFFECT","EOMONTH","ERF","ERFC","EVEN","EXACT","EXP","FALSE","FIND","FORMULATEXT","FV","FVSCHEDULE","HEX2BIN","HEX2DEC","HEX2OCT","HLOOKUP","HOUR","IF","IFERROR","IFNA","INDEX","INT","INTERVAL","IPMT","ISBINARY","ISBLANK","ISERR","ISERROR","ISEVEN","ISFORMULA","ISLOGICAL","ISNA","ISNONTEXT","ISNUMBER","ISODD","ISOWEEKNUM","ISPMT","ISREF","ISTEXT","LEFT","LEN","LN","LOG10","LOG","LOWER","MATCH","MAX","MAXA","MAXPOOL","MEDIAN","MEDIANPOOL","MID","MIN","MINA","MINUTE","MIRR","MMULT","MOD","MONTH","NETWORKDAYS","NOMINAL","NOT","NOW","NPER","NPV","OCT2BIN","OCT2DEC","OCT2HEX","ODD","OFFSET","PI","PMT","PDURATION","PRODUCT","POWER","PPMT","PROPER","PV","RADIANS","RAND","RATE","REPLACE","REPT","RIGHT","ROMAN","ROUND","ROUNDDOWN","ROUNDUP","ROW","ROWS","RRI","SEARCH","SEC","SECH","SECOND","SHEET","SHEETS","SIN","SINH","SLN","SPLIT","SQRT","STDEVA","STDEVPA","SUBSTITUTE","SUBTOTAL","SUM","SUMIF","SUMIFS","SUMPRODUCT","SUMSQ","SWITCH","SYD","T","TAN","TANH","TBILLEQ","TBILLPRICE","TBILLYIELD","TEXT","TIME","TIMEVALUE","TODAY","TRANSPOSE","TRIM","TRUE","TRUNC","UNICHAR","UNICODE","UPPER","VARA","VARPA","VLOOKUP","WEEKDAY","WEEKNUM","WORKDAY","XNPV","XOR","YEAR","YEARFRAC","VARP","VAR","STDEVP","STDEV","FISHER","FISHERINV","GAMMA","GAMMALN","GAUSS","FACT","FACTDOUBLE","COMBIN","COMBINA","GCD","LCM","MROUND","MULTINOMIAL","QUOTIENT","RANDBETWEEN","SERIESSUM","SIGN","SQRTPI","SUMX2MY2","SUMX2PY2","SUMXMY2","GAMMADIST","GAMMAINV","BETADIST","BETAINV","BINOMDIST","BESSELI","BESSELJ","BESSELK","BESSELY","CHIDIST","CHIINV","FDIST","FINV","WEIBULL","POISSON","HYPGEOMDIST","TDIST","TINV","LOGINV","LOGNORMDIST","NORMDIST","NORMINV","NORMSDIST","NORMSINV","PHI","IMABS","IMAGINARY","IMARGUMENT","IMCONJUGATE","IMCOS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMDIV","IMEXP","IMLN","IMLOG10","IMLOG2","IMPOWER","IMPRODUCT","IMREAL","IMSEC","IMSECH","IMSIN","IMSINH","IMSQRT","IMSUB","IMSUM","IMTAN","LARGE","SMALL","AVEDEV","CONFIDENCE","DEVSQ","GEOMEAN","HARMEAN","CRITBINOM","PEARSON","RSQ","STANDARDIZE","ZTEST","FTEST","STEYX","SLOPE","CHITEST","TTEST","SKEW","WEIBULLDIST","VARS","TINV2T","TDISTRT","TDIST2T","STDEVS","FINVRT","FDISTRT","CHIDISTRT","CHIINVRT","COVARIANCEP","COVARIANCES","LOGNORMINV","POISSONDIST","SKEWP","FLOOR","AbsPlugin","MAX_48BIT_INTEGER","SHIFT_MIN_POSITIONS","SHIFT_MAX_POSITIONS","BitShiftPlugin","shiftLeft","shiftRight","positions","validate","BitwiseLogicOperationsPlugin","BooleanPlugin","condition","arg2","arg3","cnt","selector","n","arg1","CharPlugin","trunc","fromCodePoint","CodePlugin","codePointAt","CountBlankPlugin","counter","CountUniquePlugin","valuesSet","errorsSet","DateTimePlugin","isoweeknumCore","absoluteDay","relativeNumberToAbsoluteNumber","yearStart","yearStartAbsolute","firstThursdayAbs","days360Core","startDate","endDate","nStart","nEnd","toBasisUS","getEpochYearZero","delta","getWithinBounds","h","numberOfMonthsToShift","endOfMonth","timeNumber","numberRepresentation","weekdayOffsets","getHours","getMinutes","getSeconds","getDay","newDate","unit","yearLengthForBasis","second","minute","hour","holidays","networkdayscore","weekend","workdaycore","multiplier","weekendPattern","computeWeekendPattern","filteredHolidays","simpleRangeToFilteredHolidays","countWorkdays","upper","lower","mid","sortedHolidays","ans","holidaysArr","processedHolidays","sortedArray","workdayPatterns","DegreesPlugin","DeltaPlugin","ExpPlugin","exp","FinancialPlugin","pmtCore","ipmtCore","ppmtCore","fvCore","rate","periods","cost","salvage","life","period","initial","total","factor","fraction","payment","present","future","log","guess","epsMax","iterMax","f","dy","df","settlement","maturity","discount","denom","price","ratios","npvCore","frate","rrate","posFlag","negFlag","posValues","negValues","nom","pv","fv","dates","valArr","valArrNum","dateArr","dateArrNum","term","FormulaTextPlugin","InformationPlugin","rangeAst","rangeValue","topLeftCornerValue","_ast","sheetNumber","optional","IsEvenPlugin","IsOddPlugin","LogarithmPlugin","base","parseFloat","MathConstantsPlugin","sqrt","MatrixPlugin","createCpuKernel","kernel","outputSize","apply","thread","createGpuJsKernel","getGpuInstance","createKernel","setPrecision","setOutput","leftMatrix","rightMatrix","sum","onlyNumbersDataWithoutRange","leftCornerX","leftCornerY","currentMax","currentMin","i2","j2","numberOfElements","iter","medianGuess","medianGuessCount","i3","j3","MedianPlugin","ModuloPlugin","dividend","divisor","identityMap","zeroForInfinite","MomentsAggregate","sumsq","NumericAggregationPlugin","doSum","strictlyNumbers","doMax","NEGATIVE_INFINITY","numbersBooleans","doMin","doCount","doCounta","doAverage","compose","single","averageValue","doVarS","doVarP","reduceAggregateA","varSValue","varPValue","doStdevS","doStdevP","doProduct","functionType","reduceAggregate","initialAccValue","reducingFunction","mapFunction","coercionFunction","evaluateRange","coercedRangeValues","err","rangeStart","rangeEnd","getFunctionValue","rangeValues","setFunctionValue","rangeResult","actualRange","cachedValue","PowerPlugin","RadiansPlugin","MAX_LENGTH","DECIMAL_NUMBER_OF_BITS","MIN_BASE","MAX_BASE","ALPHABET","RadixConversionPlugin","places","decimalToBaseWithExactPadding","binary","binaryWithSign","coerceStringToBase","twoComplementToDecimal","octal","octalWithSign","hexadecimal","hexadecimalWithSign","decimalToBaseWithMinimumPadding","maxLength","baseAlphabet","regex","maxValFromBase","minValFromBase","decimalToRadixComplement","parsed","RandomPlugin","random","ceil","findNextOddNumber","ceiled","findNextEvenNumber","RoundingPlugin","numberToRound","rounddown","coercedNumberToRound","significance","SqrtPlugin","AverageResult","sumifCacheKey","conditions","conditionsStrings","conditionRange","averageifCacheKey","countifsCacheKey","SumifPlugin","conditionArg","valuesArg","fromCellValue","CriterionFunctionCompute","compute","Condition","criterionPackage","averageResult","ifFilter","findSmallerRangeForMany","conditionRanges","valuesRange","restValuesRange","restConditionRanges","reduceInitialValue","composeFunction","simpleValuesRange","sameDimensionsAs","valuesRangeVertex","tryToGetRangeVertexForRangeValue","conditionsVertices","fullCriterionString","cachedResult","findAlreadyComputedValueInCache","incrementCriterionFunctionFullCacheUsed","buildNewCriterionCache","evaluateRangeValue","setCriterionFunctionValues","addDependentCacheRange","iterable","getCriterionFunctionValue","criterionLambdas","conditionsIterators","filteredValues","reduceFunction","simpleConditionRanges","smallerCache","newCache","rcr","newCacheValue","incrementCriterionFunctionPartialCacheUsed","conditionalIterables","computableIterable","computable","conditionalSplits","conditionalIterable","cs","conditionalFirsts","zip","conditionalFirst","criterionLambda","rest","arr1","arr2","done","SumprodPlugin","lit","rit","r","lval","rval","TextPlugin","stringToSplit","indexToUse","splittedString","word","repeat","startPosition","numberOfChars","newText","normalizedText","requiresRegex","searchString","oldText","occurrence","oldTextRegexp","shiftedText","TrigonometryPlugin","acos","asin","cos","sin","tan","atan","atan2","sinh","asinh","cosh","acosh","tanh","atanh","LookupPlugin","rowSearch","RowSearchStrategy","doVlookup","doHlookup","doMatch","searchedRange","searchInRange","colIndex","searchStrategy","RomanPlugin","romanMode","inputString","minusSign","work","eatToken","inputAcc","absorb","valAcc","SimpleArithmerticPlugin","StatisticalPlugin","erfc","cumulative","exponential","cdf","pdf","gammafn","alphaVal","betaVal","gamma","gammaln","inv","z","normal","A","B","beta","succ","trials","prob","binomial","alpha","deg","chisquare","p","deg1","deg2","centralF","shape","scale","weibull","mean","poisson","numberS","populationS","numberPop","hypgeom","studentt","stddev","lognormal","nf","ns","negbin","NEGBINOMDIST","EXPONDIST","M","_horner","_bessel_iter","f0","f1","sign","tdx","f2","o","_bessel_wrap","bessel0","bessel1","nonzero","bessel","b0","b1","besselj","W","b0_a1a","b0_a2a","b0_a1b","b0_a2b","a1","a2","xx","b1_a1a","b1_a2a","b1_a1b","b1_a2b","jsum","bjp","bj","bjm","tox","bessely","besseli","b0_a","b0_b","b1_a","b1_b","bip","bi","bim","besselk","erf","cof","isneg","dd","ty","tmp","erfcinv","pp","q","fact","xden","xnum","yi","lowRegGamma","gammapinv","ser","aln","ap","del","ITMAX","an","EPS","gln","lna1","afac","std","betafn","betaln","ibeta","ibetainv","lna","lnb","al","w","bt","betacf","fpmin","qab","qap","qam","m2","aa","k","combination","betacdf","eps","betinc","a0","m9","c9","combinationln","factorial","factorialln","dof","df1","df2","N","scaledPDF","samplesDone","scaledCDF","dof2","mu","sigma","sumsqerr","meanv","variance","flag","stdev","normalci","tci","product","prod","geomean","covariance","arr1Len","sq_dev","corrcoeff","MathPlugin","combin","processedArgs","binaryGCD","MAX_SAFE_INTEGER","binaryLCM","coefs","coef","rangeX","rangeY","valsX","valsY","valX","valY","ComplexPlugin","div","coerceComplexExactRanges","mul","sub","ln","power","re1","im1","re2","im2","nomRe","nomIm","StatisticalAggregationPlugin","avg","dataX","dataY","parseTwoArrays","arrX","arrY","vx","vy","tails","sx","sy","COVAR","xit","yit","xval","yval"],"mappings":"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A;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,sBAAsB,yCAAyC,WAAW,IAAI;AAC9E,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA,KAAK;AACL;AACA,mDAAmD,iDAAiD;AACpG,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,kCAAkC;AAChH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gFAAgF,eAAe;AAC/F;AACA;AACA;;AAEA,GAAG,yEAAyE;AAC5E;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED,GAAG,qDAAqD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0BAA0B,mBAAmB,EAAE;AAC/C,0BAA0B,oBAAoB;AAC9C,CAAC;;AAED,GAAG,2EAA2E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,GAAG,uDAAuD;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,GAAG,0DAA0D,kCAAkC,EAAE,GAAG;AACpG;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY,QAAQ;AACzC;AACA,0CAA0C;AAC1C,GAAG;;AAEH,KAAK,4DAA4D;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtTA;AACA,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,2BAA2B,mBAAO,CAAC,EAA4C;;AAE/E,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA,sBAAsB,mBAAO,CAAC,EAAgC;;AAE9D;;;;;;;ACFA,WAAW,mBAAO,CAAC,EAAmB;AACtC,UAAU,mBAAO,CAAC,EAAkB;AACpC,mCAAmC,mBAAO,CAAC,EAAwC;AACnF,qBAAqB,mBAAO,CAAC,EAAqC;;AAElE;AACA,+CAA+C;AAC/C;AACA;AACA,GAAG;AACH;;;;;;;ACVA,WAAW,mBAAO,CAAC,EAAoC;AACvD,oBAAoB,mBAAO,CAAC,EAA6B;AACzD,eAAe,mBAAO,CAAC,EAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,yBAAyB,mBAAO,CAAC,EAAmC;;AAEpE;;AAEA,qBAAqB,gEAAgE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,8BAA8B;AAC9B,+BAA+B;AAC/B,+BAA+B;AAC/B,2CAA2C;AAC3C,SAAS;AACT,+BAA+B;AAC/B,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvEA,eAAe,mBAAO,CAAC,EAAwB;AAC/C,cAAc,mBAAO,CAAC,EAAuB;AAC7C,sBAAsB,mBAAO,CAAC,EAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACnBA;AACA;AACa;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,kBAAkB,mBAAO,CAAC,CAA0B;AACpD,aAAa,mBAAO,CAAC,CAAqB;AAC1C,UAAU,mBAAO,CAAC,EAAkB;AACpC,eAAe,mBAAO,CAAC,EAAwB;AAC/C,qBAAqB,mBAAO,CAAC,EAAqC;AAClE,gCAAgC,mBAAO,CAAC,EAA0C;;AAElF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,KAAK,6BAA6B;AAClC;AACA,GAAG;AACH;;;;;;;ACjDA,4BAA4B,mBAAO,CAAC,EAAuC;;AAE3E;AACA;AACA;;;;;;;;ACJa;AACb,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,uBAAuB,mBAAO,CAAC,EAAiC;AAChE,gBAAgB,mBAAO,CAAC,EAAwB;AAChD,0BAA0B,mBAAO,CAAC,EAA6B;AAC/D,qBAAqB,mBAAO,CAAC,EAA8B;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8BAA8B;AAC9B,gCAAgC;AAChC,UAAU;AACV,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACpDA,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,aAAa,mBAAO,CAAC,EAA4B;AACjD,2BAA2B,mBAAO,CAAC,EAAqC;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;ACnBA,aAAa,mBAAO,CAAC,CAAqB;AAC1C,mBAAmB,mBAAO,CAAC,EAA4B;AACvD,2BAA2B,mBAAO,CAAC,EAA8B;AACjE,kCAAkC,mBAAO,CAAC,EAA6C;AACvF,sBAAsB,mBAAO,CAAC,EAAgC;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCa;AACb,aAAa,mBAAO,CAAC,CAAqB;AAC1C,kBAAkB,mBAAO,CAAC,EAA2B;AACrD,6BAA6B,mBAAO,CAAC,GAAgC;AACrE,iBAAiB,mBAAO,CAAC,GAAyB;AAClD,qBAAqB,mBAAO,CAAC,GAA8B;AAC3D,eAAe,mBAAO,CAAC,EAAwB;AAC/C,0BAA0B,mBAAO,CAAC,EAA6B;AAC/D,sBAAsB,mBAAO,CAAC,EAA8B;;AAE5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;;;;;;ACnEA,eAAe,mB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,CAACK,kBAAxB,CAAlD,EAA+F,IAAIC,4BAAJ,EAA/F,EAAoH7P,KAApH,EAA2HC,4BAA3H,EAAyJC,gBAAzJ,EAA2KC,gBAA3K,CAAP;AACH;;;;;;;;;;;;AChIL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3uBa;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,WAAW,mBAAO,CAAC,EAA8B;AACjD,mCAAmC,mBAAO,CAAC,EAA+C;;AAE1F;;AAEA;AACA;AACA;AACA,GAAG,6DAA6D;AAChE;AACA;AACA;AACA,CAAC;;;;;;;;ACdY;AACb,iBAAiB,mBAAO,CAAC,GAAyB;AAClD,uBAAuB,mBAAO,CAAC,GAAgC;;AAE/D;AACA;AACA;AACA,yBAAyB,gEAAgE;AACzF,CAAC;;;;;;;;ACRY;AACb,qBAAqB,mBAAO,CAAC,EAAqC;AAClE,aAAa,mBAAO,CAAC,EAA4B;AACjD,kBAAkB,mBAAO,CAAC,EAA2B;AACrD,WAAW,mBAAO,CAAC,EAAoC;AACvD,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,cAAc,mBAAO,CAAC,GAAsB;AAC5C,qBAAqB,mBAAO,CAAC,EAA8B;AAC3D,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,kBAAkB,mBAAO,CAAC,CAA0B;AACpD,cAAc,mBAAO,CAAC,GAAgC;AACtD,0BAA0B,mBAAO,CAAC,EAA6B;;AAE/D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,iEAAiE,iCAAiC;AAClG,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kCAAkC;AAClC,oCAAoC;AACpC,cAAc;AACd,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;ACzLa;AACb,iBAAiB,mBAAO,CAAC,EAA2B;AACpD,2BAA2B,mBAAO,CAAC,EAAqC;AACxE,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,kBAAkB,mBAAO,CAAC,CAA0B;;AAEpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC,KAAK;AACL;AACA;;;;;;;;AClBa;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,YAAY,mBAAO,CAAC,CAAoB;AACxC,cAAc,mBAAO,CAAC,EAAuB;AAC7C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,qBAAqB,mBAAO,CAAC,EAA8B;AAC3D,yBAAyB,mBAAO,CAAC,EAAmC;AACpE,mCAAmC,mBAAO,CAAC,EAA+C;AAC1F,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,iBAAiB,mBAAO,CAAC,EAAgC;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA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AEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACtFa;AACb,eAAe,mBAAO,CAAC,EAAuB;AAC9C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,YAAY,mBAAO,CAAC,CAAoB;AACxC,YAAY,mBAAO,CAAC,GAA2B;;AAE/C;AACA;AACA;;AAEA,qCAAqC,6BAA6B,0BAA0B,YAAY,EAAE;AAC1G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,GAAG,eAAe;AACrB;;;;;;;;ACxBa;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,cAAc,mBAAO,CAAC,GAA2B;AACjD,0BAA0B,mBAAO,CAAC,GAAqC;AACvE,qBAAqB,mBAAO,CAAC,EAAgC;AAC7D,cAAc,mBAAO,CAAC,GAA6B;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,qEAAqE;AACxE;AACA;AACA;AACA,CAAC;;;;;;;AClBD,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,eAAe,mBAAO,CAAC,EAAwB;AAC/C,oBAAoB,mBAAO,CAAC,EAA6B;AACzD,eAAe,mBAAO,CAAC,EAAwB;;AAE/C,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,uCAAuC;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvCA,cAAc,mBAAO,CAAC,EAA0B;AAChD,aAAa,mBAAO,CAAC,CAAqB;;AAE1C;;;;;;;;ACHa;AACb,oCAAoC,mBAAO,CAAC,GAAiD;AAC7F,eAAe,mBAAO,CAAC,GAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,6BAA6B,mBAAO,CAAC,EAAuC;AAC5E,yBAAyB,mBAAO,CAAC,GAAkC;AACnE,yBAAyB,mBAAO,CAAC,GAAmC;AACpE,eAAe,mBAAO,CAAC,EAAwB;AAC/C,qBAAqB,mBAAO,CAAC,GAAmC;AAChE,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,oBAAoB,mBAAO,CAAC,GAAoC;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACrIY;AACb;AACA,mBAAO,CAAC,GAA2B;AACnC,eAAe,mBAAO,CAAC,EAAuB;AAC9C,iBAAiB,mBAAO,CAAC,GAA0B;AACnD,YAAY,mBAAO,CAAC,CAAoB;AACxC,sBAAsB,mBAAO,CAAC,EAAgC;AAC9D,kCAAkC,mBAAO,CAAC,EAA6C;;AAEvF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4CAA4C;AACrE;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;;AAEA,2BAA2B,mBAAmB,aAAa;;AAE3D;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,gBAAgB;AAChB;AACA,cAAc;AACd,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,4CAA4C;AAC5E;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;;AAEA;AACA;;;;;;;AChIA,eAAe,mBAAO,CAAC,EAAwB;AAC/C,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,sBAAsB,mBAAO,CAAC,EAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZa;AACb,aAAa,mBAAO,CAAC,EAA+B;;AAEpD;AACA;AACA;AACA;AACA;;;;;;;ACPA,cAAc,mBAAO,CAAC,EAAe;AACrC,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACpBa;AACb,oCAAoC,mBAAO,CAAC,GAAiD;AAC7F,eAAe,mBAAO,CAAC,EAAwB;AAC/C,eAAe,mBAAO,CAAC,EAAwB;AAC/C,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,6BAA6B,mBAAO,CAAC,EAAuC;AAC5E,yBAAyB,mBAAO,CAAC,GAAmC;AACpE,sBAAsB,mBAAO,CAAC,GAA+B;AAC7D,iBAAiB,mBAAO,CAAC,GAAmC;;AAE5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACjGD,eAAe,mBAAO,CAAC,EAAwB;;AAE/C;AACA;AACA,yCAAyC,IAAI;AAC7C,kDAAkD,IAAI;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;ACnCA;;AACA;;;;;;;;AACA;AACO,IAAIyX,iBAAJ;;;AACP,CAAC,UAAUA,iBAAV,EAA6B;AAC1B;AACAA,mBAAiB,CAAC,yBAAD,CAAjB,GAA+C,gBAA/C;AACA;;AACAA,mBAAiB,CAAC,yBAAD,CAAjB,GAA+C,yBAA/C;AACA;;AACAA,mBAAiB,CAAC,6BAAD,CAAjB,GAAmD,6BAAnD;AACA;;AACAA,mBAAiB,CAAC,6BAAD,CAAjB,GAAmD,6BAAnD;AACH,CATD,EASGA,iBAAiB,iCAAKA,iBAAiB,GAAG,EAAzB,CATpB;;IAUahE,W;AACT,uBAAYzT,KAAZ,EAAmBI,GAAnB,EAAwBH,GAAxB,EAA6BP,IAA7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,IAAL;AAAW;AACPxyB,gBAAM,IAAIo2B,OAAO,CAAClC,QAAQ,CAACrD,IAAT,GAAgB,GAAjB,EAAsBzlB,KAAK,CAAC5Y,KAAN,CAAYqH,MAAlC,CAAjB;AACA;AACH;;AACD,WAAK,MAAL;AAAa;AACTmG,gBAAM,IAAIk0B,QAAQ,CAACrD,IAAnB;AACA;AACH;;AACD;;AACA,WAAK,OAAL;AACA,WAAK,KAAL;AAAY;AACR,mCAAiBzlB,KAAK,CAAC5Y,KAAN,CAAYkS,KAAZ,CAAkB,GAAlB,CAAjB;AAAA;AAAA,cAAO2yB,EAAP;AAAA,cAAWC,EAAX;;AACAt3B,gBAAM,IAAIk0B,QAAQ,CAAC5B,KAAT,GAAiB,EAAjB,GAAsB+E,EAAtB,GAA2BC,EAArC;AACA;AACH;;AACD;AAAS;AACL,iBAAOhqC,SAAP;AACH;AArDL;AAuDH;;AACD,SAAO0S,MAAP;AACH,C;;;;;;;ACrMY;AACb,QAAQ,mBAAO,CAAC,CAAqB;AACrC,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,sBAAsB,mBAAO,CAAC,GAAgC;AAC9D,aAAa,mBAAO,CAAC,GAA4B;AACjD,YAAY,mBAAO,CAAC,CAAoB;;AAExC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,CAAC;;AAED;AACA;AACA,GAAG,gDAAgD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;A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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAe8Y,WAAf,EAA4B;AACxB,aAAO,KAAK63B,cAAL,CAAoBM,cAApB,CAAmCn4B,WAAnC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,2BAAkBA,WAAlB,EAA+B;AAC3B,WAAKk4B,8BAAL;AACA,aAAO,KAAKL,cAAL,CAAoBO,iBAApB,CAAsCp4B,WAAtC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAe/M,OAAf,EAAwB;AACpB,WAAKilC,8BAAL;AACA,aAAO,KAAKL,cAAL,CAAoBQ,cAApB,CAAmCplC,OAAnC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiBA,OAAjB,EAA0B;AACtB,aAAO,KAAK4kC,cAAL,CAAoBS,gBAApB,CAAqCrlC,OAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBA,OAAnB,EAA4B;AACxB,WAAKilC,8BAAL;AACA,aAAO,KAAKL,cAAL,CAAoBU,kBAApB,CAAuCtlC,OAAvC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAyB;AAAA;;AACrB,aAAO,KAAK4kC,cAAL,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lB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,oBAAW;AACP,aAAO,KAAKhD,MAAL,CAAYiD,QAAZ,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAO;AACH,WAAK1C,eAAL,CAAqB2C,IAArB;;AACA,aAAO,KAAKC,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAO;AACH,WAAK5C,eAAL,CAAqB6C,IAArB;;AACA,aAAO,KAAKD,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAyB;AACrB,aAAO,KAAK5C,eAAL,CAAqB8C,sBAArB,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAyB;AACrB,aAAO,KAAK9C,eAAL,CAAqB+C,sBAArB,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uCAA8BC,oBAA9B,EAA2E;AAAA,UAAvBjjC,KAAuB,uEAAf,CAAe;AAAA,UAAZC,MAAY,uEAAH,CAAG;;AACvE,UAAI;AACA,aAAKggC,eAAL,CAAqBiD,uBAArB,CAA6CrsC,qCAAkBkJ,QAAlB,CAA2BkjC,oBAA3B,EAAiDjjC,KAAjD,EAAwDC,MAAxD,CAA7C;;AACA,aAAK,IAAIgU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjU,KAApB,EAA2BiU,CAAC,EAA5B,EAAgC;AAC5B,eAAK,IAAI0P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1jB,MAApB,EAA4B0jB,CAAC,EAA7B,EAAiC;AAC7B,iBAAKsc,eAAL,CAAqBkD,iCAArB,CAAuD;AACnDxuC,iBAAG,EAAEsuC,oBAAoB,CAACtuC,GAArB,GAA2Bsf,CADmB;AAEnDzf,iBAAG,EAAEyuC,oBAAoB,CAACzuC,GAArB,GAA2BmvB,CAFmB;AAGnDpvB,mBAAK,EAAE0uC,oBAAoB,CAAC1uC;AAHuB,aAAvD;AAKH;AACJ;AACJ,OAXD,CAYA,OAAOsc,CAAP,EAAU;AACN,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,yBAAgBoyB,oBAAhB,EAAsCG,YAAtC,EAAoD;AAChD,WAAKnD,eAAL,CAAqBoD,eAArB,CAAqCJ,oBAArC,EAA2DG,YAA3D;;AACA,aAAO,KAAKP,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAernC,OAAf,EAAwBi3B,UAAxB,EAAoC;AAChC,WAAKwN,eAAL,CAAqBqD,WAArB,CAAiC9nC,OAAjC,EAA0Ci3B,UAA1C;;AACA,aAAO,KAAKoQ,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,sCAA6BrnC,OAA7B,EAAsCi3B,UAAtC,EAAkD;AAC9C,UAAI;AACA,aAAKwN,eAAL,CAAqBsD,sBAArB,CAA4C/nC,OAA5C,EAAqDi3B,UAArD;;AACA,aAAKwN,eAAL,CAAqBuD,uBAArB,CAA6ChoC,OAA7C,EAAsDi3B,UAAtD;;AACA,eAAO,IAAP;AACH,OAJD,CAKA,OAAO5hB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYrV,OAAZ,EAAqBioC,WAArB,EAAkC;AAC9B,UAAM9c,OAAO,GAAG,KAAKsZ,eAAL,CAAqByD,gBAArB,CAAsCloC,OAAtC,EAA+CioC,WAA/C,EAA4D,KAA5D,CAAhB;;AACA,aAAO,KAAKE,cAAL,CAAoBnoC,OAApB,EAA6BmrB,OAA7B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mCAA0BnrB,OAA1B,EAAmCioC,WAAnC,EAAgD;AAC5C,UAAI;AACA,YAAMhR,UAAU,GAAG,KAAKwN,eAAL,CAAqByD,gBAArB,CAAsCloC,OAAtC,EAA+CioC,WAA/C,EAA4D,KAA5D,CAAnB;;AACA,aAAKxD,eAAL,CAAqBsD,sBAArB,CAA4C/nC,OAA5C,EAAqDi3B,UAArD;;AACA,aAAKwN,eAAL,CAAqBuD,uBAArB,CAA6ChoC,OAA7C,EAAsDi3B,UAAtD;;AACA,eAAO,IAAP;AACH,OALD,CAMA,OAAO5hB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,2BAAkBrV,OAAlB,EAA2BooC,aAA3B,EAA0C;AACtC,WAAK3D,eAAL,CAAqB4D,cAArB,CAAoCroC,OAApC,EAA6CooC,aAA7C;;AACA,aAAO,KAAKf,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,yCAAgCrnC,OAAhC,EAAyCooC,aAAzC,EAAwD;AACpD,UAAI;AACA,aAAK3D,eAAL,CAAqB6D,yBAArB,CAA+CtoC,OAA/C,EAAwDooC,aAAxD;;AACA,aAAK3D,eAAL,CAAqB8D,0BAArB,CAAgDvoC,OAAhD,EAAyDooC,aAAzD;;AACA,eAAO,IAAP;AACH,OAJD,CAKA,OAAO/yB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAerV,OAAf,EAAwBwoC,cAAxB,EAAwC;AACpC,UAAMrd,OAAO,GAAG,KAAKsZ,eAAL,CAAqByD,gBAArB,CAAsCloC,OAAtC,EAA+CwoC,cAA/C,EAA+D,QAA/D,CAAhB;;AACA,aAAO,KAAKC,iBAAL,CAAuBzoC,OAAvB,EAAgCmrB,OAAhC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,sCAA6BnrB,OAA7B,EAAsCioC,WAAt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;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qCAA4BrnC,OAA5B,EAAiD;AAAA,yCAAT0oC,OAAS;AAATA,eAAS;AAAA;;AAC7C,UAAMC,iBAAiB,GAAG,yCAAwBD,OAAxB,CAA1B;;AACA,UAAI;AAAA;;AACA,uCAAKjE,eAAL,EAAqBsE,iCAArB,gCAAuD/oC,OAAvD,4BAAmE2oC,iBAAnE;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOtzB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uBAAcrV,OAAd,EAAmC;AAAA;;AAAA,yCAAT0oC,OAAS;AAATA,eAAS;AAAA;;AAC/B,qCAAKjE,eAAL,EAAqBjiC,aAArB,gCAAmCxC,OAAnC,SAA+C0oC,OAA/C;;AACA,aAAO,KAAKrB,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,iCAAwB2B,gBAAxB,EAA0CxkC,KAA1C,EAAiDC,MAAjD,EAAyDwkC,qBAAzD,EAAgF;AAC5E,UAAI;AACA,aAAKxE,eAAL,CAAqByE,UAArB,CAAgCC,6BAAhC,CAA8DH,gBAA9D,EAAgFxkC,KAAhF,EAAuFC,MAAvF,EAA+FwkC,qBAA/F;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAO5zB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAU2zB,gBAAV,EAA4BxkC,KAA5B,EAAmCC,MAAnC,EAA2CwkC,qBAA3C,EAAkE;AAC9D,WAAKxE,eAAL,CAAqB2E,SAArB,CAA+BJ,gBAA/B,EAAiDxkC,KAAjD,EAAwDC,MAAxD,EAAgEwkC,qBAAhE;;AACA,aAAO,KAAK5B,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gCAAuBrnC,OAAvB,EAAgCoK,QAAhC,EAA0CxH,YAA1C,EAAwDymC,SAAxD,EAAmE;AAC/D,UAAI;AACA,aAAK5E,eAAL,CAAqB6E,4BAArB,CAAkDtpC,OAAlD,EAA2DoK,QAA3D,EAAqExH,YAArE,EAAmFymC,SAAnF;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOh0B,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kBAASrV,OAAT,EAAkBoK,QAAlB,EAA4BxH,YAA5B,EAA0CymC,SAA1C,EAAqD;AACjD,WAAK5E,eAAL,CAAqB8E,QAArB,CAA8BvpC,OAA9B,EAAuCoK,QAAvC,EAAiDxH,YAAjD,EAA+DymC,SAA/D;;AACA,aAAO,KAAKhC,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mCAA0BrnC,OAA1B,EAAmCiL,WAAnC,EAAgD9H,eAAhD,EAAiEqmC,YAAjE,EAA+E;AAC3E,UAAI;AACA,aAAK/E,eAAL,CAAqBgF,+BAArB,CAAqDzpC,OAArD,EAA8DiL,WAA9D,EAA2E9H,eAA3E,EAA4FqmC,YAA5F;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOn0B,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYrV,OAAZ,EAAqBiL,WAArB,EAAkC9H,eAAlC,EAAmDqmC,YAAnD,EAAiE;AAC7D,WAAK/E,eAAL,CAAqBiF,WAArB,CAAiC1pC,OAAjC,EAA0CiL,WAA1C,EAAuD9H,eAAvD,EAAwEqmC,YAAxE;;AACA,aAAO,KAAKnC,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,cAAK2B,gBAAL,EAAuBxkC,KAAvB,EAA8BC,MAA9B,EAAsC;AAClC,WAAKggC,eAAL,CAAqBkF,IAArB,CAA0BX,gBAA1B,EAA4CxkC,KAA5C,EAAmDC,MAAnD;;AACA,aAAO,KAAKmlC,cAAL,CAAoBZ,gBAApB,EAAsCxkC,KAAtC,EAA6CC,MAA7C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,aAAIukC,gBAAJ,EAAsBxkC,KAAtB,EAA6BC,MAA7B,EAAqC;AACjC,WAAKggC,eAAL,CAAqBoF,GAArB,CAAyBb,gBAAzB,EAA2CxkC,KAA3C,EAAkDC,MAAlD;;AACA,aAAO,KAAKmlC,cAAL,CAAoBZ,gBAApB,EAAsCxkC,KAAtC,EAA6CC,MAA7C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,eAAMqlC,gBAAN,EAAwB;AACpB,WAAK7E,8BAAL;;AACA,WAAKR,eAAL,CAAqBsF,KAArB,CAA2BD,gBAA3B;;AACA,aAAO,KAAKzC,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmB;AACf,aAAO,KAAK5C,eAAL,CAAqBuF,gBAArB,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB;AACb,WAAKvF,eAAL,CAAqBwF,cAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB;AACb,WAAKxF,eAAL,CAAqByF,QAArB,CAA8BC,cAA9B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB;AACb,WAAK1F,eAAL,CAAqByF,QAArB,CAA8BE,cAA9B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAe5a,UAAf,EAA2BhrB,KAA3B,EAAkCC,MAAlC,EAA0C;AAAA;;AACtC,UAAM4lC,SAAS,GAAGhvC,qCAAkBkJ,QAAlB,CAA2BirB,UAA3B,EAAuChrB,KAAvC,EAA8CC,MAA9C,CAAlB;;AACA,aAAO4lC,SAAS,CAACC,uBAAV,GAAoC7vC,GAApC,CAAwC,UAAC8vC,QAAD;AAAA,eAAcA,QAAQ,CAAC9vC,GAAT,CAAa,UAAC9B,OAAD;AAAA,iBAAa,MAAI,CAACgM,YAAL,CAAkBhM,OAAlB,CAAb;AAAA,SAAb,CAAd;AAAA,OAAxC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB62B,UAAjB,EAA6BhrB,KAA7B,EAAoCC,MAApC,EAA4C;AAAA;;AACxC,UAAM4lC,SAAS,GAAGhvC,qCAAkBkJ,QAAlB,CAA2BirB,UAA3B,EAAuChrB,KAAvC,EAA8CC,MAA9C,CAAlB;;AACA,aAAO4lC,SAAS,CAACC,uBAAV,GAAoC7vC,GAApC,CAAwC,UAAC8vC,QAAD;AAAA,eAAcA,QAAQ,CAAC9vC,GAAT,CAAa,UAAC9B,OAAD;AAAA,iBAAa,MAAI,CAACusC,cAAL,CAAoBvsC,OAApB,CAAb;AAAA,SAAb,CAAd;AAAA,OAAxC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmB62B,UAAnB,EAA+BhrB,KAA/B,EAAsCC,MAAtC,EAA8C;AAAA;;AAC1C,UAAM4lC,SAAS,GAAGhvC,qCAAkBkJ,QAAlB,CAA2BirB,UAA3B,EAAuChrB,KAAvC,EAA8CC,MAA9C,CAAlB;;AACA,aAAO4lC,SAAS,CAACC,uBAAV,GAAoC7vC,GAApC,CAAwC,UAAC8vC,QAAD;AAAA,eAAcA,QAAQ,CAAC9vC,GAAT,CAAa,UAAC9B,OAAD;AAAA,iBAAa,MAAI,CAACwsC,iBAAL,CAAuBxsC,OAAvB,CAAb;AAAA,SAAb,CAAd;AAAA,OAAxC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gCAAuBmN,SAAvB,EAAkC;AAC9B,UAAI;AACA,aAAK2+B,eAAL,CAAqB+F,4BAArB,CAAkD1kC,SAAlD;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOuP,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kBAASvP,SAAT,EAAoB;AAChB,UAAM2kC,cAAc,GAAG,KAAKhG,eAAL,CAAqBhZ,QAArB,CAA8B3lB,SAA9B,CAAvB;;AACA,WAAKg/B,QAAL,CAAc4F,IAAd,CAAmBC,gBAAOC,UAA1B,EAAsCH,cAAtC;;AACA,aAAOA,cAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mCAA0B3kC,SAA1B,EAAqC;AACjC,UAAI;AACA,aAAK2+B,eAAL,CAAqBoG,iBAArB,CAAuC/kC,SAAvC;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOuP,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYvP,SAAZ,EAAuB;AACnB,UAAMsgB,WAAW,GAAG,KAAKpsB,YAAL,CAAkB8wC,oBAAlB,CAAuChlC,SAAvC,CAApB;;AACA,WAAK2+B,eAAL,CAAqBxiC,WAArB,CAAiC6D,SAAjC;;AACA,UAAMilC,OAAO,GAAG,KAAK1D,iCAAL,EAAhB;;AACA,WAAKvC,QAAL,CAAc4F,IAAd,CAAmBC,gBAAOK,YAA1B,EAAwC5kB,WAAxC,EAAqD2kB,OAArD;;AACA,aAAOA,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAyBjlC,SAAzB,EAAoC;AAChC,UAAI;AACA,aAAK2+B,eAAL,CAAqBoG,iBAArB,CAAuC/kC,SAAvC;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOuP,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,oBAAWvP,SAAX,EAAsB;AAClB,WAAK2+B,eAAL,CAAqBoG,iBAArB,CAAuC/kC,SAAvC;;AACA,WAAK2+B,eAAL,CAAqBwG,UAArB,CAAgCnlC,SAAhC;;AACA,aAAO,KAAKuhC,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,2CAAkCvhC,SAAlC,EAA6CjE,MAA7C,EAAqD;AACjD,UAAI;AACA,aAAK4iC,eAAL,CAAqBoG,iBAArB,CAAuC/kC,SAAvC;;AACA,YAAM9F,OAAO,GAAG,KAAKhG,YAAL,CAAkB+L,KAAlB,CAAwBD,SAAxB,CAAhB;;AACA,aAAK2+B,eAAL,CAAqByG,uCAArB,CAA6DlrC,OAA7D,EAAsE6B,MAAtE;;AACA,eAAO,IAAP;AACH,OALD,CAMA,OAAOwT,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,yBAAgBvP,SAAhB,EAA2BjE,MAA3B,EAAmC;AAC/B,WAAK4iC,eAAL,CAAqB0G,eAArB,CAAqCrlC,SAArC,EAAgDjE,MAAhD;;AACA,aAAO,KAAKwlC,iCAAL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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYiH,WAAZ,EAAyB;AACrB,UAAMpW,MAAM,GAAG,KAAK2U,eAAL,CAAqBjP,OAArB,CAA6B0Q,WAA7B,CAAf;AACA,aAAO,uBAAYpW,MAAZ,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,iCAAwBoW,WAAxB,EAAqC;AACjC,aAAO,KAAKrW,WAAL,CAAiBqW,WAAjB,MAAkCtZ,eAASyD,KAAlD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAAoB6V,WAApB,EAAiC;AAC7B,aAAO,KAAKrW,WAAL,CAAiBqW,WAAjB,MAAkCtZ,eAASqD,OAAlD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYiW,WAAZ,EAAyB;AACrB,aAAO,KAAKrW,WAAL,CAAiBqW,WAAjB,MAAkCtZ,eAAS4D,KAAlD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmB0V,WAAnB,EAAgC;AAC5B,aAAO,KAAKrW,WAAL,CAAiBqW,WAAjB,MAAkCtZ,eAAS2D,MAAlD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB2V,WAAjB,EAA8B;AAC1B,WAAKk4B,8BAAL;AACA,UAAMvnC,KAAK,GAAG,KAAK4N,eAAL,CAAqB3G,YAArB,CAAkCoI,WAAlC,CAAd;AACA,aAAO,4BAAiBrP,KAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAyBqP,WAAzB,EAAsC;AAClC,WAAKk4B,8BAAL;AACA,UAAMvnC,KAAK,GAAG,KAAK4N,eAAL,CAAqB3G,YAArB,CAAkCoI,WAAlC,CAAd;AACA,aAAO,oCAAyBrP,KAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBqP,WAAnB,EAAgC;AAC5B,WAAKk4B,8BAAL;AACA,UAAMvnC,KAAK,GAAG,KAAK4N,eAAL,CAAqB3G,YAArB,CAAkCoI,WAAlC,CAAd;AACA,aAAO,8BAAmBrP,KAAnB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uBAAc;AACV,aAAO,KAAK1D,YAAL,CAAkBwxC,cAAlB,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mCAA0BxrC,OAA1B,EAAmCyrC,OAAnC,EAA4C;AACxC,UAAI;AACA,aAAKhH,eAAL,CAAqBiH,+BAArB,CAAqD1rC,OAArD,EAA8DyrC,OAA9D;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAOp2B,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAYrV,OAAZ,EAAqByrC,OAArB,EAA8B;AAC1B,UAAME,OAAO,GAAG,KAAKlH,eAAL,CAAqBmH,WAArB,CAAiC5rC,OAAjC,EAA0CyrC,OAA1C,CAAhB;;AACA,UAAIE,OAAO,KAAKnzC,SAAhB,EAA2B;AACvB,aAAKssC,QAAL,CAAc4F,IAAd,CAAmBC,gBAAOkB,YAA1B,EAAwCF,OAAxC,EAAiDF,OAAjD;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,eAAMK,eAAN,EAAuB;AACnB,WAAKC,iBAAL;;AACA,WAAKtH,eAAL,CAAqBuH,sBAArB;;AACA,UAAI;AACAF,uBAAe;AAClB,OAFD,CAGA,OAAOz2B,CAAP,EAAU;AACN,aAAKovB,eAAL,CAAqBwH,uBAArB;;AACA,aAAKC,gBAAL;AACA,cAAO72B,CAAP;AACH;;AACD,WAAKovB,eAAL,CAAqBwH,uBAArB;;AACA,aAAO,KAAKC,gBAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAAoB;AAChB,WAAKlH,oBAAL,GAA4B,IAA5B;;AACA,WAAKF,QAAL,CAAc4F,IAAd,CAAmBC,gBAAOwB,mBAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmB;AACf,WAAKnH,oBAAL,GAA4B,KAA5B;AACA,UAAM+F,OAAO,GAAG,KAAK1D,iCAAL,EAAhB;;AACA,WAAKvC,QAAL,CAAc4F,IAAd,CAAmBC,gBAAOyB,iBAA1B,EAA6CrB,OAA7C;;AACA,aAAOA,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,iCAAwB;AACpB,aAAO,KAAK/F,oBAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0CAAiCjlC,cAAjC,EAAiDsY,UAAjD,EAA6D2uB,KAA7D,EAAoE;AAChE,UAAI;AACA,aAAKvC,eAAL,CAAqB4H,sCAArB,CAA4DtsC,cAA5D,EAA4EsY,UAA5E,EAAwF2uB,KAAxF;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAO3xB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBtV,cAAnB,EAAmCsY,UAAnC,EAA+C2uB,KAA/C,EAAsDC,OAAtD,EAA+D;AAC3D,WAAKxC,eAAL,CAAqBsC,kBAArB,CAAwChnC,cAAxC,EAAwDsY,UAAxD,EAAoE2uB,KAApE,EAA2EC,OAA3E;;AACA,UAAM8D,OAAO,GAAG,KAAK1D,iCAAL,EAAhB;;AACA,WAAKvC,QAAL,CAAc4F,IAAd,CAAmBC,gBAAO2B,oBAA1B,EAAgDvsC,cAAhD,EAAgEgrC,OAAhE;;AACA,aAAOA,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,iCAAwBhrC,cAAxB,EAAwCinC,KAAxC,EAA+C;AAC3C,WAAK/B,8BAAL;;AACA,UAAMjlC,OAAO,GAAG,KAAKykC,eAAL,CAAqB8H,OAArB,CAA6BvF,KAA7B,CAAhB;;AACA,UAAMhsC,eAAe,GAAG,KAAK2pC,iBAAL,CAAuB6H,uBAAvB,CAA+CzsC,cAA/C,EAA+DC,OAA/D,CAAxB;;AACA,UAAIhF,eAAJ,EAAqB;AACjB,eAAO,KAAK4pC,cAAL,CAAoBjgC,YAApB,CAAiC3J,eAAe,CAACrC,OAAjD,CAAP;AACH,OAFD,MAGK;AACD,eAAOH,SAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mCAA0BuH,cAA1B,EAA0CinC,KAA1C,EAAiD;AAC7C,UAAMhnC,OAAO,GAAG,KAAKykC,eAAL,CAAqB8H,OAArB,CAA6BvF,KAA7B,CAAhB;;AACA,UAAMhsC,eAAe,GAAG,KAAK2pC,iBAAL,CAAuB6H,uBAAvB,CAA+CzsC,cAA/C,EAA+DC,OAA/D,CAAxB;;AACA,UAAIhF,eAAe,KAAKxC,SAAxB,EAAmC;AAC/B,eAAOA,SAAP;AACH,OAFD,MAGK;AACD,eAAO,KAAKosC,cAAL,CAAoBM,cAApB,CAAmClqC,eAAe,CAACrC,OAAnD,CAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBoH,cAAnB,EAAmCinC,KAAnC,EAA0C;AACtC,UAAMhnC,OAAO,GAAG,KAAKykC,eAAL,CAAqB8H,OAArB,CAA6BvF,KAA7B,CAAhB;;AACA,UAAMhsC,eAAe,GAAG,KAAK2pC,iBAAL,CAAuB6H,uBAAvB,CAA+CzsC,cAA/C,EAA+DC,OAA/D,CAAxB;;AACA,UAAIhF,eAAe,KAAKxC,SAAxB,EAAmC;AAC/B,eAAOA,SAAP;AACH;;AACD,UAAM6f,UAAU,GAAG,KAAKusB,cAAL,CAAoBM,cAApB,CAAmClqC,eAAe,CAACrC,OAAnD,CAAnB;;AACA,aAAO;AACHuC,YAAI,EAAE6E,cADH;AAEHinC,aAAK,EAAEA,KAFJ;AAGH3uB,kBAAU,EAAEA,UAHT;AAIH4uB,eAAO,EAAEjsC,eAAe,CAACisC;AAJtB,OAAP;AAMH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,6CAAoClnC,cAApC,EAAoD0sC,aAApD,EAAmEzF,KAAnE,EAA0E;AACtE,UAAI;AACA,aAAKvC,eAAL,CAAqBiI,yCAArB,CAA+D3sC,cAA/D,EAA+E0sC,aAA/E,EAA8FzF,KAA9F;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAO3xB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,+BAAsBtV,cAAtB,EAAsC0sC,aAAtC,EAAqDzF,KAArD,EAA4DC,OAA5D,EAAqE;AACjE,WAAKxC,eAAL,CAAqBkI,+BAArB,CAAqD5sC,cAArD,EAAqEinC,KAArE,EAA4EyF,aAA5E,EAA2FxF,OAA3F;;AACA,aAAO,KAAKI,iCAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,6CAAoCtnC,cAApC,EAAoDinC,KAApD,EAA2D;AACvD,UAAI;AACA,aAAKvC,eAAL,CAAqBmI,mCAArB,CAAyD7sC,cAAzD,EAAyEinC,KAAzE;;AACA,eAAO,IAAP;AACH,OAHD,CAIA,OAAO3xB,CAAP,EAAU;AACN,eAAO,KAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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wY,MAAb,uBAAaA,MAAb;AAAA,UAAqBva,YAArB,uBAAqBA,YAArB;;AACA,UAAIua,MAAM,CAACrQ,MAAP,GAAgB,CAApB,EAAuB;AACnB,eAAO,CAACvM,SAAD,EAAYm1C,8BAAZ,EAA4C,EAA5C,CAAP;AACH;;AACD,aAAO,CAAC/wC,GAAD,EAAM+wC,8BAAN,EAAsC9yC,YAAtC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,YAAGgzC,KAAH,EAAUC,QAAV,EAAoB;AAChB,WAAKhJ,QAAL,CAAciJ,EAAd,CAAiBF,KAAjB,EAAwBC,QAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,cAAKD,KAAL,EAAYC,QAAZ,EAAsB;AAClB,WAAKhJ,QAAL,CAAckJ,IAAd,CAAmBH,KAAnB,EAA0BC,QAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,aAAID,KAAJ,EAAWC,QAAX,EAAqB;AACjB,WAAKhJ,QAAL,CAAcmJ,GAAd,CAAkBJ,KAAlB,EAAyBC,QAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAU;AACN,WAAKxiC,eAAL,CAAqB9E,OAArB;AACA,WAAK+/B,YAAL,CAAkB//B,OAAlB;AACA,WAAKmgC,SAAL,CAAengC,OAAf;;AACA,WAAK49B,OAAL,CAAa59B,OAAb;;AACA,WAAKg+B,6BAAL,CAAmCh+B,OAAnC;;AACA,WAAK09B,MAAL,CAAY19B,OAAZ;;AACA,WAAKi+B,eAAL,CAAqBwF,cAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AA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CH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAA0BF,YAA1B,EAAwC;AACpC,UAAI,KAAKC,mBAAL,CAAyBnzC,GAAzB,CAA6BkzC,YAA7B,CAAJ,EAAgD;AAC5C,aAAKC,mBAAL,CAAyB/lC,MAAzB,CAAgC8lC,YAAhC;AACH,OAFD,MAGK;AACD,cAAM,IAAI36C,kCAAJ,EAAN;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uCAAqC;AACjC,aAAOwS,KAAK,CAACC,IAAN,CAAW,KAAKmoC,mBAAL,CAAyB9Y,IAAzB,EAAX,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gCAA8BgZ,MAA9B,EAAsC9Y,YAAtC,EAAoD;AAChD+Y,yCAAiB94C,sBAAjB,CAAwC64C,MAAxC,EAAgD9Y,YAAhD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kCAAgC8Y,MAAhC,EAAwC;AACpCC,yCAAiBC,wBAAjB,CAA0CF,MAA1C;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAwB9iB,UAAxB,EAAoC8iB,MAApC,EAA4C9Y,YAA5C,EAA0D;AACtD+Y,yCAAiBE,gBAAjB,CAAkCjjB,UAAlC,EAA8C8iB,MAA9C,EAAsD9Y,YAAtD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,4BAA0BhK,UAA1B,EAAsC;AAClC+iB,yCAAiBG,kBAAjB,CAAoCljB,UAApC;AACH;AACD;AACJ;A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A;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,mIAAmI,SAAS,2BAA2B,SAAS,wCAAwC,SAAS,qDAAqD,SAAS,6IAA6I,SAAS,SAAS,SAAS,yDAAyD,SAAS,6DAA6D,SAAS,2HAA2H,SAAS,QAAQ,S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","file":"hyperformula.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chevrotain\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"HyperFormula\", [\"chevrotain\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HyperFormula\"] = factory(require(\"chevrotain\"));\n\telse\n\t\troot[\"HyperFormula\"] = factory(root[\"chevrotain\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__155__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellType, CellValueDetailedType, CellValueType, ErrorType } from './Cell';\nimport { DetailedCellError } from './CellValue';\nimport { Config } from './Config';\nimport { ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MatrixFormulasNotSupportedError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError, UnableToParseError } from './errors';\nimport { ExportedCellChange, ExportedNamedExpressionChange } from './Exporter';\nimport { HyperFormula } from './HyperFormula';\nimport enGB from './i18n/languages/enGB';\nimport { FunctionPlugin } from './interpreter';\nimport * as plugins from './interpreter/plugin';\n/** @internal */\nclass HyperFormulaNS extends HyperFormula {\n}\nHyperFormulaNS.HyperFormula = HyperFormula;\nHyperFormulaNS.ErrorType = ErrorType;\nHyperFormulaNS.CellType = CellType;\nHyperFormulaNS.CellValueType = CellValueType;\nHyperFormulaNS.CellValueDetailedType = CellValueDetailedType;\nHyperFormulaNS.DetailedCellError = DetailedCellError;\nHyperFormulaNS.ExportedCellChange = ExportedCellChange;\nHyperFormulaNS.ExportedNamedExpressionChange = ExportedNamedExpressionChange;\nHyperFormulaNS.ConfigValueTooBigError = ConfigValueTooBigError;\nHyperFormulaNS.ConfigValueTooSmallError = ConfigValueTooSmallError;\nHyperFormulaNS.EvaluationSuspendedError = EvaluationSuspendedError;\nHyperFormulaNS.ExpectedOneOfValuesError = ExpectedOneOfValuesError;\nHyperFormulaNS.ExpectedValueOfTypeError = ExpectedValueOfTypeError;\nHyperFormulaNS.FunctionPlugin = FunctionPlugin;\nHyperFormulaNS.FunctionPluginValidationError = FunctionPluginValidationError;\nHyperFormulaNS.InvalidAddressError = InvalidAddressError;\nHyperFormulaNS.InvalidArgumentsError = InvalidArgumentsError;\nHyperFormulaNS.LanguageNotRegisteredError = LanguageNotRegisteredError;\nHyperFormulaNS.LanguageAlreadyRegisteredError = LanguageAlreadyRegisteredError;\nHyperFormulaNS.MatrixFormulasNotSupportedError = MatrixFormulasNotSupportedError;\nHyperFormulaNS.MissingTranslationError = MissingTranslationError;\nHyperFormulaNS.NamedExpressionDoesNotExistError = NamedExpressionDoesNotExistError;\nHyperFormulaNS.NamedExpressionNameIsAlreadyTakenError = NamedExpressionNameIsAlreadyTakenError;\nHyperFormulaNS.NamedExpressionNameIsInvalidError = NamedExpressionNameIsInvalidError;\nHyperFormulaNS.NoOperationToRedoError = NoOperationToRedoError;\nHyperFormulaNS.NoOperationToUndoError = NoOperationToUndoError;\nHyperFormulaNS.NoRelativeAddressesAllowedError = NoRelativeAddressesAllowedError;\nHyperFormulaNS.NoSheetWithIdError = NoSheetWithIdError;\nHyperFormulaNS.NoSheetWithNameError = NoSheetWithNameError;\nHyperFormulaNS.NotAFormulaError = NotAFormulaError;\nHyperFormulaNS.NothingToPasteError = NothingToPasteError;\nHyperFormulaNS.ProtectedFunctionTranslationError = ProtectedFunctionTranslationError;\nHyperFormulaNS.SheetNameAlreadyTakenError = SheetNameAlreadyTakenError;\nHyperFormulaNS.SheetSizeLimitExceededError = SheetSizeLimitExceededError;\nHyperFormulaNS.SourceLocationHasMatrixError = SourceLocationHasMatrixError;\nHyperFormulaNS.TargetLocationHasMatrixError = TargetLocationHasMatrixError;\nHyperFormulaNS.UnableToParseError = UnableToParseError;\nconst defaultLanguage = Config.defaultConfig.language;\nHyperFormula.registerLanguage(defaultLanguage, enGB);\nHyperFormula.languages[enGB.langCode] = enGB;\nfor (const pluginName of Object.getOwnPropertyNames(plugins)) {\n    if (!pluginName.startsWith('_')) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        HyperFormula.registerFunctionPlugin(plugins[pluginName]);\n    }\n}\nexport default HyperFormulaNS;\nexport { HyperFormula, CellType, CellValueType, CellValueDetailedType, ErrorType, ExportedCellChange, ExportedNamedExpressionChange, DetailedCellError, ConfigValueTooBigError, ConfigValueTooSmallError, EvaluationSuspendedError, ExpectedOneOfValuesError, ExpectedValueOfTypeError, FunctionPlugin, FunctionPluginValidationError, InvalidAddressError, InvalidArgumentsError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, MatrixFormulasNotSupportedError, MissingTranslationError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NotAFormulaError, NothingToPasteError, ProtectedFunctionTranslationError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError, UnableToParseError, };\n","var $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar aFunction = require('../internals/a-function');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar bind = require('../internals/function-bind');\nvar fails = require('../internals/fails');\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\n\n// `Reflect.construct` method\n// https://tc39.es/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  nativeConstruct(function () { /* empty */ });\n});\nvar FORCED = NEW_TARGET_BUG || ARGS_BUG;\n\n$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var toObject = require('../internals/to-object');\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function hasOwn(it, key) {\n  return hasOwnProperty.call(toObject(it), key);\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  var state;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) {\n      createNonEnumerableProperty(value, 'name', key);\n    }\n    state = enforceInternalState(value);\n    if (!state.source) {\n      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');\n    }\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.13.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'\n});\n","module.exports = false;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","module.exports = {};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    /* global ActiveXObject -- old IE */\n    activeXDocument = document.domain && new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar aFunction = require('../internals/a-function');\nvar isObject = require('../internals/is-object');\n\nvar slice = [].slice;\nvar factories = {};\n\nvar construct = function (C, argsLength, args) {\n  if (!(argsLength in factories)) {\n    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    // eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only\n    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.es/ecma262/#sec-function.prototype.bind\nmodule.exports = Function.bind || function bind(that /* , ...args */) {\n  var fn = aFunction(this);\n  var partArgs = slice.call(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = partArgs.concat(slice.call(arguments));\n    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);\n  };\n  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;\n  return boundFunction;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  return !String(Symbol()) ||\n    // Chrome 38 Symbol has incorrect toString conversion\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] < 4 ? 1 : match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = match[1];\n  }\n}\n\nmodule.exports = version && +version;\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar redefine = require('../internals/redefine');\nvar toString = require('../internals/object-to-string');\n\n// `Object.prototype.toString` method\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nif (!TO_STRING_TAG_SUPPORT) {\n  redefine(Object.prototype, 'toString', toString, { unsafe: true });\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    iteratorClose(iterator);\n    throw error;\n  }\n};\n","var anObject = require('../internals/an-object');\n\nmodule.exports = function (iterator) {\n  var returnMethod = iterator['return'];\n  if (returnMethod !== undefined) {\n    return anObject(returnMethod.call(iterator)).value;\n  }\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","module.exports = {};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","/* eslint-disable no-proto -- safe */\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.es/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.es/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.es/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","var bind = require('../internals/function-bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_OUT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push.call(target, value); // filterOut\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterOut` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterOut: createMethod(7)\n};\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","// `Symbol.prototype.description` getter\n// https://tc39.es/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n    configurable: true,\n    value: create(null)\n  });\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","'use strict';\nvar global = require('../internals/global');\nvar redefineAll = require('../internals/redefine-all');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar collection = require('../internals/collection');\nvar collectionWeak = require('../internals/collection-weak');\nvar isObject = require('../internals/is-object');\nvar enforceIternalState = require('../internals/internal-state').enforce;\nvar NATIVE_WEAK_MAP = require('../internals/native-weak-map');\n\nvar IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;\n// eslint-disable-next-line es/no-object-isextensible -- safe\nvar isExtensible = Object.isExtensible;\nvar InternalWeakMap;\n\nvar wrapper = function (init) {\n  return function WeakMap() {\n    return init(this, arguments.length ? arguments[0] : undefined);\n  };\n};\n\n// `WeakMap` constructor\n// https://tc39.es/ecma262/#sec-weakmap-constructor\nvar $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak);\n\n// IE11 WeakMap frozen keys fix\n// We can't use feature detection because it crash some old IE builds\n// https://github.com/zloirock/core-js/issues/485\nif (NATIVE_WEAK_MAP && IS_IE11) {\n  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);\n  InternalMetadataModule.REQUIRED = true;\n  var WeakMapPrototype = $WeakMap.prototype;\n  var nativeDelete = WeakMapPrototype['delete'];\n  var nativeHas = WeakMapPrototype.has;\n  var nativeGet = WeakMapPrototype.get;\n  var nativeSet = WeakMapPrototype.set;\n  redefineAll(WeakMapPrototype, {\n    'delete': function (key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeDelete.call(this, key) || state.frozen['delete'](key);\n      } return nativeDelete.call(this, key);\n    },\n    has: function has(key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeHas.call(this, key) || state.frozen.has(key);\n      } return nativeHas.call(this, key);\n    },\n    get: function get(key) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);\n      } return nativeGet.call(this, key);\n    },\n    set: function set(key, value) {\n      if (isObject(key) && !isExtensible(key)) {\n        var state = enforceIternalState(this);\n        if (!state.frozen) state.frozen = new InternalWeakMap();\n        nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);\n      } else nativeSet.call(this, key, value);\n      return this;\n    }\n  });\n}\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var hiddenKeys = require('../internals/hidden-keys');\nvar isObject = require('../internals/is-object');\nvar has = require('../internals/has');\nvar defineProperty = require('../internals/object-define-property').f;\nvar uid = require('../internals/uid');\nvar FREEZING = require('../internals/freezing');\n\nvar METADATA = uid('meta');\nvar id = 0;\n\n// eslint-disable-next-line es/no-object-isextensible -- safe\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\n\nvar setMetadata = function (it) {\n  defineProperty(it, METADATA, { value: {\n    objectID: 'O' + ++id, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!has(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar meta = module.exports = {\n  REQUIRED: false,\n  fastKey: fastKey,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar InternalMetadataModule = require('../internals/internal-metadata');\nvar iterate = require('../internals/iterate');\nvar anInstance = require('../internals/an-instance');\nvar isObject = require('../internals/is-object');\nvar fails = require('../internals/fails');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nmodule.exports = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var Constructor = NativeConstructor;\n  var exported = {};\n\n  var fixMethod = function (KEY) {\n    var nativeMethod = NativePrototype[KEY];\n    redefine(NativePrototype, KEY,\n      KEY == 'add' ? function add(value) {\n        nativeMethod.call(this, value === 0 ? 0 : value);\n        return this;\n      } : KEY == 'delete' ? function (key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'get' ? function get(key) {\n        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : KEY == 'has' ? function has(key) {\n        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);\n      } : function set(key, value) {\n        nativeMethod.call(this, key === 0 ? 0 : key, value);\n        return this;\n      }\n    );\n  };\n\n  var REPLACE = isForced(\n    CONSTRUCTOR_NAME,\n    typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {\n      new NativeConstructor().entries().next();\n    }))\n  );\n\n  if (REPLACE) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.REQUIRED = true;\n  } else if (isForced(CONSTRUCTOR_NAME, true)) {\n    var instance = new Constructor();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    // eslint-disable-next-line no-new -- required for testing\n    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new NativeConstructor();\n      var index = 5;\n      while (index--) $instance[ADDER](index, index);\n      return !$instance.has(-0);\n    });\n\n    if (!ACCEPT_ITERABLES) {\n      Constructor = wrapper(function (dummy, iterable) {\n        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);\n        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);\n        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n        return that;\n      });\n      Constructor.prototype = NativePrototype;\n      NativePrototype.constructor = Constructor;\n    }\n\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\n    // weak collections should not contains .clear method\n    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;\n  }\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $({ global: true, forced: Constructor != NativeConstructor }, exported);\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator);\n      throw error;\n    }\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar redefineAll = require('../internals/redefine-all');\nvar getWeakData = require('../internals/internal-metadata').getWeakData;\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar ArrayIterationModule = require('../internals/array-iteration');\nvar $has = require('../internals/has');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\nvar find = ArrayIterationModule.find;\nvar findIndex = ArrayIterationModule.findIndex;\nvar id = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function (store) {\n  return store.frozen || (store.frozen = new UncaughtFrozenStore());\n};\n\nvar UncaughtFrozenStore = function () {\n  this.entries = [];\n};\n\nvar findUncaughtFrozen = function (store, key) {\n  return find(store.entries, function (it) {\n    return it[0] === key;\n  });\n};\n\nUncaughtFrozenStore.prototype = {\n  get: function (key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function (key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function (key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;\n    else this.entries.push([key, value]);\n  },\n  'delete': function (key) {\n    var index = findIndex(this.entries, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.entries.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        id: id++,\n        frozen: undefined\n      });\n      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var data = getWeakData(anObject(key), true);\n      if (data === true) uncaughtFrozenStore(state).set(key, value);\n      else data[state.id] = value;\n      return that;\n    };\n\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function (key) {\n        var state = getInternalState(this);\n        if (!isObject(key)) return false;\n        var data = getWeakData(key);\n        if (data === true) return uncaughtFrozenStore(state)['delete'](key);\n        return data && $has(data, state.id) && delete data[state.id];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        var state = getInternalState(this);\n        if (!isObject(key)) return false;\n        var data = getWeakData(key);\n        if (data === true) return uncaughtFrozenStore(state).has(key);\n        return data && $has(data, state.id);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.3.3.3 WeakMap.prototype.get(key)\n      get: function get(key) {\n        var state = getInternalState(this);\n        if (isObject(key)) {\n          var data = getWeakData(key);\n          if (data === true) return uncaughtFrozenStore(state).get(key);\n          return data ? data[state.id] : undefined;\n        }\n      },\n      // 23.3.3.5 WeakMap.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key, value);\n      }\n    } : {\n      // 23.4.3.1 WeakSet.prototype.add(value)\n      add: function add(value) {\n        return define(this, value, true);\n      }\n    });\n\n    return C;\n  }\n};\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });\nvar FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);\n  }\n});\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar toObject = require('../internals/to-object');\nvar nativeGetPrototypeOf = require('../internals/object-get-prototype-of');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {\n  getPrototypeOf: function getPrototypeOf(it) {\n    return nativeGetPrototypeOf(toObject(it));\n  }\n});\n\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names-external').f;\n\n// eslint-disable-next-line es/no-object-getownpropertynames -- required for testing\nvar FAILS_ON_PRIMITIVES = fails(function () { return !Object.getOwnPropertyNames(1); });\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  getOwnPropertyNames: getOwnPropertyNames\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-startswith -- safe\nvar $startsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\nimport { ErrorMessage } from './error-message';\nimport { EmptyValue, getFormatOfExtendedNumber, getTypeOfExtendedNumber, isExtendedNumber, NumberType, } from './interpreter/InterpreterValue';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\n/**\n * Possible errors returned by our interpreter.\n */\nexport var ErrorType;\n(function (ErrorType) {\n    /** Division by zero. */\n    ErrorType[\"DIV_BY_ZERO\"] = \"DIV_BY_ZERO\";\n    /** Unknown function name. */\n    ErrorType[\"NAME\"] = \"NAME\";\n    ErrorType[\"VALUE\"] = \"VALUE\";\n    ErrorType[\"NUM\"] = \"NUM\";\n    ErrorType[\"NA\"] = \"NA\";\n    /** Cyclic dependency. */\n    ErrorType[\"CYCLE\"] = \"CYCLE\";\n    /** Wrong address reference. */\n    ErrorType[\"REF\"] = \"REF\";\n    /** Invalid/missing licence error. */\n    ErrorType[\"LIC\"] = \"LIC\";\n    /** Generic error */\n    ErrorType[\"ERROR\"] = \"ERROR\";\n})(ErrorType || (ErrorType = {}));\nexport var CellType;\n(function (CellType) {\n    CellType[\"FORMULA\"] = \"FORMULA\";\n    CellType[\"VALUE\"] = \"VALUE\";\n    CellType[\"MATRIX\"] = \"MATRIX\";\n    CellType[\"EMPTY\"] = \"EMPTY\";\n})(CellType || (CellType = {}));\nexport const getCellType = (vertex) => {\n    if (vertex instanceof FormulaCellVertex || vertex instanceof ParsingErrorVertex) {\n        return CellType.FORMULA;\n    }\n    if (vertex instanceof ValueCellVertex\n        || (vertex instanceof MatrixVertex && vertex.isNumeric())) {\n        return CellType.VALUE;\n    }\n    if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n        return CellType.MATRIX;\n    }\n    return CellType.EMPTY;\n};\nexport var CellValueNoNumber;\n(function (CellValueNoNumber) {\n    CellValueNoNumber[\"EMPTY\"] = \"EMPTY\";\n    CellValueNoNumber[\"NUMBER\"] = \"NUMBER\";\n    CellValueNoNumber[\"STRING\"] = \"STRING\";\n    CellValueNoNumber[\"BOOLEAN\"] = \"BOOLEAN\";\n    CellValueNoNumber[\"ERROR\"] = \"ERROR\";\n})(CellValueNoNumber || (CellValueNoNumber = {}));\nexport var CellValueJustNumber;\n(function (CellValueJustNumber) {\n    CellValueJustNumber[\"NUMBER\"] = \"NUMBER\";\n})(CellValueJustNumber || (CellValueJustNumber = {}));\nexport const CellValueType = Object.assign(Object.assign({}, CellValueNoNumber), CellValueJustNumber);\nexport const CellValueDetailedType = Object.assign(Object.assign({}, CellValueNoNumber), NumberType);\nexport const CellValueTypeOrd = (arg) => {\n    switch (arg) {\n        case CellValueType.EMPTY:\n            return 0;\n        case CellValueType.NUMBER:\n            return 1;\n        case CellValueType.STRING:\n            return 2;\n        case CellValueType.BOOLEAN:\n            return 3;\n        case CellValueType.ERROR:\n            return 4;\n    }\n    throw new Error('Cell value not computed');\n};\nexport const getCellValueType = (cellValue) => {\n    if (cellValue === EmptyValue) {\n        return CellValueType.EMPTY;\n    }\n    if (cellValue instanceof CellError || cellValue instanceof SimpleRangeValue) {\n        return CellValueType.ERROR;\n    }\n    if (typeof cellValue === 'string') {\n        return CellValueType.STRING;\n    }\n    else if (isExtendedNumber(cellValue)) {\n        return CellValueType.NUMBER;\n    }\n    else if (typeof cellValue === 'boolean') {\n        return CellValueType.BOOLEAN;\n    }\n    throw new Error('Cell value not computed');\n};\nexport const getCellValueDetailedType = (cellValue) => {\n    if (isExtendedNumber(cellValue)) {\n        return getTypeOfExtendedNumber(cellValue);\n    }\n    else {\n        return getCellValueType(cellValue);\n    }\n};\nexport const getCellValueFormat = (cellValue) => {\n    if (isExtendedNumber(cellValue)) {\n        return getFormatOfExtendedNumber(cellValue);\n    }\n    else {\n        return undefined;\n    }\n};\nexport class CellError {\n    constructor(type, message, address) {\n        this.type = type;\n        this.message = message;\n        this.address = address;\n    }\n    attachAddress(address) {\n        if (this.address === undefined) {\n            return new CellError(this.type, this.message, address);\n        }\n        else {\n            return this;\n        }\n    }\n    static parsingError() {\n        return new CellError(ErrorType.ERROR, ErrorMessage.ParseError);\n    }\n}\nexport const simpleRowAddress = (sheet, row) => ({ sheet, row });\nexport const invalidSimpleRowAddress = (address) => (address.row < 0);\nexport const simpleColumnAddress = (sheet, col) => ({ sheet, col });\nexport const invalidSimpleColumnAddress = (address) => (address.col < 0);\nexport const simpleCellAddress = (sheet, col, row) => ({ sheet, col, row });\nexport const invalidSimpleCellAddress = (address) => (address.col < 0 || address.row < 0);\nexport const movedSimpleCellAddress = (address, toSheet, toRight, toBottom) => {\n    return simpleCellAddress(toSheet, address.col + toRight, address.row + toBottom);\n};\nexport const absoluteSheetReference = (address, baseAddress) => {\n    return address.sheet === null ? baseAddress.sheet : address.sheet;\n};\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\n// eslint-disable-next-line es/no-object-assign -- required for testing\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\n// eslint-disable-next-line es/no-object-assign -- safe\nvar $assign = Object.assign;\n// eslint-disable-next-line es/no-object-defineproperty -- required for testing\nvar defineProperty = Object.defineProperty;\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\nmodule.exports = !$assign || fails(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line es/no-symbol -- safe\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport { DependencyGraph } from './DependencyGraph';\nexport { AddressMapping } from './AddressMapping/AddressMapping';\nexport { Graph } from './Graph';\nexport { RangeMapping } from './RangeMapping';\nexport { SheetMapping } from './SheetMapping';\nexport { MatrixMapping } from './MatrixMapping';\nexport { MatrixVertex } from './MatrixVertex';\nexport { FormulaCellVertex } from './FormulaCellVertex';\nexport { EmptyCellVertex } from './EmptyCellVertex';\nexport { ValueCellVertex } from './ValueCellVertex';\nexport { ParsingErrorVertex } from './ParsingErrorVertex';\nexport { RangeVertex } from './RangeVertex';\nexport { SparseStrategy } from './AddressMapping/SparseStrategy';\nexport { DenseStrategy } from './AddressMapping/DenseStrategy';\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { absolutizeDependencies } from '../absolutizeDependencies';\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { SimpleRangeValue } from '../interpreter/SimpleRangeValue';\nimport { collectDependencies, NamedExpressionDependency } from '../parser';\nimport { ColumnsSpan, RowsSpan } from '../Span';\nimport { StatType } from '../statistics';\nimport { EmptyCellVertex, FormulaCellVertex, MatrixVertex, RangeVertex, ValueCellVertex, } from './';\nimport { AddressMapping } from './AddressMapping/AddressMapping';\nimport { collectAddressesDependentToMatrix } from './collectAddressesDependentToMatrix';\nimport { Graph } from './Graph';\nimport { MatrixMapping } from './MatrixMapping';\nimport { RangeMapping } from './RangeMapping';\nimport { SheetMapping } from './SheetMapping';\nimport { EmptyValue, getRawValue } from '../interpreter/InterpreterValue';\nexport class DependencyGraph {\n    constructor(addressMapping, rangeMapping, sheetMapping, matrixMapping, stats, lazilyTransformingAstService, functionRegistry, namedExpressions) {\n        this.addressMapping = addressMapping;\n        this.rangeMapping = rangeMapping;\n        this.sheetMapping = sheetMapping;\n        this.matrixMapping = matrixMapping;\n        this.stats = stats;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.functionRegistry = functionRegistry;\n        this.namedExpressions = namedExpressions;\n        this.dependencyQueryAddresses = (vertex) => {\n            if (vertex instanceof RangeVertex) {\n                return this.rangeDependencyQuery(vertex).map(([address, _]) => address);\n            }\n            else {\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\n                if (dependenciesResult !== undefined) {\n                    const [address, dependencies] = dependenciesResult;\n                    return dependencies.map((dependency) => {\n                        if (dependency instanceof NamedExpressionDependency) {\n                            const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet);\n                            return namedExpression.address;\n                        }\n                        else {\n                            return dependency;\n                        }\n                    });\n                }\n                else {\n                    return undefined;\n                }\n            }\n        };\n        this.dependencyQueryVertices = (vertex) => {\n            if (vertex instanceof RangeVertex) {\n                return this.rangeDependencyQuery(vertex).map(([_, v]) => v);\n            }\n            else {\n                const dependenciesResult = this.formulaDependencyQuery(vertex);\n                if (dependenciesResult !== undefined) {\n                    const [address, dependencies] = dependenciesResult;\n                    return dependencies.map((dependency) => {\n                        if (dependency instanceof AbsoluteCellRange) {\n                            return this.rangeMapping.fetchRange(dependency.start, dependency.end);\n                        }\n                        else if (dependency instanceof NamedExpressionDependency) {\n                            const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(dependency.name, address.sheet);\n                            return this.addressMapping.fetchCell(namedExpression.address);\n                        }\n                        else {\n                            return this.addressMapping.fetchCell(dependency);\n                        }\n                    });\n                }\n                else {\n                    return undefined;\n                }\n            }\n        };\n        this.rangeDependencyQuery = (vertex) => {\n            const allDeps = [];\n            const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(vertex.range); //checking whether this range was splitted by bruteForce or not\n            let range;\n            if (smallerRangeVertex !== null && this.graph.adjacentNodes(smallerRangeVertex).has(vertex)) {\n                range = restRange;\n                allDeps.push([new AbsoluteCellRange(smallerRangeVertex.start, smallerRangeVertex.end), smallerRangeVertex]);\n            }\n            else { //did we ever need to use full range\n                range = vertex.range;\n            }\n            for (const address of range.addresses(this)) {\n                const cell = this.addressMapping.getCell(address);\n                if (cell instanceof EmptyCellVertex) {\n                    cell.address = address;\n                }\n                if (cell !== null) {\n                    allDeps.push([address, cell]);\n                }\n            }\n            return allDeps;\n        };\n        this.formulaDependencyQuery = (vertex) => {\n            let formula;\n            let address;\n            if (vertex instanceof FormulaCellVertex) {\n                address = vertex.getAddress(this.lazilyTransformingAstService);\n                formula = vertex.getFormula(this.lazilyTransformingAstService);\n            }\n            else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                address = vertex.getAddress();\n                formula = vertex.getFormula();\n            }\n            else {\n                return undefined;\n            }\n            const deps = collectDependencies(formula, this.functionRegistry);\n            return [address, absolutizeDependencies(deps, address)];\n        };\n        this.graph = new Graph(this.dependencyQueryVertices);\n    }\n    /*\n     * Invariants:\n     * - empty cell has associated EmptyCellVertex if and only if it is a dependency (possibly indirect, through range) to some formula\n     */\n    static buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats) {\n        const addressMapping = new AddressMapping(config.chooseAddressMappingPolicy);\n        const rangeMapping = new RangeMapping();\n        return new DependencyGraph(addressMapping, rangeMapping, new SheetMapping(config.translationPackage), new MatrixMapping(), stats, lazilyTransformingAstService, functionRegistry, namedExpressions);\n    }\n    setFormulaToCell(address, ast, dependencies, hasVolatileFunction, hasStructuralChangeFunction) {\n        const vertex = this.addressMapping.getCell(address);\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        const newVertex = new FormulaCellVertex(ast, address, this.lazilyTransformingAstService.version());\n        this.exchangeOrAddGraphNode(vertex, newVertex);\n        this.addressMapping.setCell(address, newVertex);\n        this.processCellDependencies(dependencies, newVertex);\n        this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\n        if (hasVolatileFunction) {\n            this.markAsVolatile(newVertex);\n        }\n        if (hasStructuralChangeFunction) {\n            this.markAsDependentOnStructureChange(newVertex);\n        }\n        this.correctInfiniteRangesDependency(address);\n    }\n    setParsingErrorToCell(address, errorVertex) {\n        const vertex = this.addressMapping.getCell(address);\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        this.exchangeOrAddGraphNode(vertex, errorVertex);\n        this.addressMapping.setCell(address, errorVertex);\n        this.graph.markNodeAsSpecialRecentlyChanged(errorVertex);\n        this.correctInfiniteRangesDependency(address);\n    }\n    setValueToCell(address, value) {\n        const vertex = this.addressMapping.getCell(address);\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        if (vertex instanceof ValueCellVertex) {\n            const oldValue = vertex.getValues();\n            if (oldValue.rawValue !== value.rawValue) {\n                vertex.setValues(value);\n                this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n            }\n        }\n        else {\n            const newVertex = new ValueCellVertex(value.parsedValue, value.rawValue);\n            this.exchangeOrAddGraphNode(vertex, newVertex);\n            this.addressMapping.setCell(address, newVertex);\n            this.graph.markNodeAsSpecialRecentlyChanged(newVertex);\n        }\n        this.correctInfiniteRangesDependency(address);\n    }\n    setCellEmpty(address) {\n        const vertex = this.addressMapping.getCell(address);\n        if (vertex === null) {\n            return;\n        }\n        this.ensureThatVertexIsNonMatrixCellVertex(vertex);\n        if (this.graph.adjacentNodes(vertex).size > 0) {\n            const emptyVertex = new EmptyCellVertex(address);\n            this.exchangeGraphNode(vertex, emptyVertex);\n            if (this.graph.adjacentNodesCount(emptyVertex) === 0) {\n                this.removeVertex(emptyVertex);\n                this.addressMapping.removeCell(address);\n            }\n            else {\n                this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\n                this.addressMapping.setCell(address, emptyVertex);\n            }\n        }\n        else {\n            this.removeVertex(vertex);\n            this.addressMapping.removeCell(address);\n        }\n    }\n    ensureThatVertexIsNonMatrixCellVertex(vertex) {\n        if (vertex instanceof MatrixVertex) {\n            throw new Error('Illegal operation');\n        }\n    }\n    clearRecentlyChangedVertices() {\n        this.graph.clearSpecialNodesRecentlyChanged();\n    }\n    verticesToRecompute() {\n        return new Set([...this.graph.specialNodesRecentlyChanged, ...this.volatileVertices()]);\n    }\n    processCellDependencies(cellDependencies, endVertex) {\n        cellDependencies.forEach((dep) => {\n            if (dep instanceof AbsoluteCellRange) {\n                const range = dep;\n                let rangeVertex = this.getRange(range.start, range.end);\n                if (rangeVertex === undefined) {\n                    rangeVertex = new RangeVertex(range);\n                    this.rangeMapping.setRange(rangeVertex);\n                }\n                this.graph.addNode(rangeVertex);\n                if (!range.isFinite()) {\n                    this.graph.markNodeAsInfiniteRange(rangeVertex);\n                }\n                const { smallerRangeVertex, restRange } = this.rangeMapping.findSmallerRange(range);\n                if (smallerRangeVertex) {\n                    this.graph.addEdge(smallerRangeVertex, rangeVertex);\n                    if (rangeVertex.bruteForce) {\n                        rangeVertex.bruteForce = false;\n                        for (const cellFromRange of range.addresses(this)) { //if we ever switch heuristic to processing by sorted sizes, this would be unnecessary\n                            this.graph.removeEdge(this.fetchCell(cellFromRange), rangeVertex);\n                        }\n                    }\n                }\n                else {\n                    rangeVertex.bruteForce = true;\n                }\n                const matrix = this.matrixMapping.getMatrix(restRange);\n                if (matrix !== undefined) {\n                    this.graph.addEdge(matrix, rangeVertex);\n                }\n                else {\n                    for (const cellFromRange of restRange.addresses(this)) {\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(cellFromRange), rangeVertex);\n                    }\n                }\n                this.graph.addEdge(rangeVertex, endVertex);\n                if (range.isFinite()) {\n                    this.correctInfiniteRangesDependenciesByRangeVertex(rangeVertex);\n                }\n            }\n            else if (dep instanceof NamedExpressionDependency) {\n                const sheetOfVertex = endVertex.getAddress(this.lazilyTransformingAstService).sheet;\n                const namedExpressionVertex = this.fetchNamedExpressionVertex(dep.name, sheetOfVertex);\n                this.graph.addEdge(namedExpressionVertex, endVertex);\n            }\n            else {\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(dep), endVertex);\n            }\n        });\n    }\n    fetchNamedExpressionVertex(expressionName, sheetId) {\n        const namedExpression = this.namedExpressions.namedExpressionOrPlaceholder(expressionName, sheetId);\n        return this.fetchCellOrCreateEmpty(namedExpression.address);\n    }\n    exchangeNode(addressFrom, addressTo) {\n        const vertexFrom = this.fetchCellOrCreateEmpty(addressFrom);\n        const vertexTo = this.fetchCellOrCreateEmpty(addressTo);\n        this.addressMapping.removeCell(addressFrom);\n        this.exchangeGraphNode(vertexFrom, vertexTo);\n    }\n    correctInfiniteRangesDependenciesByRangeVertex(vertex) {\n        for (const range of this.graph.infiniteRanges) {\n            const infiniteRangeVertex = range;\n            const intersection = vertex.range.intersectionWith(infiniteRangeVertex.range);\n            if (intersection === null) {\n                continue;\n            }\n            for (const address of intersection.addresses(this)) {\n                this.graph.addEdge(this.fetchCellOrCreateEmpty(address), range);\n            }\n        }\n    }\n    correctInfiniteRangesDependency(address) {\n        let vertex = null;\n        for (const range of this.graph.infiniteRanges) {\n            const infiniteRangeVertex = range;\n            if (infiniteRangeVertex.range.addressInRange(address)) {\n                vertex = vertex || this.fetchCellOrCreateEmpty(address);\n                this.graph.addEdge(vertex, infiniteRangeVertex);\n            }\n        }\n    }\n    fetchCellOrCreateEmpty(address) {\n        let vertex = this.addressMapping.getCell(address);\n        if (!vertex) {\n            vertex = new EmptyCellVertex(address);\n            this.graph.addNode(vertex);\n            this.addressMapping.setCell(address, vertex);\n        }\n        return vertex;\n    }\n    removeRows(removedRows) {\n        if (this.matrixMapping.isFormulaMatrixInRows(removedRows)) {\n            throw Error('It is not possible to remove row with matrix');\n        }\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\n            for (const vertex of this.addressMapping.verticesFromRowsSpan(removedRows)) {\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n                }\n                if (vertex instanceof MatrixVertex) {\n                    continue;\n                }\n                this.removeVertex(vertex);\n            }\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.truncateMatricesAfterRemovingRows(removedRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.removeRows(removedRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.truncateRanges(removedRows, address => address.row);\n        });\n        this.addStructuralNodesToChangeSet();\n    }\n    removeSheet(removedSheetId) {\n        const matrices = new Set();\n        for (const [adr, vertex] of this.addressMapping.sheetEntries(removedSheetId)) {\n            if (vertex instanceof MatrixVertex) {\n                if (matrices.has(vertex)) {\n                    continue;\n                }\n                else {\n                    matrices.add(vertex);\n                }\n            }\n            for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n            }\n            this.removeVertex(vertex);\n            this.addressMapping.removeCell(adr);\n        }\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            for (const matrix of matrices.values()) {\n                this.matrixMapping.removeMatrix(matrix.getRange());\n            }\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            const rangesToRemove = this.rangeMapping.removeRangesInSheet(removedSheetId);\n            for (const range of rangesToRemove) {\n                this.removeVertex(range);\n            }\n            this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n                this.addressMapping.removeSheet(removedSheetId);\n            });\n        });\n        this.addStructuralNodesToChangeSet();\n    }\n    clearSheet(sheetId) {\n        const matrices = new Set();\n        for (const [address, vertex] of this.addressMapping.sheetEntries(sheetId)) {\n            if (vertex instanceof MatrixVertex) {\n                matrices.add(vertex);\n            }\n            else {\n                this.setCellEmpty(address);\n            }\n        }\n        for (const matrix of matrices.values()) {\n            this.setMatrixEmpty(matrix);\n        }\n        this.addStructuralNodesToChangeSet();\n    }\n    removeColumns(removedColumns) {\n        if (this.matrixMapping.isFormulaMatrixInColumns(removedColumns)) {\n            throw Error('It is not possible to remove column within matrix');\n        }\n        this.stats.measure(StatType.ADJUSTING_GRAPH, () => {\n            for (const vertex of this.addressMapping.verticesFromColumnsSpan(removedColumns)) {\n                for (const adjacentNode of this.graph.adjacentNodes(vertex)) {\n                    this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n                }\n                if (vertex instanceof MatrixVertex) {\n                    continue;\n                }\n                this.removeVertex(vertex);\n            }\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.truncateMatricesAfterRemovingColumns(removedColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.removeColumns(removedColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.truncateRanges(removedColumns, address => address.col);\n        });\n        this.addStructuralNodesToChangeSet();\n    }\n    addRows(addedRows) {\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.addRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.expandMatricesAfterAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.rangeMapping.moveAllRangesInSheetAfterRowByRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n            this.fixRangesWhenAddingRows(addedRows.sheet, addedRows.rowStart, addedRows.numberOfRows);\n        });\n        for (const vertex of this.addressMapping.verticesFromRowsSpan(addedRows)) {\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n        }\n        this.addStructuralNodesToChangeSet();\n    }\n    addColumns(addedColumns) {\n        this.stats.measure(StatType.ADJUSTING_ADDRESS_MAPPING, () => {\n            this.addressMapping.addColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_MATRIX_MAPPING, () => {\n            this.expandMatricesAfterAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n        });\n        this.stats.measure(StatType.ADJUSTING_RANGES, () => {\n            this.rangeMapping.moveAllRangesInSheetAfterColumnByColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n            this.fixRangesWhenAddingColumns(addedColumns.sheet, addedColumns.columnStart, addedColumns.numberOfColumns);\n        });\n        for (const vertex of this.addressMapping.verticesFromColumnsSpan(addedColumns)) {\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n        }\n        this.addStructuralNodesToChangeSet();\n    }\n    ensureNoMatrixInRange(range) {\n        if (this.matrixMapping.isFormulaMatrixInRange(range)) {\n            throw Error('It is not possible to move / replace cells with matrix');\n        }\n    }\n    moveCells(sourceRange, toRight, toBottom, toSheet) {\n        for (const sourceAddress of sourceRange.addressesWithDirection(toRight, toBottom, this)) {\n            const targetAddress = simpleCellAddress(toSheet, sourceAddress.col + toRight, sourceAddress.row + toBottom);\n            let sourceVertex = this.addressMapping.getCell(sourceAddress);\n            const targetVertex = this.addressMapping.getCell(targetAddress);\n            this.addressMapping.removeCell(sourceAddress);\n            if (sourceVertex !== null) {\n                this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\n                this.addressMapping.setCell(targetAddress, sourceVertex);\n                let emptyVertex = null;\n                for (const adjacentNode of this.graph.adjacentNodes(sourceVertex)) {\n                    if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\n                        emptyVertex = emptyVertex || this.fetchCellOrCreateEmpty(sourceAddress);\n                        this.graph.addEdge(emptyVertex, adjacentNode);\n                        this.graph.removeEdge(sourceVertex, adjacentNode);\n                    }\n                }\n                if (emptyVertex) {\n                    this.graph.markNodeAsSpecialRecentlyChanged(emptyVertex);\n                    this.addressMapping.setCell(sourceAddress, emptyVertex);\n                }\n            }\n            if (targetVertex !== null) {\n                if (sourceVertex === null) {\n                    this.addressMapping.removeCell(targetAddress);\n                }\n                for (const adjacentNode of this.graph.adjacentNodes(targetVertex)) {\n                    sourceVertex = sourceVertex !== null && sourceVertex !== void 0 ? sourceVertex : this.fetchCellOrCreateEmpty(targetAddress);\n                    this.graph.addEdge(sourceVertex, adjacentNode);\n                    this.graph.markNodeAsSpecialRecentlyChanged(sourceVertex);\n                }\n                this.removeVertex(targetVertex);\n            }\n        }\n        for (const rangeVertex of this.rangeMapping.rangeVerticesContainedInRange(sourceRange)) {\n            for (const adjacentNode of this.graph.adjacentNodes(rangeVertex)) {\n                if (adjacentNode instanceof RangeVertex && !sourceRange.containsRange(adjacentNode.range)) {\n                    this.graph.removeEdge(rangeVertex, adjacentNode);\n                    for (const address of rangeVertex.range.addresses(this)) {\n                        const newEmptyVertex = this.fetchCellOrCreateEmpty(address);\n                        this.graph.addEdge(newEmptyVertex, adjacentNode);\n                        this.addressMapping.setCell(address, newEmptyVertex);\n                        this.graph.markNodeAsSpecialRecentlyChanged(newEmptyVertex);\n                    }\n                }\n            }\n        }\n        this.rangeMapping.moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet);\n    }\n    disableNumericMatrices() {\n        for (const [_, matrixVertex] of this.matrixMapping.numericMatrices()) {\n            this.breakNumericMatrix(matrixVertex);\n        }\n    }\n    breakNumericMatricesInRange(range) {\n        for (const [_, matrix] of this.matrixMapping.numericMatricesInRange(range)) {\n            this.breakNumericMatrix(matrix);\n        }\n    }\n    breakNumericMatrix(matrixVertex) {\n        const matrixRange = AbsoluteCellRange.spanFrom(matrixVertex.getAddress(), matrixVertex.width, matrixVertex.height);\n        const adjacentNodes = this.graph.adjacentNodes(matrixVertex);\n        for (const address of matrixRange.addresses(this)) {\n            // We wouldn't need that typecast if we would take values from Matrix\n            const valueVertex = new ValueCellVertex(this.getCellValue(address), this.getRawValue(address));\n            this.addVertex(address, valueVertex);\n        }\n        for (const adjacentNode of adjacentNodes.values()) {\n            const nodeDependencies = collectAddressesDependentToMatrix(this.functionRegistry, adjacentNode, matrixVertex, this.lazilyTransformingAstService, this);\n            for (const address of nodeDependencies) {\n                const vertex = this.fetchCell(address);\n                this.graph.addEdge(vertex, adjacentNode);\n            }\n        }\n        this.removeVertex(matrixVertex);\n        this.matrixMapping.removeMatrix(matrixVertex.getRange());\n    }\n    setMatrixEmpty(matrixVertex) {\n        const matrixRange = AbsoluteCellRange.spanFrom(matrixVertex.getAddress(), matrixVertex.width, matrixVertex.height);\n        const adjacentNodes = this.graph.adjacentNodes(matrixVertex);\n        for (const address of matrixRange.addresses(this)) {\n            this.addressMapping.removeCell(address);\n        }\n        for (const adjacentNode of adjacentNodes.values()) {\n            const nodeDependencies = collectAddressesDependentToMatrix(this.functionRegistry, adjacentNode, matrixVertex, this.lazilyTransformingAstService, this);\n            for (const address of nodeDependencies) {\n                const vertex = this.fetchCellOrCreateEmpty(address);\n                this.graph.addEdge(vertex, adjacentNode);\n            }\n            if (nodeDependencies.length > 0) {\n                this.graph.markNodeAsSpecialRecentlyChanged(adjacentNode);\n            }\n        }\n        this.removeVertex(matrixVertex);\n        this.matrixMapping.removeMatrix(matrixVertex.getRange());\n    }\n    addVertex(address, vertex) {\n        this.graph.addNode(vertex);\n        this.setVertexAddress(address, vertex);\n    }\n    addMatrixVertex(address, vertex) {\n        this.graph.addNode(vertex);\n        this.setAddressMappingForMatrixVertex(vertex, address);\n    }\n    addNewMatrixVertex(matrixVertex) {\n        const range = AbsoluteCellRange.spanFrom(matrixVertex.getAddress(), matrixVertex.width, matrixVertex.height);\n        for (const vertex of this.verticesFromRange(range)) {\n            if (vertex instanceof MatrixVertex) {\n                throw Error('You cannot modify only part of an array');\n            }\n        }\n        this.setMatrix(range, matrixVertex);\n        for (const [address, vertex] of this.entriesFromRange(range)) {\n            if (vertex) {\n                this.exchangeGraphNode(vertex, matrixVertex);\n            }\n            this.setVertexAddress(address, matrixVertex);\n        }\n    }\n    *matrixFormulaNodes() {\n        for (const vertex of this.graph.nodes) {\n            if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                yield vertex;\n            }\n        }\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        yield* this.addressMapping.entriesFromRowsSpan(rowsSpan);\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        yield* this.addressMapping.entriesFromColumnsSpan(columnsSpan);\n    }\n    existsVertex(address) {\n        return this.addressMapping.has(address);\n    }\n    fetchCell(address) {\n        return this.addressMapping.fetchCell(address);\n    }\n    getCell(address) {\n        return this.addressMapping.getCell(address);\n    }\n    getCellValue(address) {\n        return this.addressMapping.getCellValue(address);\n    }\n    getRawValue(address) {\n        return this.addressMapping.getRawValue(address);\n    }\n    getScalarValue(address) {\n        const value = this.addressMapping.getCellValue(address);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n        }\n        return value;\n    }\n    setVertexAddress(address, vertex) {\n        this.addressMapping.setCell(address, vertex);\n    }\n    existsEdge(fromNode, toNode) {\n        return this.graph.existsEdge(fromNode, toNode);\n    }\n    getSheetId(sheetName) {\n        return this.sheetMapping.fetch(sheetName);\n    }\n    getSheetName(sheetId) {\n        return this.sheetMapping.fetchDisplayName(sheetId);\n    }\n    getSheetHeight(sheet) {\n        return this.addressMapping.getHeight(sheet);\n    }\n    getSheetWidth(sheet) {\n        return this.addressMapping.getWidth(sheet);\n    }\n    getMatrix(range) {\n        return this.matrixMapping.getMatrix(range);\n    }\n    setMatrix(range, vertex) {\n        this.matrixMapping.setMatrix(range, vertex);\n    }\n    getRange(start, end) {\n        return this.rangeMapping.getRange(start, end);\n    }\n    topSortWithScc() {\n        return this.graph.topSortWithScc();\n    }\n    markAsVolatile(vertex) {\n        this.graph.markNodeAsSpecial(vertex);\n    }\n    markAsDependentOnStructureChange(vertex) {\n        this.graph.markNodeAsChangingWithStructure(vertex);\n    }\n    forceApplyPostponedTransformations() {\n        for (const vertex of this.graph.nodes.values()) {\n            if (vertex instanceof FormulaCellVertex) {\n                vertex.ensureRecentData(this.lazilyTransformingAstService);\n            }\n        }\n    }\n    volatileVertices() {\n        return this.graph.specialNodes;\n    }\n    destroy() {\n        this.graph.destroy();\n        this.addressMapping.destroy();\n        this.rangeMapping.destroy();\n        this.sheetMapping.destroy();\n        this.matrixMapping.destroy();\n    }\n    *verticesFromRange(range) {\n        for (const address of range.addresses(this)) {\n            const vertex = this.getCell(address);\n            if (vertex) {\n                yield vertex;\n            }\n        }\n    }\n    *rawValuesFromRange(range) {\n        for (const address of range.addresses(this)) {\n            const value = this.getScalarValue(address);\n            if (value !== EmptyValue) {\n                yield [getRawValue(value), address];\n            }\n        }\n    }\n    *entriesFromRange(range) {\n        for (const address of range.addresses(this)) {\n            yield [address, this.getCell(address)];\n        }\n    }\n    exchangeGraphNode(oldNode, newNode) {\n        this.graph.addNode(newNode);\n        const adjNodesStored = this.graph.adjacentNodes(oldNode);\n        this.removeVertex(oldNode);\n        adjNodesStored.forEach((adjacentNode) => {\n            if (this.graph.hasNode(adjacentNode)) {\n                this.graph.addEdge(newNode, adjacentNode);\n            }\n        });\n    }\n    exchangeOrAddGraphNode(oldNode, newNode) {\n        if (oldNode) {\n            this.exchangeGraphNode(oldNode, newNode);\n        }\n        else {\n            this.graph.addNode(newNode);\n        }\n    }\n    computeListOfValuesInRange(range) {\n        const values = [];\n        for (const cellFromRange of range.addresses(this)) {\n            const value = this.getScalarValue(cellFromRange);\n            values.push(value);\n        }\n        return values;\n    }\n    addStructuralNodesToChangeSet() {\n        for (const vertex of this.graph.specialNodesStructuralChanges) {\n            this.graph.markNodeAsSpecialRecentlyChanged(vertex);\n        }\n    }\n    fixRangesWhenAddingRows(sheet, row, numberOfRows) {\n        const originalValues = Array.from(this.rangeMapping.rangesInSheet(sheet));\n        for (const rangeVertex of originalValues) {\n            if (rangeVertex.range.includesRow(row + numberOfRows)) {\n                if (rangeVertex.bruteForce) {\n                    const addedSubrangeInThatRange = rangeVertex.range.rangeWithSameWidth(row, numberOfRows);\n                    for (const address of addedSubrangeInThatRange.addresses(this)) {\n                        this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\n                    }\n                }\n                else {\n                    let currentRangeVertex = rangeVertex;\n                    let find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\n                    if (find.smallerRangeVertex !== null) {\n                        continue;\n                    }\n                    while (find.smallerRangeVertex === null) {\n                        const newRangeVertex = new RangeVertex(AbsoluteCellRange.spanFrom(currentRangeVertex.range.start, currentRangeVertex.range.width(), currentRangeVertex.range.height() - 1));\n                        this.rangeMapping.setRange(newRangeVertex);\n                        this.graph.addNode(newRangeVertex);\n                        const restRange = new AbsoluteCellRange(simpleCellAddress(currentRangeVertex.range.start.sheet, currentRangeVertex.range.start.col, currentRangeVertex.range.end.row), currentRangeVertex.range.end);\n                        this.addAllFromRange(restRange, currentRangeVertex);\n                        this.graph.addEdge(newRangeVertex, currentRangeVertex);\n                        currentRangeVertex = newRangeVertex;\n                        find = this.rangeMapping.findSmallerRange(currentRangeVertex.range);\n                    }\n                    this.graph.addEdge(find.smallerRangeVertex, currentRangeVertex);\n                    this.addAllFromRange(find.restRange, currentRangeVertex);\n                    this.graph.removeEdge(find.smallerRangeVertex, rangeVertex);\n                }\n            }\n        }\n    }\n    addAllFromRange(range, vertex) {\n        for (const address of range.addresses(this)) {\n            this.graph.addEdge(this.fetchCellOrCreateEmpty(address), vertex);\n        }\n    }\n    fixRangesWhenAddingColumns(sheet, column, numberOfColumns) {\n        for (const rangeVertex of this.rangeMapping.rangesInSheet(sheet)) {\n            if (rangeVertex.range.includesColumn(column + numberOfColumns)) {\n                let subrange;\n                if (rangeVertex.bruteForce) {\n                    subrange = rangeVertex.range.rangeWithSameHeight(column, numberOfColumns);\n                }\n                else {\n                    subrange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, column, rangeVertex.range.end.row), numberOfColumns, 1);\n                }\n                for (const address of subrange.addresses(this)) {\n                    this.graph.addEdge(this.fetchCellOrCreateEmpty(address), rangeVertex);\n                }\n            }\n        }\n    }\n    setAddressMappingForMatrixVertex(vertex, formulaAddress) {\n        this.setVertexAddress(formulaAddress, vertex);\n        if (!(vertex instanceof MatrixVertex)) {\n            return;\n        }\n        const range = AbsoluteCellRange.spanFrom(formulaAddress, vertex.width, vertex.height);\n        this.setMatrix(range, vertex);\n        for (const address of range.addresses(this)) {\n            this.setVertexAddress(address, vertex);\n        }\n    }\n    truncateMatricesAfterRemovingRows(removedRows) {\n        const verticesToRemove = this.matrixMapping.truncateMatricesByRows(removedRows);\n        verticesToRemove.forEach((vertex) => {\n            this.removeVertex(vertex);\n        });\n    }\n    truncateRanges(span, coordinate) {\n        const { verticesToRemove, verticesToMerge } = this.rangeMapping.truncateRanges(span, coordinate);\n        for (const [existingVertex, mergedVertex] of verticesToMerge) {\n            this.mergeRangeVertices(existingVertex, mergedVertex);\n        }\n        for (const rangeVertex of verticesToRemove) {\n            this.removeVertexAndCleanupDependencies(rangeVertex);\n        }\n    }\n    truncateMatricesAfterRemovingColumns(removedColumns) {\n        const verticesToRemove = this.matrixMapping.truncateMatricesByColumns(removedColumns);\n        verticesToRemove.forEach((vertex) => {\n            this.removeVertex(vertex);\n        });\n    }\n    expandMatricesAfterAddingRows(sheet, rowStart, numberOfRows) {\n        for (const [, matrix] of this.matrixMapping.numericMatricesInRows(RowsSpan.fromRowStartAndEnd(sheet, rowStart, rowStart))) {\n            matrix.addRows(sheet, rowStart, numberOfRows);\n            const addedRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, matrix.getAddress().col, rowStart), matrix.width, numberOfRows);\n            for (const address of addedRange.addresses(this)) {\n                this.addressMapping.setCell(address, matrix);\n            }\n        }\n    }\n    expandMatricesAfterAddingColumns(sheet, columnStart, numberOfColumns) {\n        for (const [, matrix] of this.matrixMapping.numericMatricesInColumns(ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart, columnStart))) {\n            matrix.addColumns(sheet, columnStart, numberOfColumns);\n            const addedRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheet, columnStart, matrix.getAddress().row), numberOfColumns, matrix.height);\n            for (const address of addedRange.addresses(this)) {\n                this.addressMapping.setCell(address, matrix);\n            }\n        }\n    }\n    removeVertex(vertex) {\n        this.removeVertexAndCleanupDependencies(vertex);\n        if (vertex instanceof RangeVertex) {\n            this.rangeMapping.removeRange(vertex);\n        }\n    }\n    mergeRangeVertices(existingVertex, newVertex) {\n        const adjNodesStored = this.graph.adjacentNodes(newVertex);\n        this.removeVertexAndCleanupDependencies(newVertex);\n        this.graph.softRemoveEdge(existingVertex, newVertex);\n        adjNodesStored.forEach((adjacentNode) => {\n            if (this.graph.hasNode(adjacentNode)) {\n                this.graph.addEdge(existingVertex, adjacentNode);\n            }\n        });\n    }\n    removeVertexAndCleanupDependencies(inputVertex) {\n        const dependencies = new Set(this.graph.removeNode(inputVertex));\n        while (dependencies.size > 0) {\n            const vertex = dependencies.values().next().value;\n            dependencies.delete(vertex);\n            if (this.graph.hasNode(vertex) && this.graph.adjacentNodesCount(vertex) === 0) {\n                if (vertex instanceof RangeVertex || vertex instanceof EmptyCellVertex) {\n                    this.graph.removeNode(vertex).forEach((candidate) => dependencies.add(candidate));\n                }\n                if (vertex instanceof RangeVertex) {\n                    this.rangeMapping.removeRange(vertex);\n                }\n                else if (vertex instanceof EmptyCellVertex) {\n                    this.addressMapping.removeCell(vertex.address);\n                }\n            }\n        }\n    }\n    getAdjacentNodesAddresses(inputVertex) {\n        const deps = this.graph.adjacentNodes(inputVertex);\n        const ret = [];\n        deps.forEach((vertex) => {\n            const castVertex = vertex;\n            if (castVertex instanceof RangeVertex) {\n                ret.push(new AbsoluteCellRange(castVertex.start, castVertex.end));\n            }\n            else if (castVertex instanceof FormulaCellVertex) {\n                ret.push(castVertex.getAddress(this.lazilyTransformingAstService));\n            }\n            else {\n                ret.push(castVertex.getAddress());\n            }\n        });\n        return ret;\n    }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar defineProperty = require('../internals/object-define-property').f;\nvar create = require('../internals/object-create');\nvar redefineAll = require('../internals/redefine-all');\nvar bind = require('../internals/function-bind-context');\nvar anInstance = require('../internals/an-instance');\nvar iterate = require('../internals/iterate');\nvar defineIterator = require('../internals/define-iterator');\nvar setSpecies = require('../internals/set-species');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fastKey = require('../internals/internal-metadata').fastKey;\nvar InternalStateModule = require('../internals/internal-state');\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nmodule.exports = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, CONSTRUCTOR_NAME);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS) that.size = 0;\n      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n    });\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key == key) return entry;\n      }\n    };\n\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS) state.size = 0;\n        else that.size = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first == entry) state.first = next;\n          if (state.last == entry) state.last = prev;\n          if (DESCRIPTORS) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    redefineAll(C.prototype, IS_MAP ? {\n      // 23.1.3.6 Map.prototype.get(key)\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // 23.1.3.9 Map.prototype.set(key, value)\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // 23.2.3.1 Set.prototype.add(value)\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return C;\n  },\n  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return { value: undefined, done: true };\n      }\n      // return step by kind\n      if (kind == 'keys') return { value: entry.key, done: false };\n      if (kind == 'values') return { value: entry.value, done: false };\n      return { value: [entry.key, entry.value], done: false };\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nmodule.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { AstNodeType, CellAddress } from './parser';\nimport { RowsSpan } from './Span';\nexport const DIFFERENT_SHEETS_ERROR = 'AbsoluteCellRange: Start and end are in different sheets';\nexport const WRONG_RANGE_SIZE = 'AbsoluteCellRange: Wrong range size';\nexport class AbsoluteCellRange {\n    constructor(start, end) {\n        if (start.sheet !== end.sheet) {\n            throw new Error(DIFFERENT_SHEETS_ERROR);\n        }\n        this.start = simpleCellAddress(start.sheet, start.col, start.row);\n        this.end = simpleCellAddress(end.sheet, end.col, end.row);\n    }\n    get sheet() {\n        return this.start.sheet;\n    }\n    static fromAst(ast, baseAddress) {\n        if (ast.type === AstNodeType.CELL_RANGE) {\n            return AbsoluteCellRange.fromCellRange(ast, baseAddress);\n        }\n        else if (ast.type === AstNodeType.COLUMN_RANGE) {\n            return AbsoluteColumnRange.fromColumnRange(ast, baseAddress);\n        }\n        else {\n            return AbsoluteRowRange.fromRowRange(ast, baseAddress);\n        }\n    }\n    static fromCellRange(x, baseAddress) {\n        return new AbsoluteCellRange(new CellAddress(x.start.sheet, x.start.col, x.start.row, x.start.type).toSimpleCellAddress(baseAddress), new CellAddress(x.end.sheet, x.end.col, x.end.row, x.end.type).toSimpleCellAddress(baseAddress));\n    }\n    static spanFrom(topLeftCorner, width, height) {\n        if (!Number.isFinite(width) && Number.isFinite(height)) {\n            return new AbsoluteRowRange(topLeftCorner.sheet, topLeftCorner.row, topLeftCorner.row + height - 1);\n        }\n        else if (!Number.isFinite(height) && Number.isFinite(width)) {\n            return new AbsoluteColumnRange(topLeftCorner.sheet, topLeftCorner.col, topLeftCorner.col + width - 1);\n        }\n        else if (Number.isFinite(height) && Number.isFinite(width)) {\n            return new AbsoluteCellRange(topLeftCorner, simpleCellAddress(topLeftCorner.sheet, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1));\n        }\n        throw new Error(WRONG_RANGE_SIZE);\n    }\n    static fromCoordinates(sheet, x1, y1, x2, y2) {\n        return new AbsoluteCellRange(simpleCellAddress(sheet, x1, y1), simpleCellAddress(sheet, x2, y2));\n    }\n    static singleRangeFromCellAddress(cellAddress, baseAddress) {\n        const simpleCellAddress = cellAddress.toSimpleCellAddress(baseAddress);\n        return new AbsoluteCellRange(simpleCellAddress, simpleCellAddress);\n    }\n    isFinite() {\n        return Number.isFinite(this.size());\n    }\n    doesOverlap(other) {\n        if (this.start.sheet != other.start.sheet) {\n            return false;\n        }\n        if (this.end.row < other.start.row || this.start.row > other.end.row) {\n            return false;\n        }\n        if (this.end.col < other.start.col || this.start.col > other.end.col) {\n            return false;\n        }\n        return true;\n    }\n    addressInRange(address) {\n        if (this.sheet !== address.sheet) {\n            return false;\n        }\n        if (this.start.row <= address.row && this.end.row >= address.row\n            && this.start.col <= address.col && this.end.col >= address.col) {\n            return true;\n        }\n        return false;\n    }\n    columnInRange(address) {\n        if (this.sheet !== address.sheet) {\n            return false;\n        }\n        return this.start.col <= address.col && this.end.col >= address.col;\n    }\n    rowInRange(address) {\n        if (this.sheet !== address.sheet) {\n            return false;\n        }\n        return this.start.row <= address.row && this.end.row >= address.row;\n    }\n    containsRange(range) {\n        return this.addressInRange(range.start) && this.addressInRange(range.end);\n    }\n    intersectionWith(other) {\n        if (this.sheet !== other.start.sheet) {\n            return null;\n        }\n        const startRow = Math.max(this.start.row, other.start.row);\n        const endRow = Math.min(this.end.row, other.end.row);\n        const startCol = Math.max(this.start.col, other.start.col);\n        const endCol = Math.min(this.end.col, other.end.col);\n        if (startRow > endRow || startCol > endCol) {\n            return null;\n        }\n        return new AbsoluteCellRange(simpleCellAddress(this.sheet, startCol, startRow), simpleCellAddress(this.sheet, endCol, endRow));\n    }\n    includesRow(row) {\n        return this.start.row < row && this.end.row >= row;\n    }\n    includesColumn(column) {\n        return this.start.col < column && this.end.col >= column;\n    }\n    shiftByRows(numberOfRows) {\n        this.start.row += numberOfRows;\n        this.end.row += numberOfRows;\n    }\n    expandByRows(numberOfRows) {\n        this.end.row += numberOfRows;\n    }\n    shiftByColumns(numberOfColumns) {\n        this.start.col += numberOfColumns;\n        this.end.col += numberOfColumns;\n    }\n    shifted(byCols, byRows) {\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col + byCols, this.start.row + byRows), this.width(), this.height());\n    }\n    expandByColumns(numberOfColumns) {\n        this.end.col += numberOfColumns;\n    }\n    moveToSheet(toSheet) {\n        this.start.sheet = toSheet;\n        this.end.sheet = toSheet;\n    }\n    removeSpan(span) {\n        if (span instanceof RowsSpan) {\n            this.removeRows(span.start, span.end);\n        }\n        else {\n            this.removeColumns(span.start, span.end);\n        }\n    }\n    removeRows(rowStart, rowEnd) {\n        if (rowStart > this.end.row) {\n            return;\n        }\n        if (rowEnd < this.start.row) {\n            const numberOfRows = rowEnd - rowStart + 1;\n            return this.shiftByRows(-numberOfRows);\n        }\n        if (rowStart <= this.start.row) {\n            this.start.row = rowStart;\n        }\n        this.end.row -= Math.min(rowEnd, this.end.row) - rowStart + 1;\n    }\n    removeColumns(columnStart, columnEnd) {\n        if (columnStart > this.end.col) {\n            return;\n        }\n        if (columnEnd < this.start.col) {\n            const numberOfColumns = columnEnd - columnStart + 1;\n            return this.shiftByColumns(-numberOfColumns);\n        }\n        if (columnStart <= this.start.col) {\n            this.start.col = columnStart;\n        }\n        this.end.col -= Math.min(columnEnd, this.end.col) - columnStart + 1;\n    }\n    shouldBeRemoved() {\n        return this.width() <= 0 || this.height() <= 0;\n    }\n    rangeWithSameWidth(startRow, numberOfRows) {\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, this.start.col, startRow), this.width(), numberOfRows);\n    }\n    rangeWithSameHeight(startColumn, numberOfColumns) {\n        return AbsoluteCellRange.spanFrom(simpleCellAddress(this.sheet, startColumn, this.start.row), numberOfColumns, this.height());\n    }\n    toString() {\n        return `${this.start.sheet},${this.start.col},${this.start.row},${this.end.col},${this.end.row}`;\n    }\n    width() {\n        return this.end.col - this.start.col + 1;\n    }\n    height() {\n        return this.end.row - this.start.row + 1;\n    }\n    size() {\n        return this.height() * this.width();\n    }\n    arrayOfAddressesInRange() {\n        const result = [];\n        for (let y = 0; y < this.height(); ++y) {\n            result[y] = [];\n            for (let x = 0; x < this.width(); ++x) {\n                const value = simpleCellAddress(this.sheet, this.start.col + x, this.start.row + y);\n                result[y].push(value);\n            }\n        }\n        return result;\n    }\n    withStart(newStart) {\n        return new AbsoluteCellRange(newStart, this.end);\n    }\n    sameDimensionsAs(other) {\n        return this.width() === other.width() && this.height() === other.height();\n    }\n    *addresses(dependencyGraph) {\n        let currentRow = this.start.row;\n        while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\n            let currentColumn = this.start.col;\n            while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\n                yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                currentColumn++;\n            }\n            currentRow++;\n        }\n    }\n    *addressesWithDirection(right, bottom, dependencyGraph) {\n        if (right > 0) {\n            if (bottom > 0) {\n                let currentRow = this.effectiveEndRow(dependencyGraph);\n                while (currentRow >= this.start.row) {\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\n                    while (currentColumn >= this.start.col) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn -= 1;\n                    }\n                    currentRow -= 1;\n                }\n            }\n            else {\n                let currentRow = this.start.row;\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\n                    let currentColumn = this.effectiveEndColumn(dependencyGraph);\n                    while (currentColumn >= this.start.col) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn -= 1;\n                    }\n                    currentRow += 1;\n                }\n            }\n        }\n        else {\n            if (bottom > 0) {\n                let currentRow = this.effectiveEndRow(dependencyGraph);\n                while (currentRow >= this.start.row) {\n                    let currentColumn = this.start.col;\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn += 1;\n                    }\n                    currentRow -= 1;\n                }\n            }\n            else {\n                let currentRow = this.start.row;\n                while (currentRow <= this.effectiveEndRow(dependencyGraph)) {\n                    let currentColumn = this.start.col;\n                    while (currentColumn <= this.effectiveEndColumn(dependencyGraph)) {\n                        yield simpleCellAddress(this.start.sheet, currentColumn, currentRow);\n                        currentColumn += 1;\n                    }\n                    currentRow += 1;\n                }\n            }\n        }\n    }\n    getAddress(col, row) {\n        if (col < 0 || row < 0 || row > this.height() - 1 || col > this.width() - 1) {\n            throw Error('Index out of bound');\n        }\n        return simpleCellAddress(this.start.sheet, this.start.col + col, this.start.row + row);\n    }\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\n        return this.end.col >= maxColumns || this.end.row >= maxRows;\n    }\n    effectiveEndColumn(_dependencyGraph) {\n        return this.end.col;\n    }\n    effectiveEndRow(_dependencyGraph) {\n        return this.end.row;\n    }\n}\nexport class AbsoluteColumnRange extends AbsoluteCellRange {\n    static fromColumnRange(x, baseAddress) {\n        const start = x.start.toSimpleColumnAddress(baseAddress);\n        const end = x.end.toSimpleColumnAddress(baseAddress);\n        if (start.sheet !== end.sheet) {\n            throw new Error(DIFFERENT_SHEETS_ERROR);\n        }\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\n    }\n    constructor(sheet, columnStart, columnEnd) {\n        super(simpleCellAddress(sheet, columnStart, 0), simpleCellAddress(sheet, columnEnd, Number.POSITIVE_INFINITY));\n    }\n    shouldBeRemoved() {\n        return this.width() <= 0;\n    }\n    shiftByRows(_numberOfRows) {\n        return;\n    }\n    expandByRows(_numberOfRows) {\n        return;\n    }\n    shifted(byCols, _byRows) {\n        return new AbsoluteColumnRange(this.sheet, this.start.col + byCols, this.end.col + byCols);\n    }\n    removeRows(_rowStart, _rowEnd) {\n        return;\n    }\n    rangeWithSameHeight(startColumn, numberOfColumns) {\n        return new AbsoluteColumnRange(this.sheet, startColumn, startColumn + numberOfColumns - 1);\n    }\n    exceedsSheetSizeLimits(maxColumns, _maxRows) {\n        return this.end.col >= maxColumns;\n    }\n    effectiveEndRow(dependencyGraph) {\n        return dependencyGraph.getSheetHeight(this.sheet) - 1;\n    }\n}\nexport class AbsoluteRowRange extends AbsoluteCellRange {\n    static fromRowRange(x, baseAddress) {\n        const start = x.start.toSimpleRowAddress(baseAddress);\n        const end = x.end.toSimpleRowAddress(baseAddress);\n        if (start.sheet !== end.sheet) {\n            throw new Error(DIFFERENT_SHEETS_ERROR);\n        }\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\n    }\n    constructor(sheet, rowStart, rowEnd) {\n        super(simpleCellAddress(sheet, 0, rowStart), simpleCellAddress(sheet, Number.POSITIVE_INFINITY, rowEnd));\n    }\n    shouldBeRemoved() {\n        return this.height() <= 0;\n    }\n    shiftByColumns(_numberOfColumns) {\n        return;\n    }\n    expandByColumns(_numberOfColumns) {\n        return;\n    }\n    shifted(byCols, byRows) {\n        return new AbsoluteRowRange(this.sheet, this.start.row + byRows, this.end.row + byRows);\n    }\n    removeColumns(_columnStart, _columnEnd) {\n        return;\n    }\n    rangeWithSameWidth(startRow, numberOfRows) {\n        return new AbsoluteRowRange(this.sheet, startRow, startRow + numberOfRows - 1);\n    }\n    exceedsSheetSizeLimits(_maxColumns, maxRows) {\n        return this.end.row >= maxRows;\n    }\n    effectiveEndColumn(dependencyGraph) {\n        return dependencyGraph.getSheetWidth(this.sheet) - 1;\n    }\n}\n","var $ = require('../internals/export');\nvar numberIsFinite = require('../internals/number-is-finite');\n\n// `Number.isFinite` method\n// https://tc39.es/ecma262/#sec-number.isfinite\n$({ target: 'Number', stat: true }, { isFinite: numberIsFinite });\n","var global = require('../internals/global');\n\nvar globalIsFinite = global.isFinite;\n\n// `Number.isFinite` method\n// https://tc39.es/ecma262/#sec-number.isfinite\n// eslint-disable-next-line es/no-number-isfinite -- safe\nmodule.exports = Number.isFinite || function isFinite(it) {\n  return typeof it == 'number' && globalIsFinite(it);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport { cellAddressFromString, simpleCellAddressFromString, simpleCellAddressToString, } from './addressRepresentationConverters';\nexport { CellAddress } from './CellAddress';\nexport { ParserWithCaching, } from './ParserWithCaching';\nexport { collectDependencies, } from './collectDependencies';\nexport { buildLexerConfig, } from './LexerConfig';\nexport { FormulaLexer, } from './FormulaParser';\nexport { AstNodeType, ParsingErrorType, buildProcedureAst, buildCellRangeAst, buildParsingErrorAst, buildCellErrorAst, } from './Ast';\nexport { Unparser } from './Unparser';\nexport { AddressDependency, CellRangeDependency, ColumnRangeDependency, RowRangeDependency, NamedExpressionDependency, } from './RelativeDependency';\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../Cell';\nimport { CellAddress } from './CellAddress';\nimport { ColumnAddress } from './ColumnAddress';\nimport { sheetNameRegexp, simpleSheetName } from './LexerConfig';\nimport { RowAddress } from './RowAddress';\nconst addressRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\$?)([A-Za-z]+)(\\\\$?)([0-9]+)$`);\nconst columnRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\$?)([A-Za-z]+)$`);\nconst rowRegex = new RegExp(`^(${sheetNameRegexp})?(\\\\$?)([0-9]+)$`);\nconst simpleSheetNameRegex = new RegExp(`^${simpleSheetName}$`);\n/**\n * Computes R0C0 representation of cell address based on it's string representation and base address.\n *\n * @param sheetMapping - mapping function needed to change name of a sheet to index\n * @param stringAddress - string representation of cell address, e.g. 'C64'\n * @param baseAddress - base address for R0C0 conversion\n * @returns object representation of address\n */\nexport const cellAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\n    const result = addressRegex.exec(stringAddress);\n    const col = columnLabelToIndex(result[6]);\n    const sheet = extractSheetNumber(result, sheetMapping);\n    if (sheet === undefined) {\n        return undefined;\n    }\n    const row = Number(result[8]) - 1;\n    if (result[5] === '$' && result[7] === '$') {\n        return CellAddress.absolute(sheet, col, row);\n    }\n    else if (result[5] === '$') {\n        return CellAddress.absoluteCol(sheet, col, row - baseAddress.row);\n    }\n    else if (result[7] === '$') {\n        return CellAddress.absoluteRow(sheet, col - baseAddress.col, row);\n    }\n    else {\n        return CellAddress.relative(sheet, col - baseAddress.col, row - baseAddress.row);\n    }\n};\nexport const columnAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\n    const result = columnRegex.exec(stringAddress);\n    const sheet = extractSheetNumber(result, sheetMapping);\n    if (sheet === undefined) {\n        return undefined;\n    }\n    const col = columnLabelToIndex(result[6]);\n    if (result[5] === '$') {\n        return ColumnAddress.absolute(sheet, col);\n    }\n    else {\n        return ColumnAddress.relative(sheet, col - baseAddress.col);\n    }\n};\nexport const rowAddressFromString = (sheetMapping, stringAddress, baseAddress) => {\n    const result = rowRegex.exec(stringAddress);\n    const sheet = extractSheetNumber(result, sheetMapping);\n    if (sheet === undefined) {\n        return undefined;\n    }\n    const row = Number(result[6]) - 1;\n    if (result[5] === '$') {\n        return RowAddress.absolute(sheet, row);\n    }\n    else {\n        return RowAddress.relative(sheet, row - baseAddress.row);\n    }\n};\n/**\n * Computes simple (absolute) address of a cell address based on its string representation.\n * If sheet name present in string representation but is not present in sheet mapping, returns undefined.\n * If sheet name is not present in string representation, returns {@param sheetContext} as sheet number\n *\n * @param sheetMapping - mapping function needed to change name of a sheet to index\n * @param stringAddress - string representation of cell address, e.g. 'C64'\n * @param sheetContext - sheet in context of which we should parse the address\n * @returns absolute representation of address, e.g. { sheet: 0, col: 1, row: 1 }\n */\nexport const simpleCellAddressFromString = (sheetMapping, stringAddress, sheetContext) => {\n    const result = addressRegex.exec(stringAddress);\n    const col = columnLabelToIndex(result[6]);\n    let sheet = extractSheetNumber(result, sheetMapping);\n    if (sheet === undefined) {\n        return undefined;\n    }\n    if (sheet === null) {\n        sheet = sheetContext;\n    }\n    const row = Number(result[8]) - 1;\n    return simpleCellAddress(sheet, col, row);\n};\n/**\n * Returns string representation of absolute address\n * If sheet index is not present in sheet mapping, returns undefined\n *\n * @param sheetIndexMapping - mapping function needed to change sheet index to sheet name\n * @param address - object representation of absolute address\n * @param sheetIndex - if is not equal with address sheet index, string representation will contain sheet name\n * */\nexport const simpleCellAddressToString = (sheetIndexMapping, address, sheetIndex) => {\n    const column = columnIndexToLabel(address.col);\n    const sheetName = sheetIndexToString(address.sheet, sheetIndexMapping);\n    if (sheetName === undefined) {\n        return undefined;\n    }\n    if (sheetIndex !== address.sheet) {\n        return `${sheetName}!${column}${address.row + 1}`;\n    }\n    else {\n        return `${column}${address.row + 1}`;\n    }\n};\n/**\n* Convert column label to index\n*\n* @param columnStringRepresentation - column label (e.g. 'AAB')\n* @returns column index\n* */\nfunction columnLabelToIndex(columnStringRepresentation) {\n    if (columnStringRepresentation.length === 1) {\n        return columnStringRepresentation.toUpperCase().charCodeAt(0) - 65;\n    }\n    else {\n        return columnStringRepresentation.split('').reduce((currentColumn, nextLetter) => {\n            return currentColumn * 26 + (nextLetter.toUpperCase().charCodeAt(0) - 64);\n        }, 0) - 1;\n    }\n}\n/**\n * Converts column index to label\n *\n * @param column - address to convert\n * @returns string representation, e.g. 'AAB'\n */\nexport function columnIndexToLabel(column) {\n    let result = '';\n    while (column >= 0) {\n        result = String.fromCharCode((column % 26) + 97) + result;\n        column = Math.floor(column / 26) - 1;\n    }\n    return result.toUpperCase();\n}\nexport function sheetIndexToString(sheetId, sheetMappingFn) {\n    let sheetName = sheetMappingFn(sheetId);\n    if (sheetName === undefined) {\n        return undefined;\n    }\n    if (simpleSheetNameRegex.test(sheetName)) {\n        return sheetName;\n    }\n    else {\n        sheetName = sheetName.replace(/'/g, \"''\");\n        return `'${sheetName}'`;\n    }\n}\nfunction extractSheetNumber(regexResult, sheetMapping) {\n    var _a;\n    let maybeSheetName = (_a = regexResult[3]) !== null && _a !== void 0 ? _a : regexResult[2];\n    let sheet = null;\n    if (maybeSheetName) {\n        maybeSheetName = maybeSheetName.replace(/''/g, \"'\");\n        sheet = sheetMapping(maybeSheetName);\n        if (sheet === undefined) {\n            return undefined;\n        }\n    }\n    return sheet;\n}\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar enforceInternalState = require('../internals/internal-state').enforce;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) {\n      var state = enforceInternalState(result);\n      state.sticky = true;\n    }\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\n/* eslint-disable regexp/no-assertion-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\nvar shared = require('./shared');\n\nvar nativeExec = RegExp.prototype.exec;\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $reduce = require('../internals/array-reduce').left;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar CHROME_VERSION = require('../internals/engine-v8-version');\nvar IS_NODE = require('../internals/engine-is-node');\n\nvar STRICT_METHOD = arrayMethodIsStrict('reduce');\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aFunction(callbackfn);\n    var O = toObject(that);\n    var self = IndexedObject(O);\n    var length = toLength(O.length);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n","var classof = require('../internals/classof-raw');\nvar global = require('../internals/global');\n\nmodule.exports = classof(global.process) == 'process';\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, UNSUPPORTED_Y);\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExpPrototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n});\n","var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, invalidSimpleCellAddress, simpleCellAddress, simpleColumnAddress, simpleRowAddress, } from '../Cell';\nimport { columnIndexToLabel } from './addressRepresentationConverters';\n/** Possible kinds of cell references */\nexport var CellReferenceType;\n(function (CellReferenceType) {\n    /** Cell reference with both row and column relative. */\n    CellReferenceType[\"CELL_REFERENCE_RELATIVE\"] = \"CELL_REFERENCE\";\n    /** Cell reference with both row and column absolute. */\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE\"] = \"CELL_REFERENCE_ABSOLUTE\";\n    /** Cell reference with absolute column and relative row. */\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_COL\"] = \"CELL_REFERENCE_ABSOLUTE_COL\";\n    /** Cell reference with relative column and absolute row. */\n    CellReferenceType[\"CELL_REFERENCE_ABSOLUTE_ROW\"] = \"CELL_REFERENCE_ABSOLUTE_ROW\";\n})(CellReferenceType || (CellReferenceType = {}));\nexport class CellAddress {\n    constructor(sheet, col, row, type) {\n        this.sheet = sheet;\n        this.col = col;\n        this.row = row;\n        this.type = type;\n    }\n    static relative(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_RELATIVE);\n    }\n    static absolute(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE);\n    }\n    static absoluteCol(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\n    }\n    static absoluteRow(sheet, col, row) {\n        return new CellAddress(sheet, col, row, CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\n    }\n    /**\n     * Converts R0C0 representation of cell address to simple object representation.\n     *\n     * @param baseAddress - base address for R0C0 shifts\n     */\n    toSimpleCellAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE) {\n            return simpleCellAddress(sheet, this.col, this.row);\n        }\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\n            return simpleCellAddress(sheet, baseAddress.col + this.col, this.row);\n        }\n        else if (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\n            return simpleCellAddress(sheet, this.col, baseAddress.row + this.row);\n        }\n        else {\n            return simpleCellAddress(sheet, baseAddress.col + this.col, baseAddress.row + this.row);\n        }\n    }\n    toSimpleColumnAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let column = this.col;\n        if (this.isColumnRelative()) {\n            column += baseAddress.col;\n        }\n        return simpleColumnAddress(sheet, column);\n    }\n    toSimpleRowAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let row = this.row;\n        if (this.isRowRelative()) {\n            row += baseAddress.row;\n        }\n        return simpleRowAddress(sheet, row);\n    }\n    isRowAbsolute() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\n    }\n    isColumnAbsolute() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\n    }\n    isColumnRelative() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW);\n    }\n    isRowRelative() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_RELATIVE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL);\n    }\n    isAbsolute() {\n        return (this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE && this.sheet !== null);\n    }\n    shiftedByRows(numberOfRows) {\n        return new CellAddress(this.sheet, this.col, this.row + numberOfRows, this.type);\n    }\n    shiftedByColumns(numberOfColumns) {\n        return new CellAddress(this.sheet, this.col + numberOfColumns, this.row, this.type);\n    }\n    moved(toSheet, toRight, toBottom) {\n        const newSheet = this.sheet === null ? null : toSheet;\n        return new CellAddress(newSheet, this.col + toRight, this.row + toBottom, this.type);\n    }\n    withAbsoluteSheet(sheet) {\n        return new CellAddress(sheet, this.col, this.row, this.type);\n    }\n    isInvalid(baseAddress) {\n        return invalidSimpleCellAddress(this.toSimpleCellAddress(baseAddress));\n    }\n    shiftRelativeDimensions(toRight, toBottom) {\n        const col = this.isColumnAbsolute() ? this.col : this.col + toRight;\n        const row = this.isRowAbsolute() ? this.row : this.row + toBottom;\n        return new CellAddress(this.sheet, col, row, this.type);\n    }\n    shiftAbsoluteDimensions(toRight, toBottom) {\n        const col = this.isColumnRelative() ? this.col : this.col + toRight;\n        const row = this.isRowRelative() ? this.row : this.row + toBottom;\n        return new CellAddress(this.sheet, col, row, this.type);\n    }\n    hash(withSheet) {\n        const sheetPart = withSheet && this.sheet !== null ? `#${this.sheet}` : '';\n        switch (this.type) {\n            case CellReferenceType.CELL_REFERENCE_RELATIVE: {\n                return `${sheetPart}#${this.row}R${this.col}`;\n            }\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE: {\n                return `${sheetPart}#${this.row}A${this.col}`;\n            }\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL: {\n                return `${sheetPart}#${this.row}AC${this.col}`;\n            }\n            case CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW: {\n                return `${sheetPart}#${this.row}AR${this.col}`;\n            }\n        }\n    }\n    unparse(baseAddress) {\n        const simpleAddress = this.toSimpleCellAddress(baseAddress);\n        if (invalidSimpleCellAddress(simpleAddress)) {\n            return undefined;\n        }\n        const column = columnIndexToLabel(simpleAddress.col);\n        const rowDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW ? '$' : '';\n        const colDollar = this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE || this.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL ? '$' : '';\n        return `${colDollar}${column}${rowDollar}${simpleAddress.row + 1}`;\n    }\n    exceedsSheetSizeLimits(maxColumns, maxRows) {\n        return this.row >= maxRows || this.col >= maxColumns;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, invalidSimpleColumnAddress, simpleColumnAddress } from '../Cell';\nimport { columnIndexToLabel } from './addressRepresentationConverters';\nexport var ReferenceType;\n(function (ReferenceType) {\n    ReferenceType[\"RELATIVE\"] = \"RELATIVE\";\n    ReferenceType[\"ABSOLUTE\"] = \"ABSOLUTE\";\n})(ReferenceType || (ReferenceType = {}));\nexport class ColumnAddress {\n    constructor(sheet, col, type) {\n        this.sheet = sheet;\n        this.col = col;\n        this.type = type;\n    }\n    static absolute(sheet, column) {\n        return new ColumnAddress(sheet, column, ReferenceType.ABSOLUTE);\n    }\n    static relative(sheet, column) {\n        return new ColumnAddress(sheet, column, ReferenceType.RELATIVE);\n    }\n    isColumnAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE);\n    }\n    isColumnRelative() {\n        return (this.type === ReferenceType.RELATIVE);\n    }\n    isAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== null);\n    }\n    moved(toSheet, toRight, _toBottom) {\n        const newSheet = this.sheet === null ? null : toSheet;\n        return new ColumnAddress(newSheet, this.col + toRight, this.type);\n    }\n    shiftedByColumns(numberOfColumns) {\n        return new ColumnAddress(this.sheet, this.col + numberOfColumns, this.type);\n    }\n    toSimpleColumnAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let column = this.col;\n        if (this.isColumnRelative()) {\n            column = baseAddress.col + this.col;\n        }\n        return simpleColumnAddress(sheet, column);\n    }\n    shiftRelativeDimensions(toRight, _toBottom) {\n        const col = this.isColumnRelative() ? this.col + toRight : this.col;\n        return new ColumnAddress(this.sheet, col, this.type);\n    }\n    shiftAbsoluteDimensions(toRight, _toBottom) {\n        const col = this.isColumnAbsolute() ? this.col + toRight : this.col;\n        return new ColumnAddress(this.sheet, col, this.type);\n    }\n    withAbsoluteSheet(sheet) {\n        return new ColumnAddress(sheet, this.col, this.type);\n    }\n    isInvalid(baseAddress) {\n        return this.toSimpleColumnAddress(baseAddress).col < 0;\n    }\n    hash(withSheet) {\n        const sheetPart = withSheet && this.sheet !== null ? `#${this.sheet}` : '';\n        switch (this.type) {\n            case ReferenceType.RELATIVE: {\n                return `${sheetPart}#COLR${this.col}`;\n            }\n            case ReferenceType.ABSOLUTE: {\n                return `${sheetPart}#COLA${this.col}`;\n            }\n        }\n    }\n    unparse(baseAddress) {\n        const simpleAddress = this.toSimpleColumnAddress(baseAddress);\n        if (invalidSimpleColumnAddress(simpleAddress)) {\n            return undefined;\n        }\n        const column = columnIndexToLabel(simpleAddress.col);\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\n        return `${dollar}${column}`;\n    }\n    exceedsSheetSizeLimits(maxColumns) {\n        return this.col >= maxColumns;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { createToken, Lexer } from 'chevrotain';\n/* arithmetic */\n// abstract for + -\nexport const AdditionOp = createToken({\n    name: 'AdditionOp',\n    pattern: Lexer.NA,\n});\nexport const PlusOp = createToken({ name: 'PlusOp', pattern: /\\+/, categories: AdditionOp });\nexport const MinusOp = createToken({ name: 'MinusOp', pattern: /-/, categories: AdditionOp });\n// abstract for * /\nexport const MultiplicationOp = createToken({\n    name: 'MultiplicationOp',\n    pattern: Lexer.NA,\n});\nexport const TimesOp = createToken({ name: 'TimesOp', pattern: /\\*/, categories: MultiplicationOp });\nexport const DivOp = createToken({ name: 'DivOp', pattern: /\\//, categories: MultiplicationOp });\nexport const PowerOp = createToken({ name: 'PowerOp', pattern: /\\^/ });\nexport const PercentOp = createToken({ name: 'PercentOp', pattern: /%/ });\nexport const BooleanOp = createToken({\n    name: 'BooleanOp',\n    pattern: Lexer.NA,\n});\nexport const EqualsOp = createToken({ name: 'EqualsOp', pattern: /=/, categories: BooleanOp });\nexport const NotEqualOp = createToken({ name: 'NotEqualOp', pattern: /<>/, categories: BooleanOp });\nexport const GreaterThanOp = createToken({ name: 'GreaterThanOp', pattern: />/, categories: BooleanOp });\nexport const LessThanOp = createToken({ name: 'LessThanOp', pattern: /</, categories: BooleanOp });\nexport const GreaterThanOrEqualOp = createToken({ name: 'GreaterThanOrEqualOp', pattern: />=/, categories: BooleanOp });\nexport const LessThanOrEqualOp = createToken({ name: 'LessThanOrEqualOp', pattern: /<=/, categories: BooleanOp });\nexport const ConcatenateOp = createToken({ name: 'ConcatenateOp', pattern: /&/ });\n/* addresses */\nexport const simpleSheetName = '[A-Za-z0-9_\\u00C0-\\u02AF]+';\nexport const quotedSheetName = \"'(((?!').|'')*)'\";\nexport const sheetNameRegexp = `(${simpleSheetName}|${quotedSheetName})!`;\nexport const CellReference = createToken({\n    name: 'CellReference',\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\$?[A-Za-z]+\\\\$?[0-9]+`),\n});\nexport const ColumnRange = createToken({\n    name: 'ColumnRange',\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\$?[A-Za-z]+:\\(${sheetNameRegexp}\\)?\\\\$?[A-Za-z]+`),\n});\nexport const RowRange = createToken({\n    name: 'RowRange',\n    pattern: new RegExp(`(${sheetNameRegexp})?\\\\$?[0-9]+:\\(${sheetNameRegexp}\\)?\\\\$?[0-9]+`),\n});\nexport const RangeSeparator = createToken({ name: 'RangeSeparator', pattern: /:/ });\n/* parenthesis */\nexport const LParen = createToken({ name: 'LParen', pattern: /\\(/ });\nexport const RParen = createToken({ name: 'RParen', pattern: /\\)/ });\n/* prcoedures */\nexport const ProcedureName = createToken({ name: 'ProcedureName', pattern: /([A-Za-z\\u00C0-\\u02AF][A-Za-z0-9\\u00C0-\\u02AF._]*)\\(/ });\n/* named expressions */\nexport const NamedExpression = createToken({ name: 'NamedExpression', pattern: /[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF._]*/ });\n/* string literal */\nexport const StringLiteral = createToken({ name: 'StringLiteral', pattern: /\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/ });\n/* error literal */\nexport const ErrorLiteral = createToken({ name: 'ErrorLiteral', pattern: /#[A-Za-z0-9\\/]+[?!]?/ });\n/* skipping whitespaces */\nexport const WhiteSpace = createToken({\n    name: 'WhiteSpace',\n    pattern: /[ \\t\\n\\r]+/,\n});\nexport const buildLexerConfig = (config) => {\n    const offsetProcedureNameLiteral = config.translationPackage.getFunctionTranslation('OFFSET');\n    const errorMapping = config.errorMapping;\n    const functionMapping = config.translationPackage.buildFunctionMapping();\n    /* configurable tokens */\n    const ArgSeparator = createToken({ name: 'ArgSeparator', pattern: config.functionArgSeparator });\n    const NumberLiteral = createToken({ name: 'NumberLiteral', pattern: new RegExp(`(([${config.decimalSeparator}]\\\\d+)|(\\\\d+([${config.decimalSeparator}]\\\\d*)?))(e[+-]?\\\\d+)?`) });\n    const OffsetProcedureName = createToken({ name: 'OffsetProcedureName', pattern: new RegExp(offsetProcedureNameLiteral, 'i') });\n    /* order is important, first pattern is used */\n    const allTokens = [\n        WhiteSpace,\n        PlusOp,\n        MinusOp,\n        TimesOp,\n        DivOp,\n        PowerOp,\n        EqualsOp,\n        NotEqualOp,\n        PercentOp,\n        GreaterThanOrEqualOp,\n        LessThanOrEqualOp,\n        GreaterThanOp,\n        LessThanOp,\n        LParen,\n        RParen,\n        OffsetProcedureName,\n        ProcedureName,\n        RangeSeparator,\n        ArgSeparator,\n        ColumnRange,\n        RowRange,\n        NumberLiteral,\n        StringLiteral,\n        ErrorLiteral,\n        ConcatenateOp,\n        BooleanOp,\n        AdditionOp,\n        MultiplicationOp,\n        CellReference,\n        NamedExpression,\n    ];\n    return {\n        ArgSeparator,\n        NumberLiteral,\n        OffsetProcedureName,\n        allTokens,\n        errorMapping,\n        functionMapping,\n        decimalSeparator: config.decimalSeparator,\n        maxColumns: config.maxColumns,\n        maxRows: config.maxRows\n    };\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__155__;","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, invalidSimpleRowAddress, simpleRowAddress } from '../Cell';\nimport { ReferenceType } from './ColumnAddress';\nexport class RowAddress {\n    constructor(sheet, row, type) {\n        this.sheet = sheet;\n        this.row = row;\n        this.type = type;\n    }\n    static absolute(sheet, row) {\n        return new RowAddress(sheet, row, ReferenceType.ABSOLUTE);\n    }\n    static relative(sheet, row) {\n        return new RowAddress(sheet, row, ReferenceType.RELATIVE);\n    }\n    isRowAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE);\n    }\n    isRowRelative() {\n        return (this.type === ReferenceType.RELATIVE);\n    }\n    isAbsolute() {\n        return (this.type === ReferenceType.ABSOLUTE && this.sheet !== null);\n    }\n    moved(toSheet, toRight, toBottom) {\n        const newSheet = this.sheet === null ? null : toSheet;\n        return new RowAddress(newSheet, this.row + toBottom, this.type);\n    }\n    shiftedByRows(numberOfColumns) {\n        return new RowAddress(this.sheet, this.row + numberOfColumns, this.type);\n    }\n    toSimpleRowAddress(baseAddress) {\n        const sheet = absoluteSheetReference(this, baseAddress);\n        let row = this.row;\n        if (this.isRowRelative()) {\n            row = baseAddress.row + this.row;\n        }\n        return simpleRowAddress(sheet, row);\n    }\n    shiftRelativeDimensions(toRight, toBottom) {\n        const row = this.isRowRelative() ? this.row + toBottom : this.row;\n        return new RowAddress(this.sheet, row, this.type);\n    }\n    shiftAbsoluteDimensions(toRight, toBottom) {\n        const row = this.isRowAbsolute() ? this.row + toBottom : this.row;\n        return new RowAddress(this.sheet, row, this.type);\n    }\n    withAbsoluteSheet(sheet) {\n        return new RowAddress(sheet, this.row, this.type);\n    }\n    isInvalid(baseAddress) {\n        return this.toSimpleRowAddress(baseAddress).row < 0;\n    }\n    hash(withSheet) {\n        const sheetPart = withSheet && this.sheet !== null ? `#${this.sheet}` : '';\n        switch (this.type) {\n            case ReferenceType.RELATIVE: {\n                return `${sheetPart}#ROWR${this.row}`;\n            }\n            case ReferenceType.ABSOLUTE: {\n                return `${sheetPart}#ROWA${this.row}`;\n            }\n        }\n    }\n    unparse(baseAddress) {\n        const simpleAddress = this.toSimpleRowAddress(baseAddress);\n        if (invalidSimpleRowAddress(simpleAddress)) {\n            return undefined;\n        }\n        const dollar = this.type === ReferenceType.ABSOLUTE ? '$' : '';\n        return `${dollar}${simpleAddress.row + 1}`;\n    }\n    exceedsSheetSizeLimits(maxRows) {\n        return this.row >= maxRows;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { tokenMatcher } from 'chevrotain';\nimport { ErrorType } from '../Cell';\nimport { AstNodeType, buildParsingErrorAst } from './';\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\nimport { imageWithWhitespace, ParsingErrorType, RangeSheetReferenceType } from './Ast';\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\nimport { Cache } from './Cache';\nimport { FormulaLexer, FormulaParser } from './FormulaParser';\nimport { buildLexerConfig, CellReference, ColumnRange, ProcedureName, RowRange, WhiteSpace, } from './LexerConfig';\nimport { formatNumber } from './Unparser';\n/**\n * Parses formula using caching if feasible.\n */\nexport class ParserWithCaching {\n    constructor(config, functionRegistry, sheetMapping) {\n        this.config = config;\n        this.functionRegistry = functionRegistry;\n        this.sheetMapping = sheetMapping;\n        this.statsCacheUsed = 0;\n        this.lexerConfig = buildLexerConfig(config);\n        this.lexer = new FormulaLexer(this.lexerConfig);\n        this.formulaParser = new FormulaParser(this.lexerConfig, this.sheetMapping);\n        this.cache = new Cache(this.functionRegistry);\n    }\n    /**\n     * Parses a formula.\n     *\n     * @param text - formula to parse\n     * @param formulaAddress - address with regard to which formula should be parsed. Impacts computed addresses in R0C0 format.\n     */\n    parse(text, formulaAddress) {\n        const lexerResult = this.lexer.tokenizeFormula(text);\n        if (lexerResult.errors.length > 0) {\n            const errors = lexerResult.errors.map((e) => ({\n                type: ParsingErrorType.LexingError,\n                message: e.message,\n            }));\n            return { ast: buildParsingErrorAst(), errors, hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] };\n        }\n        const hash = this.computeHashFromTokens(lexerResult.tokens, formulaAddress);\n        let cacheResult = this.cache.get(hash);\n        if (cacheResult) {\n            ++this.statsCacheUsed;\n        }\n        else {\n            const processedTokens = bindWhitespacesToTokens(lexerResult.tokens);\n            const parsingResult = this.formulaParser.parseFromTokens(processedTokens, formulaAddress);\n            if (parsingResult.errors.length > 0) {\n                return Object.assign(Object.assign({}, parsingResult), { hasVolatileFunction: false, hasStructuralChangeFunction: false, dependencies: [] });\n            }\n            else {\n                cacheResult = this.cache.set(hash, parsingResult.ast);\n            }\n        }\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\n        return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\n    }\n    fetchCachedResultForAst(ast) {\n        const hash = this.computeHashFromAst(ast);\n        return this.fetchCachedResult(hash);\n    }\n    fetchCachedResult(hash) {\n        const cacheResult = this.cache.get(hash);\n        if (cacheResult === null) {\n            throw new Error('There is no AST with such key in the cache');\n        }\n        else {\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, relativeDependencies } = cacheResult;\n            return { ast, errors: [], hasVolatileFunction, hasStructuralChangeFunction, dependencies: relativeDependencies };\n        }\n    }\n    computeHashFromTokens(tokens, baseAddress) {\n        var _a;\n        let hash = '';\n        let idx = 0;\n        while (idx < tokens.length) {\n            const token = tokens[idx];\n            if (tokenMatcher(token, CellReference)) {\n                const cellAddress = cellAddressFromString(this.sheetMapping, token.image, baseAddress);\n                if (cellAddress === undefined) {\n                    hash = hash.concat(token.image);\n                }\n                else {\n                    hash = hash.concat(cellAddress.hash(true));\n                }\n            }\n            else if (tokenMatcher(token, ProcedureName)) {\n                const procedureName = token.image.toUpperCase().slice(0, -1);\n                const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\n                hash = hash.concat(canonicalProcedureName, '(');\n            }\n            else if (tokenMatcher(token, ColumnRange)) {\n                const [start, end] = token.image.split(':');\n                const startAddress = columnAddressFromString(this.sheetMapping, start, baseAddress);\n                const endAddress = columnAddressFromString(this.sheetMapping, end, baseAddress);\n                if (startAddress === undefined || endAddress === undefined) {\n                    hash = hash.concat('!REF');\n                }\n                else {\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\n                }\n            }\n            else if (tokenMatcher(token, RowRange)) {\n                const [start, end] = token.image.split(':');\n                const startAddress = rowAddressFromString(this.sheetMapping, start, baseAddress);\n                const endAddress = rowAddressFromString(this.sheetMapping, end, baseAddress);\n                if (startAddress === undefined || endAddress === undefined) {\n                    hash = hash.concat('!REF');\n                }\n                else {\n                    hash = hash.concat(startAddress.hash(true), ':', endAddress.hash(true));\n                }\n            }\n            else {\n                hash = hash.concat(token.image);\n            }\n            idx++;\n        }\n        return hash;\n    }\n    rememberNewAst(ast) {\n        const hash = this.computeHashFromAst(ast);\n        return this.cache.maybeSetAndThenGet(hash, ast);\n    }\n    computeHashFromAst(ast) {\n        return '=' + this.computeHashOfAstNode(ast);\n    }\n    destroy() {\n        this.cache.destroy();\n    }\n    computeHashOfAstNode(ast) {\n        switch (ast.type) {\n            case AstNodeType.EMPTY: {\n                return ast.leadingWhitespace || '';\n            }\n            case AstNodeType.NUMBER: {\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\n            }\n            case AstNodeType.STRING: {\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\n            }\n            case AstNodeType.NAMED_EXPRESSION: {\n                return imageWithWhitespace(ast.expressionName, ast.leadingWhitespace);\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                const args = ast.args.map((arg) => this.computeHashOfAstNode(arg)).join(this.config.functionArgSeparator);\n                const rightPart = ast.procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            case AstNodeType.CELL_REFERENCE: {\n                return imageWithWhitespace(ast.reference.hash(true), ast.leadingWhitespace);\n            }\n            case AstNodeType.COLUMN_RANGE:\n            case AstNodeType.ROW_RANGE:\n            case AstNodeType.CELL_RANGE: {\n                const start = ast.start.hash(ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE);\n                const end = ast.end.hash(ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE);\n                return imageWithWhitespace(start + ':' + end, ast.leadingWhitespace);\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                return imageWithWhitespace('-' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                return imageWithWhitespace('+' + this.computeHashOfAstNode(ast.value), ast.leadingWhitespace);\n            }\n            case AstNodeType.PERCENT_OP: {\n                return this.computeHashOfAstNode(ast.value) + imageWithWhitespace('%', ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR: {\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\n                return imageWithWhitespace(image, ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\n            }\n            case AstNodeType.PARENTHESIS: {\n                const expression = this.computeHashOfAstNode(ast.expression);\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            default: {\n                return this.computeHashOfAstNode(ast.left) + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + this.computeHashOfAstNode(ast.right);\n            }\n        }\n    }\n}\nexport function bindWhitespacesToTokens(tokens) {\n    const processedTokens = [];\n    const first = tokens[0];\n    if (!tokenMatcher(first, WhiteSpace)) {\n        processedTokens.push(first);\n    }\n    for (let i = 1; i < tokens.length; ++i) {\n        const current = tokens[i];\n        if (tokenMatcher(current, WhiteSpace)) {\n            continue;\n        }\n        const previous = tokens[i - 1];\n        if (tokenMatcher(previous, WhiteSpace)) {\n            current.leadingWhitespace = previous;\n        }\n        processedTokens.push(current);\n    }\n    return processedTokens;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError } from '../Cell';\nexport const parsingError = (type, message) => ({\n    type, message\n});\nexport var ParsingErrorType;\n(function (ParsingErrorType) {\n    ParsingErrorType[\"LexingError\"] = \"LexingError\";\n    ParsingErrorType[\"ParserError\"] = \"ParsingError\";\n    ParsingErrorType[\"StaticOffsetError\"] = \"StaticOffsetError\";\n    ParsingErrorType[\"StaticOffsetOutOfRangeError\"] = \"StaticOffsetOutOfRangeError\";\n    ParsingErrorType[\"RangeOffsetNotAllowed\"] = \"RangeOffsetNotAllowed\";\n})(ParsingErrorType || (ParsingErrorType = {}));\nexport var AstNodeType;\n(function (AstNodeType) {\n    AstNodeType[\"EMPTY\"] = \"EMPTY\";\n    AstNodeType[\"NUMBER\"] = \"NUMBER\";\n    AstNodeType[\"STRING\"] = \"STRING\";\n    AstNodeType[\"MINUS_UNARY_OP\"] = \"MINUS_UNARY_OP\";\n    AstNodeType[\"PLUS_UNARY_OP\"] = \"PLUS_UNARY_OP\";\n    AstNodeType[\"PERCENT_OP\"] = \"PERCENT_OP\";\n    AstNodeType[\"CONCATENATE_OP\"] = \"CONCATENATE_OP\";\n    AstNodeType[\"EQUALS_OP\"] = \"EQUALS_OP\";\n    AstNodeType[\"NOT_EQUAL_OP\"] = \"NOT_EQUAL_OP\";\n    AstNodeType[\"GREATER_THAN_OP\"] = \"GREATER_THAN_OP\";\n    AstNodeType[\"LESS_THAN_OP\"] = \"LESS_THAN_OP\";\n    AstNodeType[\"GREATER_THAN_OR_EQUAL_OP\"] = \"GREATER_THAN_OR_EQUAL_OP\";\n    AstNodeType[\"LESS_THAN_OR_EQUAL_OP\"] = \"LESS_THAN_OR_EQUAL_OP\";\n    AstNodeType[\"PLUS_OP\"] = \"PLUS_OP\";\n    AstNodeType[\"MINUS_OP\"] = \"MINUS_OP\";\n    AstNodeType[\"TIMES_OP\"] = \"TIMES_OP\";\n    AstNodeType[\"DIV_OP\"] = \"DIV_OP\";\n    AstNodeType[\"POWER_OP\"] = \"POWER_OP\";\n    AstNodeType[\"FUNCTION_CALL\"] = \"FUNCTION_CALL\";\n    AstNodeType[\"NAMED_EXPRESSION\"] = \"NAMED_EXPRESSION\";\n    AstNodeType[\"PARENTHESIS\"] = \"PARENTHESES\";\n    AstNodeType[\"CELL_REFERENCE\"] = \"CELL_REFERENCE\";\n    AstNodeType[\"CELL_RANGE\"] = \"CELL_RANGE\";\n    AstNodeType[\"COLUMN_RANGE\"] = \"COLUMN_RANGE\";\n    AstNodeType[\"ROW_RANGE\"] = \"ROW_RANGE\";\n    AstNodeType[\"ERROR\"] = \"ERROR\";\n    AstNodeType[\"ERROR_WITH_RAW_INPUT\"] = \"ERROR_WITH_RAW_INPUT\";\n})(AstNodeType || (AstNodeType = {}));\nexport var RangeSheetReferenceType;\n(function (RangeSheetReferenceType) {\n    RangeSheetReferenceType[RangeSheetReferenceType[\"RELATIVE\"] = 0] = \"RELATIVE\";\n    RangeSheetReferenceType[RangeSheetReferenceType[\"START_ABSOLUTE\"] = 1] = \"START_ABSOLUTE\";\n    RangeSheetReferenceType[RangeSheetReferenceType[\"BOTH_ABSOLUTE\"] = 2] = \"BOTH_ABSOLUTE\";\n})(RangeSheetReferenceType || (RangeSheetReferenceType = {}));\nexport const buildEmptyArgAst = (leadingWhitespace) => ({\n    type: AstNodeType.EMPTY,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildNumberAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.NUMBER,\n    value: value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildStringAst = (token) => {\n    var _a;\n    return ({\n        type: AstNodeType.STRING,\n        value: token.image.slice(1, -1),\n        leadingWhitespace: (_a = token.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image,\n    });\n};\nexport const buildCellReferenceAst = (reference, leadingWhitespace) => ({\n    type: AstNodeType.CELL_REFERENCE,\n    reference,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildCellRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\n    assertRangeConsistency(start, end, sheetReferenceType);\n    return {\n        type: AstNodeType.CELL_RANGE,\n        start,\n        end,\n        sheetReferenceType,\n        leadingWhitespace\n    };\n};\nexport const buildColumnRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\n    assertRangeConsistency(start, end, sheetReferenceType);\n    return {\n        type: AstNodeType.COLUMN_RANGE,\n        start,\n        end,\n        sheetReferenceType,\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    };\n};\nexport const buildRowRangeAst = (start, end, sheetReferenceType, leadingWhitespace) => {\n    assertRangeConsistency(start, end, sheetReferenceType);\n    return {\n        type: AstNodeType.ROW_RANGE,\n        start,\n        end,\n        sheetReferenceType,\n        leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    };\n};\nexport const buildConcatenateOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.CONCATENATE_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildEqualsOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.EQUALS_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildNotEqualOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.NOT_EQUAL_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildGreaterThanOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.GREATER_THAN_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildLessThanOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.LESS_THAN_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildGreaterThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.GREATER_THAN_OR_EQUAL_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildLessThanOrEqualOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.LESS_THAN_OR_EQUAL_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPlusOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.PLUS_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildMinusOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.MINUS_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildTimesOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.TIMES_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildDivOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.DIV_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPowerOpAst = (left, right, leadingWhitespace) => ({\n    type: AstNodeType.POWER_OP,\n    left,\n    right,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildMinusUnaryOpAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.MINUS_UNARY_OP,\n    value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPlusUnaryOpAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.PLUS_UNARY_OP,\n    value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildPercentOpAst = (value, leadingWhitespace) => ({\n    type: AstNodeType.PERCENT_OP,\n    value,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildProcedureAst = (procedureName, args, leadingWhitespace, internalWhitespace) => ({\n    type: AstNodeType.FUNCTION_CALL,\n    procedureName,\n    args,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\n});\nexport const buildNamedExpressionAst = (expressionName, leadingWhitespace) => ({\n    type: AstNodeType.NAMED_EXPRESSION,\n    expressionName,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildParenthesisAst = (expression, leadingWhitespace, internalWhitespace) => ({\n    type: AstNodeType.PARENTHESIS,\n    expression,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n    internalWhitespace: internalWhitespace === null || internalWhitespace === void 0 ? void 0 : internalWhitespace.image,\n});\nexport const buildCellErrorAst = (error, leadingWhitespace) => ({\n    type: AstNodeType.ERROR,\n    error,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildErrorWithRawInputAst = (rawInput, error, leadingWhitespace) => ({\n    type: AstNodeType.ERROR_WITH_RAW_INPUT,\n    error,\n    rawInput,\n    leadingWhitespace: leadingWhitespace === null || leadingWhitespace === void 0 ? void 0 : leadingWhitespace.image,\n});\nexport const buildParsingErrorAst = () => ({\n    type: AstNodeType.ERROR,\n    error: CellError.parsingError()\n});\nfunction assertRangeConsistency(start, end, sheetReferenceType) {\n    if ((start.sheet !== null && end.sheet === null) || (start.sheet === null && end.sheet !== null)) {\n        throw new Error('Start address inconsistent with end address');\n    }\n    if ((start.sheet === null && sheetReferenceType !== RangeSheetReferenceType.RELATIVE)\n        || (start.sheet !== null && sheetReferenceType === RangeSheetReferenceType.RELATIVE)) {\n        throw new Error('Sheet address inconsistent with sheet reference type');\n    }\n}\nexport function imageWithWhitespace(image, leadingWhitespace) {\n    return (leadingWhitespace !== null && leadingWhitespace !== void 0 ? leadingWhitespace : '') + image;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AstNodeType } from './Ast';\nexport const binaryOpTokenMap = {\n    [AstNodeType.PLUS_OP]: '+',\n    [AstNodeType.MINUS_OP]: '-',\n    [AstNodeType.TIMES_OP]: '*',\n    [AstNodeType.DIV_OP]: '/',\n    [AstNodeType.CONCATENATE_OP]: '&',\n    [AstNodeType.POWER_OP]: '^',\n    [AstNodeType.EQUALS_OP]: '=',\n    [AstNodeType.NOT_EQUAL_OP]: '<>',\n    [AstNodeType.GREATER_THAN_OP]: '>',\n    [AstNodeType.GREATER_THAN_OR_EQUAL_OP]: '>=',\n    [AstNodeType.LESS_THAN_OP]: '<',\n    [AstNodeType.LESS_THAN_OR_EQUAL_OP]: '<=',\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AstNodeType, collectDependencies } from './';\nconst buildCacheEntry = (ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction) => ({ ast, relativeDependencies, hasVolatileFunction, hasStructuralChangeFunction });\nexport class Cache {\n    constructor(functionRegistry) {\n        this.functionRegistry = functionRegistry;\n        this.cache = new Map();\n    }\n    set(hash, ast) {\n        const astRelativeDependencies = collectDependencies(ast, this.functionRegistry);\n        const cacheEntry = buildCacheEntry(ast, astRelativeDependencies, doesContainFunctions(ast, this.functionRegistry.isFunctionVolatile), doesContainFunctions(ast, this.functionRegistry.isFunctionDependentOnSheetStructureChange));\n        this.cache.set(hash, cacheEntry);\n        return cacheEntry;\n    }\n    get(hash) {\n        return this.cache.get(hash) || null;\n    }\n    maybeSetAndThenGet(hash, ast) {\n        const entryFromCache = this.cache.get(hash);\n        if (entryFromCache) {\n            return entryFromCache.ast;\n        }\n        else {\n            this.set(hash, ast);\n            return ast;\n        }\n    }\n    destroy() {\n        this.cache.clear();\n    }\n}\nexport const doesContainFunctions = (ast, functionCriterion) => {\n    switch (ast.type) {\n        case AstNodeType.EMPTY:\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n        case AstNodeType.ERROR:\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n        case AstNodeType.CELL_REFERENCE:\n        case AstNodeType.CELL_RANGE:\n        case AstNodeType.COLUMN_RANGE:\n        case AstNodeType.ROW_RANGE:\n        case AstNodeType.NAMED_EXPRESSION:\n            return false;\n        case AstNodeType.PERCENT_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.MINUS_UNARY_OP: {\n            return doesContainFunctions(ast.value, functionCriterion);\n        }\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.TIMES_OP:\n        case AstNodeType.DIV_OP:\n        case AstNodeType.POWER_OP:\n            return doesContainFunctions(ast.left, functionCriterion) || doesContainFunctions(ast.right, functionCriterion);\n        case AstNodeType.PARENTHESIS:\n            return doesContainFunctions(ast.expression, functionCriterion);\n        case AstNodeType.FUNCTION_CALL: {\n            if (functionCriterion(ast.procedureName)) {\n                return true;\n            }\n            return ast.args.some((arg) => doesContainFunctions(arg, functionCriterion));\n        }\n    }\n};\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\nmodule.exports = collection('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { EmbeddedActionsParser, EMPTY_ALT, Lexer, tokenMatcher } from 'chevrotain';\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { cellAddressFromString, columnAddressFromString, rowAddressFromString, } from './addressRepresentationConverters';\nimport { AstNodeType, buildCellErrorAst, buildCellRangeAst, buildCellReferenceAst, buildColumnRangeAst, buildConcatenateOpAst, buildDivOpAst, buildEmptyArgAst, buildEqualsOpAst, buildErrorWithRawInputAst, buildGreaterThanOpAst, buildGreaterThanOrEqualOpAst, buildLessThanOpAst, buildLessThanOrEqualOpAst, buildMinusOpAst, buildMinusUnaryOpAst, buildNamedExpressionAst, buildNotEqualOpAst, buildNumberAst, buildParenthesisAst, buildParsingErrorAst, buildPercentOpAst, buildPlusOpAst, buildPlusUnaryOpAst, buildPowerOpAst, buildProcedureAst, buildRowRangeAst, buildStringAst, buildTimesOpAst, parsingError, ParsingErrorType, RangeSheetReferenceType, } from './Ast';\nimport { CellAddress, CellReferenceType } from './CellAddress';\nimport { AdditionOp, BooleanOp, CellReference, ColumnRange, ConcatenateOp, DivOp, EqualsOp, ErrorLiteral, GreaterThanOp, GreaterThanOrEqualOp, LessThanOp, LessThanOrEqualOp, LParen, MinusOp, MultiplicationOp, NamedExpression, NotEqualOp, PercentOp, PlusOp, PowerOp, ProcedureName, RangeSeparator, RowRange, RParen, StringLiteral, TimesOp, WhiteSpace, } from './LexerConfig';\n/**\n * LL(k) formula parser described using Chevrotain DSL\n *\n * It is equivalent to the grammar below:\n *\n * F -> '=' E <br/>\n * B -> K < B | K >= B ... | K <br/>\n * K -> E & K | E <br/>\n * E -> M + E | M - E | M <br/>\n * M -> W * M | W / M | W <br/>\n * W -> C * W | C <br/>\n * C -> N | R | O | A | P | num <br/>\n * N -> '(' E ')' <br/>\n * R -> A:OFFSET(..) | A:A <br/>\n * O -> OFFSET(..) | OFFSET(..):A | OFFSET(..):OFFSET(..) <br/>\n * A -> A1 | $A1 | A$1 | $A$1 <br/>\n * P -> SUM(..) <br/>\n */\nexport class FormulaParser extends EmbeddedActionsParser {\n    constructor(lexerConfig, sheetMapping) {\n        super(lexerConfig.allTokens, { outputCst: false, maxLookahead: 7 });\n        /**\n         * Entry rule\n         */\n        this.formula = this.RULE('formula', () => {\n            this.CONSUME(EqualsOp);\n            return this.SUBRULE(this.booleanExpression);\n        });\n        /**\n         * Rule for boolean expression (e.g. 1 <= A1)\n         */\n        this.booleanExpression = this.RULE('booleanExpression', () => {\n            let lhs = this.SUBRULE(this.concatenateExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(BooleanOp);\n                const rhs = this.SUBRULE2(this.concatenateExpression);\n                if (tokenMatcher(op, EqualsOp)) {\n                    lhs = buildEqualsOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, NotEqualOp)) {\n                    lhs = buildNotEqualOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, GreaterThanOp)) {\n                    lhs = buildGreaterThanOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, LessThanOp)) {\n                    lhs = buildLessThanOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, GreaterThanOrEqualOp)) {\n                    lhs = buildGreaterThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, LessThanOrEqualOp)) {\n                    lhs = buildLessThanOrEqualOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        this.booleanExpressionOrEmpty = this.RULE('booleanExpressionOrEmpty', () => {\n            return this.OR([\n                { ALT: () => this.SUBRULE(this.booleanExpression) },\n                { ALT: EMPTY_ALT(buildEmptyArgAst()) }\n            ]);\n        });\n        /**\n         * Rule for concatenation operator expression (e.g. \"=\" & A1)\n         */\n        this.concatenateExpression = this.RULE('concatenateExpression', () => {\n            let lhs = this.SUBRULE(this.additionExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(ConcatenateOp);\n                const rhs = this.SUBRULE2(this.additionExpression);\n                lhs = buildConcatenateOpAst(lhs, rhs, op.leadingWhitespace);\n            });\n            return lhs;\n        });\n        /**\n         * Rule for addition category operators (e.g. 1 + A1, 1 - A1)\n         */\n        this.additionExpression = this.RULE('additionExpression', () => {\n            let lhs = this.SUBRULE(this.multiplicationExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(AdditionOp);\n                const rhs = this.SUBRULE2(this.multiplicationExpression);\n                if (tokenMatcher(op, PlusOp)) {\n                    lhs = buildPlusOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, MinusOp)) {\n                    lhs = buildMinusOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        /**\n         * Rule for multiplication category operators (e.g. 1 * A1, 1 / A1)\n         */\n        this.multiplicationExpression = this.RULE('multiplicationExpression', () => {\n            let lhs = this.SUBRULE(this.powerExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(MultiplicationOp);\n                const rhs = this.SUBRULE2(this.powerExpression);\n                if (tokenMatcher(op, TimesOp)) {\n                    lhs = buildTimesOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else if (tokenMatcher(op, DivOp)) {\n                    lhs = buildDivOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        /**\n         * Rule for power expression\n         */\n        this.powerExpression = this.RULE('powerExpression', () => {\n            let lhs = this.SUBRULE(this.atomicExpression);\n            this.MANY(() => {\n                const op = this.CONSUME(PowerOp);\n                const rhs = this.SUBRULE2(this.atomicExpression);\n                if (tokenMatcher(op, PowerOp)) {\n                    lhs = buildPowerOpAst(lhs, rhs, op.leadingWhitespace);\n                }\n                else {\n                    this.ACTION(() => {\n                        throw Error('Operator not supported');\n                    });\n                }\n            });\n            return lhs;\n        });\n        /**\n         * Rule for atomic expressions, which is positive atomic expression or negation of it\n         */\n        this.atomicExpression = this.RULE('atomicExpression', () => {\n            return this.OR([\n                {\n                    ALT: () => {\n                        const op = this.CONSUME(AdditionOp);\n                        const value = this.SUBRULE(this.atomicExpression);\n                        if (tokenMatcher(op, PlusOp)) {\n                            return buildPlusUnaryOpAst(value, op.leadingWhitespace);\n                        }\n                        else if (tokenMatcher(op, MinusOp)) {\n                            return buildMinusUnaryOpAst(value, op.leadingWhitespace);\n                        }\n                        else {\n                            this.customParsingError = parsingError(ParsingErrorType.ParserError, 'Mismatched token type');\n                            return this.customParsingError;\n                        }\n                    },\n                },\n                {\n                    ALT: () => this.SUBRULE2(this.rightUnaryOpAtomicExpression),\n                },\n            ]);\n        });\n        this.rightUnaryOpAtomicExpression = this.RULE('rightUnaryOpAtomicExpression', () => {\n            const positiveAtomicExpression = this.SUBRULE(this.positiveAtomicExpression);\n            const percentage = this.OPTION(() => {\n                return this.CONSUME(PercentOp);\n            });\n            if (percentage) {\n                return buildPercentOpAst(positiveAtomicExpression, percentage.leadingWhitespace);\n            }\n            return positiveAtomicExpression;\n        });\n        /**\n         * Rule for positive atomic expressions\n         */\n        this.positiveAtomicExpression = this.RULE('positiveAtomicExpression', () => {\n            return this.OR(this.atomicExpCache || (this.atomicExpCache = [\n                {\n                    ALT: () => this.SUBRULE(this.parenthesisExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.cellRangeExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.columnRangeExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.rowRangeExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.offsetExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.cellReference),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.procedureExpression),\n                },\n                {\n                    ALT: () => this.SUBRULE(this.namedExpressionExpression),\n                },\n                {\n                    ALT: () => {\n                        const number = this.CONSUME(this.lexerConfig.NumberLiteral);\n                        return buildNumberAst(this.numericStringToNumber(number.image), number.leadingWhitespace);\n                    },\n                },\n                {\n                    ALT: () => {\n                        const str = this.CONSUME(StringLiteral);\n                        return buildStringAst(str);\n                    },\n                },\n                {\n                    ALT: () => {\n                        const token = this.CONSUME(ErrorLiteral);\n                        const errString = token.image.toUpperCase();\n                        const errorType = this.lexerConfig.errorMapping[errString];\n                        if (errorType) {\n                            return buildCellErrorAst(new CellError(errorType), token.leadingWhitespace);\n                        }\n                        else {\n                            return this.parsingError(ParsingErrorType.ParserError, 'Unknown error literal');\n                        }\n                    },\n                },\n            ]));\n        });\n        /**\n         * Rule for procedure expressions: SUM(1,A1)\n         */\n        this.procedureExpression = this.RULE('procedureExpression', () => {\n            var _a;\n            const procedureNameToken = this.CONSUME(ProcedureName);\n            const procedureName = procedureNameToken.image.toUpperCase().slice(0, -1);\n            const canonicalProcedureName = (_a = this.lexerConfig.functionMapping[procedureName]) !== null && _a !== void 0 ? _a : procedureName;\n            const args = [];\n            let argument = this.SUBRULE(this.booleanExpressionOrEmpty);\n            this.MANY(() => {\n                var _a;\n                const separator = this.CONSUME(this.lexerConfig.ArgSeparator);\n                if (argument.type === AstNodeType.EMPTY) {\n                    argument.leadingWhitespace = (_a = separator.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image;\n                }\n                args.push(argument);\n                argument = this.SUBRULE2(this.booleanExpressionOrEmpty);\n            });\n            args.push(argument);\n            if (args.length === 1 && args[0].type === AstNodeType.EMPTY) {\n                args.length = 0;\n            }\n            const rParenToken = this.CONSUME(RParen);\n            return buildProcedureAst(canonicalProcedureName, args, procedureNameToken.leadingWhitespace, rParenToken.leadingWhitespace);\n        });\n        this.namedExpressionExpression = this.RULE('namedExpressionExpression', () => {\n            const name = this.CONSUME(NamedExpression);\n            return buildNamedExpressionAst(name.image, name.leadingWhitespace);\n        });\n        /**\n         * Rule for expressions that start with OFFSET() function\n         *\n         * OFFSET() function can occur as cell reference or part of cell range.\n         * In order to preserve LL(k) properties, expressions that starts with OFFSET() functions needs to have separate rule.\n         *\n         * Proper {@link Ast} node type is built depending on the presence of {@link RangeSeparator}\n         */\n        this.offsetExpression = this.RULE('offsetExpression', () => {\n            const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\n            let end;\n            this.OPTION(() => {\n                this.CONSUME(RangeSeparator);\n                if (offsetProcedure.type === AstNodeType.CELL_RANGE) {\n                    end = this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\n                }\n                else {\n                    end = this.SUBRULE(this.endOfRangeWithOffsetStartExpression, { ARGS: [offsetProcedure] });\n                }\n            });\n            if (end !== undefined) {\n                return end;\n            }\n            return offsetProcedure;\n        });\n        /**\n         * Rule for OFFSET() function expression\n         */\n        this.offsetProcedureExpression = this.RULE('offsetProcedureExpression', () => {\n            const args = [];\n            this.CONSUME(this.lexerConfig.OffsetProcedureName);\n            this.CONSUME(LParen);\n            this.MANY_SEP({\n                SEP: this.lexerConfig.ArgSeparator,\n                DEF: () => {\n                    args.push(this.SUBRULE(this.booleanExpression));\n                },\n            });\n            this.CONSUME(RParen);\n            return this.handleOffsetHeuristic(args);\n        });\n        /**\n         * Rule for cell ranges (e.g. A1:B$3, A1:OFFSET())\n         */\n        this.cellRangeExpression = this.RULE('cellRangeExpression', () => {\n            const start = this.CONSUME(CellReference);\n            this.CONSUME2(RangeSeparator);\n            return this.SUBRULE(this.endOfRangeExpression, { ARGS: [start] });\n        });\n        /*\n        * Rule for column range, e.g. A:B, Sheet1!A:B, Sheet1!A:Sheet1!B\n        * */\n        this.columnRangeExpression = this.RULE('columnRangeExpression', () => {\n            const range = this.CONSUME(ColumnRange);\n            const [startImage, endImage] = range.image.split(':');\n            const start = this.ACTION(() => {\n                return columnAddressFromString(this.sheetMapping, startImage, this.formulaAddress);\n            });\n            let end = this.ACTION(() => {\n                return columnAddressFromString(this.sheetMapping, endImage, this.formulaAddress);\n            });\n            if (start === undefined || end === undefined) {\n                return buildCellErrorAst(new CellError(ErrorType.REF));\n            }\n            if (start.exceedsSheetSizeLimits(this.lexerConfig.maxColumns) || end.exceedsSheetSizeLimits(this.lexerConfig.maxColumns)) {\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\n            }\n            if (start.sheet === null && end.sheet !== null) {\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\n            }\n            const sheetReferenceType = this.rangeSheetReferenceType(start.sheet, end.sheet);\n            if (start.sheet !== null && end.sheet === null) {\n                end = end.withAbsoluteSheet(start.sheet);\n            }\n            return buildColumnRangeAst(start, end, sheetReferenceType, range.leadingWhitespace);\n        });\n        /*\n      * Rule for row range, e.g. 1:2, Sheet1!1:2, Sheet1!1:Sheet1!2\n      * */\n        this.rowRangeExpression = this.RULE('rowRangeExpression', () => {\n            const range = this.CONSUME(RowRange);\n            const [startImage, endImage] = range.image.split(':');\n            const start = this.ACTION(() => {\n                return rowAddressFromString(this.sheetMapping, startImage, this.formulaAddress);\n            });\n            let end = this.ACTION(() => {\n                return rowAddressFromString(this.sheetMapping, endImage, this.formulaAddress);\n            });\n            if (start === undefined || end === undefined) {\n                return buildCellErrorAst(new CellError(ErrorType.REF));\n            }\n            if (start.exceedsSheetSizeLimits(this.lexerConfig.maxRows) || end.exceedsSheetSizeLimits(this.lexerConfig.maxRows)) {\n                return buildErrorWithRawInputAst(range.image, new CellError(ErrorType.NAME), range.leadingWhitespace);\n            }\n            if (start.sheet === null && end.sheet !== null) {\n                return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\n            }\n            const sheetReferenceType = this.rangeSheetReferenceType(start.sheet, end.sheet);\n            if (start.sheet !== null && end.sheet === null) {\n                end = end.withAbsoluteSheet(start.sheet);\n            }\n            return buildRowRangeAst(start, end, sheetReferenceType, range.leadingWhitespace);\n        });\n        /**\n         * Rule for cell reference expression (e.g. A1, $A1, A$1, $A$1, $Sheet42!A$17)\n         */\n        this.cellReference = this.RULE('cellReference', () => {\n            const cell = this.CONSUME(CellReference);\n            const address = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, cell.image, this.formulaAddress);\n            });\n            if (address === undefined) {\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.REF), cell.leadingWhitespace);\n            }\n            else if (address.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\n                return buildErrorWithRawInputAst(cell.image, new CellError(ErrorType.NAME), cell.leadingWhitespace);\n            }\n            else {\n                return buildCellReferenceAst(address, cell.leadingWhitespace);\n            }\n        });\n        /**\n         * Rule for end of range expression\n         *\n         * End of range may be a cell reference or OFFSET() function call\n         */\n        this.endOfRangeExpression = this.RULE('endOfRangeExpression', (start) => {\n            return this.OR([\n                {\n                    ALT: () => {\n                        return this.SUBRULE(this.endRangeReference, { ARGS: [start] });\n                    },\n                },\n                {\n                    ALT: () => {\n                        var _a;\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\n                        const startAddress = this.ACTION(() => {\n                            return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\n                        });\n                        if (startAddress === undefined) {\n                            return buildCellErrorAst(new CellError(ErrorType.REF));\n                        }\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\n                            let end = offsetProcedure.reference;\n                            let sheetReferenceType = RangeSheetReferenceType.RELATIVE;\n                            if (startAddress.sheet !== null) {\n                                sheetReferenceType = RangeSheetReferenceType.START_ABSOLUTE;\n                                end = end.withAbsoluteSheet(startAddress.sheet);\n                            }\n                            return buildCellRangeAst(startAddress, end, sheetReferenceType, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\n                        }\n                        else {\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\n                        }\n                    },\n                },\n            ]);\n        });\n        /**\n         * Rule for end of range expression\n         *\n         * End of range may be a cell reference or OFFSET() function call\n         */\n        this.endOfRangeWithOffsetStartExpression = this.RULE('endOfRangeWithOffsetStartExpression', (start) => {\n            return this.OR([\n                {\n                    ALT: () => {\n                        return this.SUBRULE(this.endRangeWithOffsetStartReference, { ARGS: [start] });\n                    },\n                },\n                {\n                    ALT: () => {\n                        const offsetProcedure = this.SUBRULE(this.offsetProcedureExpression);\n                        if (offsetProcedure.type === AstNodeType.CELL_REFERENCE) {\n                            let end = offsetProcedure.reference;\n                            let sheetReferenceType = RangeSheetReferenceType.RELATIVE;\n                            if (start.reference.sheet !== null) {\n                                sheetReferenceType = RangeSheetReferenceType.START_ABSOLUTE;\n                                end = end.withAbsoluteSheet(start.reference.sheet);\n                            }\n                            return buildCellRangeAst(start.reference, end, sheetReferenceType, start.leadingWhitespace);\n                        }\n                        else {\n                            return this.parsingError(ParsingErrorType.RangeOffsetNotAllowed, 'Range offset not allowed here');\n                        }\n                    },\n                },\n            ]);\n        });\n        /**\n         * Rule for end range reference expression with additional checks considering range start\n         */\n        this.endRangeReference = this.RULE('endRangeReference', (start) => {\n            var _a;\n            const end = this.CONSUME(CellReference);\n            const startAddress = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, start.image, this.formulaAddress);\n            });\n            const endAddress = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\n            });\n            if (startAddress === undefined || endAddress === undefined) {\n                return this.ACTION(() => {\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.REF), start.leadingWhitespace);\n                });\n            }\n            else if (startAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)\n                || endAddress.exceedsSheetSizeLimits(this.lexerConfig.maxColumns, this.lexerConfig.maxRows)) {\n                return this.ACTION(() => {\n                    return buildErrorWithRawInputAst(`${start.image}:${end.image}`, new CellError(ErrorType.NAME), start.leadingWhitespace);\n                });\n            }\n            return this.buildCellRange(startAddress, endAddress, (_a = start.leadingWhitespace) === null || _a === void 0 ? void 0 : _a.image);\n        });\n        /**\n         * Rule for end range reference expression starting with offset procedure with additional checks considering range start\n         */\n        this.endRangeWithOffsetStartReference = this.RULE('endRangeWithOffsetStartReference', (start) => {\n            const end = this.CONSUME(CellReference);\n            const endAddress = this.ACTION(() => {\n                return cellAddressFromString(this.sheetMapping, end.image, this.formulaAddress);\n            });\n            if (endAddress === undefined) {\n                return this.ACTION(() => {\n                    return buildCellErrorAst(new CellError(ErrorType.REF));\n                });\n            }\n            return this.buildCellRange(start.reference, endAddress, start.leadingWhitespace);\n        });\n        /**\n         * Rule for parenthesis expression\n         */\n        this.parenthesisExpression = this.RULE('parenthesisExpression', () => {\n            const lParenToken = this.CONSUME(LParen);\n            const expression = this.SUBRULE(this.booleanExpression);\n            const rParenToken = this.CONSUME(RParen);\n            return buildParenthesisAst(expression, lParenToken.leadingWhitespace, rParenToken.leadingWhitespace);\n        });\n        this.numericStringToNumber = (input) => {\n            const normalized = input.replace(this.lexerConfig.decimalSeparator, '.');\n            return Number(normalized);\n        };\n        this.lexerConfig = lexerConfig;\n        this.sheetMapping = sheetMapping;\n        this.formulaAddress = simpleCellAddress(0, 0, 0);\n        this.performSelfAnalysis();\n    }\n    /**\n     * Parses tokenized formula and builds abstract syntax tree\n     *\n     * @param tokens - tokenized formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n    parseFromTokens(tokens, formulaAddress) {\n        this.input = tokens;\n        let ast = this.formulaWithContext(formulaAddress);\n        let errors = [];\n        if (this.customParsingError) {\n            errors.push(this.customParsingError);\n        }\n        errors = errors.concat(this.errors.map((e) => ({\n            type: ParsingErrorType.ParserError,\n            message: e.message,\n        })));\n        if (errors.length > 0) {\n            ast = buildParsingErrorAst();\n        }\n        return {\n            ast,\n            errors\n        };\n    }\n    /**\n     * Entry rule wrapper that sets formula address\n     *\n     * @param address - address of the cell in which formula is located\n     */\n    formulaWithContext(address) {\n        this.formulaAddress = address;\n        return this.formula();\n    }\n    reset() {\n        super.reset();\n        this.customParsingError = undefined;\n    }\n    buildCellRange(startAddress, endAddress, leadingWhitespace) {\n        if (startAddress.sheet === null && endAddress.sheet !== null) {\n            return this.parsingError(ParsingErrorType.ParserError, 'Malformed range expression');\n        }\n        const sheetReferenceType = this.rangeSheetReferenceType(startAddress.sheet, endAddress.sheet);\n        if (startAddress.sheet !== null && endAddress.sheet === null) {\n            endAddress = endAddress.withAbsoluteSheet(startAddress.sheet);\n        }\n        return buildCellRangeAst(startAddress, endAddress, sheetReferenceType, leadingWhitespace);\n    }\n    /**\n     * Returns {@link CellReferenceAst} or {@link CellRangeAst} based on OFFSET function arguments\n     *\n     * @param args - OFFSET function arguments\n     */\n    handleOffsetHeuristic(args) {\n        const cellArg = args[0];\n        if (cellArg.type !== AstNodeType.CELL_REFERENCE) {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'First argument to OFFSET is not a reference');\n        }\n        const rowsArg = args[1];\n        let rowShift;\n        if (rowsArg.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value)) {\n            rowShift = rowsArg.value;\n        }\n        else if (rowsArg.type === AstNodeType.PLUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\n            rowShift = rowsArg.value.value;\n        }\n        else if (rowsArg.type === AstNodeType.MINUS_UNARY_OP && rowsArg.value.type === AstNodeType.NUMBER && Number.isInteger(rowsArg.value.value)) {\n            rowShift = -rowsArg.value.value;\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Second argument to OFFSET is not a static number');\n        }\n        const columnsArg = args[2];\n        let colShift;\n        if (columnsArg.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value)) {\n            colShift = columnsArg.value;\n        }\n        else if (columnsArg.type === AstNodeType.PLUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\n            colShift = columnsArg.value.value;\n        }\n        else if (columnsArg.type === AstNodeType.MINUS_UNARY_OP && columnsArg.value.type === AstNodeType.NUMBER && Number.isInteger(columnsArg.value.value)) {\n            colShift = -columnsArg.value.value;\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Third argument to OFFSET is not a static number');\n        }\n        const heightArg = args[3];\n        let height;\n        if (heightArg === undefined) {\n            height = 1;\n        }\n        else if (heightArg.type === AstNodeType.NUMBER) {\n            height = heightArg.value;\n            if (height < 1) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is too small number');\n            }\n            else if (!Number.isInteger(height)) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not integer');\n            }\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fourth argument to OFFSET is not a static number');\n        }\n        const widthArg = args[4];\n        let width;\n        if (widthArg === undefined) {\n            width = 1;\n        }\n        else if (widthArg.type === AstNodeType.NUMBER) {\n            width = widthArg.value;\n            if (width < 1) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is too small number');\n            }\n            else if (!Number.isInteger(width)) {\n                return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not integer');\n            }\n        }\n        else {\n            return this.parsingError(ParsingErrorType.StaticOffsetError, 'Fifth argument to OFFSET is not a static number');\n        }\n        const topLeftCorner = new CellAddress(null, cellArg.reference.col + colShift, cellArg.reference.row + rowShift, cellArg.reference.type);\n        let absoluteCol = topLeftCorner.col;\n        let absoluteRow = topLeftCorner.row;\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_COL) {\n            absoluteRow = absoluteRow + this.formulaAddress.row;\n        }\n        if (cellArg.reference.type === CellReferenceType.CELL_REFERENCE_RELATIVE\n            || cellArg.reference.type === CellReferenceType.CELL_REFERENCE_ABSOLUTE_ROW) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            absoluteCol = absoluteCol + this.formulaAddress.col;\n        }\n        if (absoluteCol < 0 || absoluteRow < 0) {\n            return buildCellErrorAst(new CellError(ErrorType.REF, ErrorMessage.OutOfSheet));\n        }\n        if (width === 1 && height === 1) {\n            return buildCellReferenceAst(topLeftCorner);\n        }\n        else {\n            const bottomRightCorner = new CellAddress(null, topLeftCorner.col + width - 1, topLeftCorner.row + height - 1, topLeftCorner.type);\n            return buildCellRangeAst(topLeftCorner, bottomRightCorner, RangeSheetReferenceType.RELATIVE);\n        }\n    }\n    parsingError(type, message) {\n        this.customParsingError = parsingError(type, message);\n        return buildParsingErrorAst();\n    }\n    rangeSheetReferenceType(start, end) {\n        if (start === null) {\n            return RangeSheetReferenceType.RELATIVE;\n        }\n        else if (end === null) {\n            return RangeSheetReferenceType.START_ABSOLUTE;\n        }\n        else {\n            return RangeSheetReferenceType.BOTH_ABSOLUTE;\n        }\n    }\n}\nexport class FormulaLexer {\n    constructor(lexerConfig) {\n        this.lexerConfig = lexerConfig;\n        this.lexer = new Lexer(lexerConfig.allTokens, { ensureOptimizations: true });\n    }\n    /**\n     * Returns Lexer tokens from formula string\n     *\n     * @param text - string representation of a formula\n     */\n    tokenizeFormula(text) {\n        const lexingResult = this.lexer.tokenize(text);\n        let tokens = lexingResult.tokens;\n        tokens = this.trimTrailingWhitespaces(tokens);\n        tokens = this.skipWhitespacesInsideRanges(tokens);\n        tokens = this.skipWhitespacesBeforeArgSeparators(tokens);\n        lexingResult.tokens = tokens;\n        return lexingResult;\n    }\n    skipWhitespacesInsideRanges(tokens) {\n        return this.filterTokensByNeighbors(tokens, (previous, current, next) => {\n            return (tokenMatcher(previous, CellReference) || tokenMatcher(previous, RangeSeparator))\n                && tokenMatcher(current, WhiteSpace)\n                && (tokenMatcher(next, CellReference) || tokenMatcher(next, RangeSeparator));\n        });\n    }\n    skipWhitespacesBeforeArgSeparators(tokens) {\n        return this.filterTokensByNeighbors(tokens, (previous, current, next) => {\n            return !tokenMatcher(previous, this.lexerConfig.ArgSeparator)\n                && tokenMatcher(current, WhiteSpace)\n                && tokenMatcher(next, this.lexerConfig.ArgSeparator);\n        });\n    }\n    filterTokensByNeighbors(tokens, shouldBeSkipped) {\n        if (tokens.length < 3) {\n            return tokens;\n        }\n        let i = 0;\n        const filteredTokens = [tokens[i++]];\n        while (i < tokens.length - 1) {\n            if (!shouldBeSkipped(tokens[i - 1], tokens[i], tokens[i + 1])) {\n                filteredTokens.push(tokens[i]);\n            }\n            ++i;\n        }\n        filteredTokens.push(tokens[i]);\n        return filteredTokens;\n    }\n    trimTrailingWhitespaces(tokens) {\n        if (tokens.length > 0 && tokenMatcher(tokens[tokens.length - 1], WhiteSpace)) {\n            tokens.pop();\n        }\n        return tokens;\n    }\n}\n","var $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar has = require('../internals/has');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\n// `Reflect.get` method\n// https://tc39.es/ecma262/#sec-reflect.get\nfunction get(target, propertyKey /* , receiver */) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var descriptor, prototype;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey)) return has(descriptor, 'value')\n    ? descriptor.value\n    : descriptor.get === undefined\n      ? undefined\n      : descriptor.get.call(receiver);\n  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);\n}\n\n$({ target: 'Reflect', stat: true }, {\n  get: get\n});\n","var $ = require('../internals/export');\nvar isInteger = require('../internals/is-integer');\n\n// `Number.isInteger` method\n// https://tc39.es/ecma262/#sec-number.isinteger\n$({ target: 'Number', stat: true }, {\n  isInteger: isInteger\n});\n","var isObject = require('../internals/is-object');\n\nvar floor = Math.floor;\n\n// `Number.isInteger` method implementation\n// https://tc39.es/ecma262/#sec-number.isinteger\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n/**\n* This is a class for detailed error messages across HyperFormula.\n*/\nexport class ErrorMessage {\n}\nErrorMessage.DistinctSigns = 'Distinct signs.';\nErrorMessage.WrongArgNumber = 'Wrong number of arguments.';\nErrorMessage.EmptyArg = 'Empty function argument.';\nErrorMessage.MatrixDimensions = 'Matrix dimensions are not compatible.';\nErrorMessage.ValueSmall = 'Value too small.';\nErrorMessage.ValueLarge = 'Value too large.';\nErrorMessage.BadCriterion = 'Incorrect criterion.';\nErrorMessage.RangeManySheets = 'Range spans more than one sheet.';\nErrorMessage.CellRangeExpected = 'Cell range expected.';\nErrorMessage.ScalarExpected = 'Cell range not allowed.';\nErrorMessage.NumberCoercion = 'Value cannot be coerced to number.';\nErrorMessage.NumberExpected = 'Number argument expected.';\nErrorMessage.IntegerExpected = 'Value needs to be an integer.';\nErrorMessage.BadMode = 'Mode not recognized.';\nErrorMessage.DateBounds = 'Date outside of bounds.';\nErrorMessage.OutOfSheet = 'Resulting reference is out of the sheet.';\nErrorMessage.WrongType = 'Wrong type of argument.';\nErrorMessage.NaN = 'NaN or infinite value encountered.';\nErrorMessage.EqualLength = 'Ranges need to be of equal length.';\nErrorMessage.Negative = 'Value cannot be negative.';\nErrorMessage.NotBinary = 'String does not represent a binary number.';\nErrorMessage.NotOctal = 'String does not represent an octal number.';\nErrorMessage.NotHex = 'String does not represent a hexadecimal number.';\nErrorMessage.EndStartPeriod = 'End period needs to be at least start period.';\nErrorMessage.CellRefExpected = 'Cell reference expected.';\nErrorMessage.BadRef = 'Address is not correct.';\nErrorMessage.NumberRange = 'Number-only range expected.';\nErrorMessage.ValueNotFound = 'Value not found.';\nErrorMessage.ValueBaseLarge = 'Value in base too large.';\nErrorMessage.ValueBaseSmall = 'Value in base too small.';\nErrorMessage.ValueBaseLong = 'Value in base too long.';\nErrorMessage.NegativeLength = 'Length cannot be negative.';\nErrorMessage.PatternNotFound = 'Pattern not found.';\nErrorMessage.MatrixParams = 'Matrix function parameters are not compatible.';\nErrorMessage.OneValue = 'Needs at least one value.';\nErrorMessage.TwoValues = 'Range needs to contain at least two elements.';\nErrorMessage.ThreeValues = 'Range needs to contain at least three elements.';\nErrorMessage.IndexBounds = 'Index out of bounds.';\nErrorMessage.IndexLarge = 'Index too large.';\nErrorMessage.Formula = 'Expected formula.';\nErrorMessage.NegativeCount = 'Count cannot be negative.';\nErrorMessage.ParseError = 'Parsing error.';\nErrorMessage.SheetRef = 'Sheet does not exist.';\nErrorMessage.MatrixFunction = 'Matrix function not recognized.';\nErrorMessage.PeriodLong = 'Period number cannot exceed life length.';\nErrorMessage.InvalidDate = 'Invalid date.';\nErrorMessage.BitshiftLong = 'Result of bitshift is too long.';\nErrorMessage.EmptyString = 'Empty-string argument not allowed.';\nErrorMessage.LengthBounds = 'Length out of bounds.';\nErrorMessage.NegativeTime = 'Time cannot be negative.';\nErrorMessage.NoDefault = 'No default option.';\nErrorMessage.Selector = 'Selector cannot exceed the number of arguments.';\nErrorMessage.StartEndDate = 'Start date needs to be earlier than end date.';\nErrorMessage.IncorrectDateTime = 'String does not represent correct DateTime.';\nErrorMessage.CharacterCodeBounds = 'Character code out of bounds.';\nErrorMessage.NonZero = 'Argument cannot be 0.';\nErrorMessage.LessThanOne = 'Argument cannot be less than 1.';\nErrorMessage.WeekendString = 'Incorrect weekend bitmask string.';\nErrorMessage.InvalidRoman = 'Invalid roman numeral.';\nErrorMessage.WrongOrder = 'Wrong order of values.';\nErrorMessage.ComplexNumberExpected = 'Complex number expected.';\nErrorMessage.ShouldBeIorJ = 'Should be \\'i\\' or \\'j\\'.';\nErrorMessage.FunctionName = (arg) => `Function name ${arg} not recognized.`;\nErrorMessage.NamedExpressionName = (arg) => `Named expression ${arg} not recognized.`;\nErrorMessage.LicenseKey = (arg) => `License key is ${arg}.`;\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ErrorType } from '../Cell';\nimport { NoSheetWithIdError } from '../index';\nimport { sheetIndexToString } from './addressRepresentationConverters';\nimport { AstNodeType, imageWithWhitespace, RangeSheetReferenceType, } from './Ast';\nimport { binaryOpTokenMap } from './binaryOpTokenMap';\nexport class Unparser {\n    constructor(config, lexerConfig, sheetMappingFn, namedExpressions) {\n        this.config = config;\n        this.lexerConfig = lexerConfig;\n        this.sheetMappingFn = sheetMappingFn;\n        this.namedExpressions = namedExpressions;\n    }\n    unparse(ast, address) {\n        return '=' + this.unparseAst(ast, address);\n    }\n    unparseAst(ast, address) {\n        var _a, _b;\n        switch (ast.type) {\n            case AstNodeType.EMPTY: {\n                return imageWithWhitespace('', ast.leadingWhitespace);\n            }\n            case AstNodeType.NUMBER: {\n                return imageWithWhitespace(formatNumber(ast.value, this.config.decimalSeparator), ast.leadingWhitespace);\n            }\n            case AstNodeType.STRING: {\n                return imageWithWhitespace('\"' + ast.value + '\"', ast.leadingWhitespace);\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                const args = ast.args.map((arg) => arg !== undefined ? this.unparseAst(arg, address) : '').join(this.config.functionArgSeparator);\n                const procedureName = this.config.translationPackage.isFunctionTranslated(ast.procedureName) ?\n                    this.config.translationPackage.getFunctionTranslation(ast.procedureName) :\n                    ast.procedureName;\n                const rightPart = procedureName + '(' + args + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            case AstNodeType.NAMED_EXPRESSION: {\n                const originalNamedExpressionName = (_a = this.namedExpressions.nearestNamedExpression(ast.expressionName, address.sheet)) === null || _a === void 0 ? void 0 : _a.displayName;\n                return imageWithWhitespace(originalNamedExpressionName || ast.expressionName, ast.leadingWhitespace);\n            }\n            case AstNodeType.CELL_REFERENCE: {\n                let image;\n                if (ast.reference.sheet !== null) {\n                    image = this.unparseSheetName(ast.reference.sheet) + '!';\n                }\n                else {\n                    image = '';\n                }\n                image += (_b = ast.reference.unparse(address)) !== null && _b !== void 0 ? _b : this.config.translationPackage.getErrorTranslation(ErrorType.REF);\n                return imageWithWhitespace(image, ast.leadingWhitespace);\n            }\n            case AstNodeType.COLUMN_RANGE:\n            case AstNodeType.ROW_RANGE:\n            case AstNodeType.CELL_RANGE: {\n                return imageWithWhitespace(this.formatRange(ast, address), ast.leadingWhitespace);\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                const unparsedExpr = this.unparseAst(ast.value, address);\n                return imageWithWhitespace('+', ast.leadingWhitespace) + unparsedExpr;\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                const unparsedExpr = this.unparseAst(ast.value, address);\n                return imageWithWhitespace('-', ast.leadingWhitespace) + unparsedExpr;\n            }\n            case AstNodeType.PERCENT_OP: {\n                return this.unparseAst(ast.value, address) + imageWithWhitespace('%', ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR: {\n                const image = this.config.translationPackage.getErrorTranslation(ast.error ? ast.error.type : ErrorType.ERROR);\n                return imageWithWhitespace(image, ast.leadingWhitespace);\n            }\n            case AstNodeType.ERROR_WITH_RAW_INPUT: {\n                return imageWithWhitespace(ast.rawInput, ast.leadingWhitespace);\n            }\n            case AstNodeType.PARENTHESIS: {\n                const expression = this.unparseAst(ast.expression, address);\n                const rightPart = '(' + expression + imageWithWhitespace(')', ast.internalWhitespace);\n                return imageWithWhitespace(rightPart, ast.leadingWhitespace);\n            }\n            default: {\n                const left = this.unparseAst(ast.left, address);\n                const right = this.unparseAst(ast.right, address);\n                return left + imageWithWhitespace(binaryOpTokenMap[ast.type], ast.leadingWhitespace) + right;\n            }\n        }\n    }\n    unparseSheetName(sheetId) {\n        const sheetName = sheetIndexToString(sheetId, this.sheetMappingFn);\n        if (sheetName === undefined) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheetName;\n    }\n    formatRange(ast, baseAddress) {\n        let startSheeet = '';\n        let endSheet = '';\n        if (ast.start.sheet !== null && (ast.sheetReferenceType !== RangeSheetReferenceType.RELATIVE)) {\n            startSheeet = this.unparseSheetName(ast.start.sheet) + '!';\n        }\n        if (ast.end.sheet !== null && ast.sheetReferenceType === RangeSheetReferenceType.BOTH_ABSOLUTE) {\n            endSheet = this.unparseSheetName(ast.end.sheet) + '!';\n        }\n        const unparsedStart = ast.start.unparse(baseAddress);\n        const unparsedEnd = ast.end.unparse(baseAddress);\n        if (unparsedStart === undefined || unparsedEnd === undefined) {\n            return this.config.translationPackage.getErrorTranslation(ErrorType.REF);\n        }\n        return `${startSheeet}${unparsedStart}:${endSheet}${unparsedEnd}`;\n    }\n}\nexport function formatNumber(number, decimalSeparator) {\n    const numericString = number.toString();\n    return numericString.replace('.', decimalSeparator);\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AddressDependency, AstNodeType, CellRangeDependency, ColumnRangeDependency, NamedExpressionDependency, RowRangeDependency } from './';\nconst collectDependenciesFn = (ast, functionRegistry, dependenciesSet, needArgument) => {\n    switch (ast.type) {\n        case AstNodeType.EMPTY:\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n        case AstNodeType.ERROR:\n            return;\n        case AstNodeType.NAMED_EXPRESSION: {\n            if (needArgument) {\n                dependenciesSet.push(new NamedExpressionDependency(ast.expressionName));\n            }\n            return;\n        }\n        case AstNodeType.CELL_REFERENCE: {\n            if (needArgument) {\n                dependenciesSet.push(new AddressDependency(ast.reference));\n            }\n            return;\n        }\n        case AstNodeType.CELL_RANGE: {\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\n                dependenciesSet.push(new CellRangeDependency(ast.start, ast.end));\n            }\n            return;\n        }\n        case AstNodeType.COLUMN_RANGE: {\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\n                dependenciesSet.push(new ColumnRangeDependency(ast.start, ast.end));\n            }\n            return;\n        }\n        case AstNodeType.ROW_RANGE: {\n            if (needArgument && ast.start.sheet === ast.end.sheet) {\n                dependenciesSet.push(new RowRangeDependency(ast.start, ast.end));\n            }\n            return;\n        }\n        case AstNodeType.PERCENT_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.MINUS_UNARY_OP: {\n            collectDependenciesFn(ast.value, functionRegistry, dependenciesSet, true);\n            return;\n        }\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.TIMES_OP:\n        case AstNodeType.DIV_OP:\n        case AstNodeType.POWER_OP:\n            collectDependenciesFn(ast.left, functionRegistry, dependenciesSet, true);\n            collectDependenciesFn(ast.right, functionRegistry, dependenciesSet, true);\n            return;\n        case AstNodeType.PARENTHESIS:\n            collectDependenciesFn(ast.expression, functionRegistry, dependenciesSet, needArgument);\n            return;\n        case AstNodeType.FUNCTION_CALL: {\n            const functionNeedArgument = !functionRegistry.doesFunctionNeedArgumentToBeComputed(ast.procedureName);\n            ast.args.forEach((argAst) => collectDependenciesFn(argAst, functionRegistry, dependenciesSet, functionNeedArgument));\n            return;\n        }\n    }\n};\nexport const collectDependencies = (ast, functionRegistry) => {\n    const result = new Array();\n    collectDependenciesFn(ast, functionRegistry, result, true);\n    return result;\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nexport class AddressDependency {\n    constructor(dependency) {\n        this.dependency = dependency;\n    }\n    absolutize(baseAddress) {\n        return this.dependency.toSimpleCellAddress(baseAddress);\n    }\n}\nexport class CellRangeDependency {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    absolutize(baseAddress) {\n        return new AbsoluteCellRange(this.start.toSimpleCellAddress(baseAddress), this.end.toSimpleCellAddress(baseAddress));\n    }\n}\nexport class ColumnRangeDependency {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    absolutize(baseAddress) {\n        const start = this.start.toSimpleColumnAddress(baseAddress);\n        const end = this.end.toSimpleColumnAddress(baseAddress);\n        return new AbsoluteColumnRange(start.sheet, start.col, end.col);\n    }\n}\nexport class RowRangeDependency {\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    absolutize(baseAddress) {\n        const start = this.start.toSimpleRowAddress(baseAddress);\n        const end = this.end.toSimpleRowAddress(baseAddress);\n        return new AbsoluteRowRange(start.sheet, start.row, end.row);\n    }\n}\nexport class NamedExpressionDependency {\n    constructor(name) {\n        this.name = name;\n    }\n    absolutize(_baseAddress) {\n        return this;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n/*\n * A class representing a set of rows in specific sheet\n */\nexport class RowsSpan {\n    constructor(sheet, rowStart, rowEnd) {\n        this.sheet = sheet;\n        this.rowStart = rowStart;\n        this.rowEnd = rowEnd;\n        if (rowStart < 0) {\n            throw Error('Starting row cant be less than 0');\n        }\n        if (rowEnd < rowStart) {\n            throw Error('Row span cant end before start');\n        }\n    }\n    get numberOfRows() {\n        return this.rowEnd - this.rowStart + 1;\n    }\n    static fromNumberOfRows(sheet, rowStart, numberOfRows) {\n        return new RowsSpan(sheet, rowStart, rowStart + numberOfRows - 1);\n    }\n    static fromRowStartAndEnd(sheet, rowStart, rowEnd) {\n        return new RowsSpan(sheet, rowStart, rowEnd);\n    }\n    *rows() {\n        for (let col = this.rowStart; col <= this.rowEnd; ++col) {\n            yield col;\n        }\n    }\n    intersect(otherSpan) {\n        if (this.sheet !== otherSpan.sheet) {\n            throw Error('Can\\'t intersect spans from different sheets');\n        }\n        const start = Math.max(this.rowStart, otherSpan.rowStart);\n        const end = Math.min(this.rowEnd, otherSpan.rowEnd);\n        if (start > end) {\n            return null;\n        }\n        return new RowsSpan(this.sheet, start, end);\n    }\n    firstRow() {\n        return new RowsSpan(this.sheet, this.rowStart, this.rowStart);\n    }\n    get start() {\n        return this.rowStart;\n    }\n    get end() {\n        return this.rowEnd;\n    }\n}\n/*\n * A class representing a set of columns in specific sheet\n */\nexport class ColumnsSpan {\n    constructor(sheet, columnStart, columnEnd) {\n        this.sheet = sheet;\n        this.columnStart = columnStart;\n        this.columnEnd = columnEnd;\n        if (columnStart < 0) {\n            throw Error('Starting column cant be less than 0');\n        }\n        if (columnEnd < columnStart) {\n            throw Error('Column span cant end before start');\n        }\n    }\n    get numberOfColumns() {\n        return this.columnEnd - this.columnStart + 1;\n    }\n    static fromNumberOfColumns(sheet, columnStart, numberOfColumns) {\n        return new ColumnsSpan(sheet, columnStart, columnStart + numberOfColumns - 1);\n    }\n    static fromColumnStartAndEnd(sheet, columnStart, columnEnd) {\n        return new ColumnsSpan(sheet, columnStart, columnEnd);\n    }\n    *columns() {\n        for (let col = this.columnStart; col <= this.columnEnd; ++col) {\n            yield col;\n        }\n    }\n    intersect(otherSpan) {\n        if (this.sheet !== otherSpan.sheet) {\n            throw Error('Can\\'t intersect spans from different sheets');\n        }\n        const start = Math.max(this.columnStart, otherSpan.columnStart);\n        const end = Math.min(this.columnEnd, otherSpan.columnEnd);\n        if (start > end) {\n            return null;\n        }\n        return new ColumnsSpan(this.sheet, start, end);\n    }\n    firstColumn() {\n        return new ColumnsSpan(this.sheet, this.columnStart, this.columnStart);\n    }\n    get start() {\n        return this.columnStart;\n    }\n    get end() {\n        return this.columnEnd;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { invalidSimpleCellAddress } from './Cell';\nimport { NamedExpressionDependency } from './parser';\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\n/**\n * Converts dependencies from maybe relative addressing to absolute addressing.\n *\n * @param deps - list of addresses in R0C0 format\n * @param baseAddress - base address with regard to which make a convertion\n */\nexport const absolutizeDependencies = (deps, baseAddress) => {\n    return deps.map(dep => dep.absolutize(baseAddress));\n};\nexport const filterDependenciesOutOfScope = (deps) => {\n    return deps.filter(dep => {\n        if (dep instanceof NamedExpressionDependency) {\n            return true;\n        }\n        if (dep instanceof AbsoluteCellRange) {\n            return !(invalidSimpleCellAddress(dep.start) || invalidSimpleCellAddress(dep.end));\n        }\n        else {\n            return !invalidSimpleCellAddress(dep);\n        }\n    });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { isExtendedNumber } from './InterpreterValue';\nexport class ArrayData {\n    constructor(size, data, _hasOnlyNumbers) {\n        this.size = size;\n        this.data = data;\n        this._hasOnlyNumbers = _hasOnlyNumbers;\n    }\n    range() {\n        return undefined;\n    }\n    hasOnlyNumbers() {\n        return this._hasOnlyNumbers;\n    }\n    topLeftCorner() {\n        if (this.size.height > 0 && this.size.width > 0) {\n            return this.data[0][0];\n        }\n        return undefined;\n    }\n    valuesFromTopLeftCorner() {\n        const ret = [];\n        for (let i = 0; i < this.size.height; i++) {\n            for (let j = 0; j < this.size.width; j++) {\n                ret.push(this.data[i][j]);\n            }\n        }\n        return ret;\n    }\n    *iterateValuesFromTopLeftCorner() {\n        for (let i = 0; i < this.size.height; i++) {\n            for (let j = 0; j < this.size.width; j++) {\n                yield this.data[i][j];\n            }\n        }\n    }\n    raw() {\n        return this.data;\n    }\n    rawNumbers() {\n        if (this.hasOnlyNumbers()) {\n            return this.data;\n        }\n        else {\n            throw new Error('Data is not only numbers');\n        }\n    }\n}\nexport class OnlyRangeData {\n    constructor(size, _range, dependencyGraph) {\n        this.size = size;\n        this._range = _range;\n        this.dependencyGraph = dependencyGraph;\n    }\n    raw() {\n        this.ensureThatComputed();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.data;\n    }\n    rawNumbers() {\n        if (this.hasOnlyNumbers()) {\n            return this.data;\n        }\n        else {\n            throw new Error('Data is not only numbers');\n        }\n    }\n    hasOnlyNumbers() {\n        this.ensureThatComputed();\n        if (this._hasOnlyNumbers === undefined) {\n            for (const v of this.iterateValuesFromTopLeftCorner()) {\n                if (typeof v !== 'number') {\n                    this._hasOnlyNumbers = false;\n                    break;\n                }\n            }\n            this._hasOnlyNumbers = true;\n        }\n        return this._hasOnlyNumbers;\n    }\n    topLeftCorner() {\n        if (this.data !== undefined && this.size.height > 0 && this.size.width > 0) {\n            return this.data[0][0];\n        }\n        return undefined;\n    }\n    range() {\n        return this._range;\n    }\n    valuesFromTopLeftCorner() {\n        this.ensureThatComputed();\n        const ret = [];\n        for (let i = 0; i < this.data.length; i++) {\n            for (let j = 0; j < this.data[0].length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                ret.push(this.data[i][j]);\n            }\n        }\n        return ret;\n    }\n    *iterateValuesFromTopLeftCorner() {\n        this.ensureThatComputed();\n        for (let i = 0; i < this.data.length; i++) {\n            for (let j = 0; j < this.data[0].length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield this.data[i][j];\n            }\n        }\n    }\n    ensureThatComputed() {\n        if (this.data === undefined) {\n            this.data = this.computeDataFromDependencyGraph();\n        }\n    }\n    computeDataFromDependencyGraph() {\n        const result = [];\n        let i = 0;\n        let row = [];\n        for (const cellFromRange of this._range.addresses(this.dependencyGraph)) {\n            const value = this.dependencyGraph.getCellValue(cellFromRange);\n            if (value instanceof SimpleRangeValue) {\n                row.push(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\n            }\n            else if (isExtendedNumber(value)) {\n                row.push(value);\n            }\n            else {\n                row.push(value);\n                this._hasOnlyNumbers = false;\n            }\n            ++i;\n            if (i % this.size.width === 0) {\n                i = 0;\n                result.push([...row]);\n                row = [];\n            }\n        }\n        return result;\n    }\n}\nexport class SimpleRangeValue {\n    constructor(data, _range) {\n        this.data = data;\n        this._range = _range;\n    }\n    get size() {\n        return this.data.size;\n    }\n    static onlyNumbersDataWithRange(data, size, range) {\n        return new SimpleRangeValue(new ArrayData(size, data, true), range);\n    }\n    static onlyNumbersDataWithoutRange(data, size) {\n        return new SimpleRangeValue(new ArrayData(size, data, true));\n    }\n    static onlyRange(range, dependencyGraph) {\n        return new SimpleRangeValue(new OnlyRangeData({\n            width: range.width(),\n            height: range.height()\n        }, range, dependencyGraph));\n    }\n    static fromScalar(scalar) {\n        const hasOnlyNumbers = isExtendedNumber(scalar);\n        return new SimpleRangeValue(new ArrayData({ width: 1, height: 1 }, [[scalar]], hasOnlyNumbers));\n    }\n    width() {\n        return this.data.size.width;\n    }\n    height() {\n        return this.data.size.height;\n    }\n    raw() {\n        return this.data.raw();\n    }\n    topLeftCornerValue() {\n        return this.data.topLeftCorner();\n    }\n    valuesFromTopLeftCorner() {\n        return this.data.valuesFromTopLeftCorner();\n    }\n    *iterateValuesFromTopLeftCorner() {\n        yield* this.data.iterateValuesFromTopLeftCorner();\n    }\n    numberOfElements() {\n        return this.data.size.width * this.data.size.height;\n    }\n    hasOnlyNumbers() {\n        return this.data.hasOnlyNumbers();\n    }\n    rawNumbers() {\n        return this.data.rawNumbers();\n    }\n    range() {\n        var _a;\n        return (_a = this._range) !== null && _a !== void 0 ? _a : this.data.range();\n    }\n    sameDimensionsAs(other) {\n        return this.width() === other.width() && this.height() === other.height();\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport const EmptyValue = Symbol('Empty value');\nexport function getRawValue(num) {\n    if (num instanceof RichNumber) {\n        return num.val;\n    }\n    else {\n        return num;\n    }\n}\nexport class RichNumber {\n    constructor(val, format) {\n        this.val = val;\n        this.format = format;\n    }\n    fromNumber(val) {\n        return new this.constructor(val);\n    }\n}\nexport function cloneNumber(val, newVal) {\n    if (typeof val === 'number') {\n        return newVal;\n    }\n    else {\n        const ret = val.fromNumber(newVal);\n        ret.format = val.format;\n        return ret;\n    }\n}\nexport class DateNumber extends RichNumber {\n    getDetailedType() {\n        return NumberType.NUMBER_DATE;\n    }\n}\nexport class CurrencyNumber extends RichNumber {\n    getDetailedType() {\n        return NumberType.NUMBER_CURRENCY;\n    }\n}\nexport class TimeNumber extends RichNumber {\n    getDetailedType() {\n        return NumberType.NUMBER_TIME;\n    }\n}\nexport class DateTimeNumber extends RichNumber {\n    getDetailedType() {\n        return NumberType.NUMBER_DATETIME;\n    }\n}\nexport class PercentNumber extends RichNumber {\n    getDetailedType() {\n        return NumberType.NUMBER_PERCENT;\n    }\n}\nexport function isExtendedNumber(val) {\n    return (typeof val === 'number') || (val instanceof RichNumber);\n}\nexport var NumberType;\n(function (NumberType) {\n    NumberType[\"NUMBER_RAW\"] = \"NUMBER_RAW\";\n    NumberType[\"NUMBER_DATE\"] = \"NUMBER_DATE\";\n    NumberType[\"NUMBER_TIME\"] = \"NUMBER_TIME\";\n    NumberType[\"NUMBER_DATETIME\"] = \"NUMBER_DATETIME\";\n    NumberType[\"NUMBER_CURRENCY\"] = \"NUMBER_CURRENCY\";\n    NumberType[\"NUMBER_PERCENT\"] = \"NUMBER_PERCENT\";\n})(NumberType || (NumberType = {}));\nexport function getTypeOfExtendedNumber(num) {\n    if (num instanceof RichNumber) {\n        return num.getDetailedType();\n    }\n    else {\n        return NumberType.NUMBER_RAW;\n    }\n}\nexport function getFormatOfExtendedNumber(num) {\n    if (num instanceof RichNumber) {\n        return num.format;\n    }\n    else {\n        return undefined;\n    }\n}\nexport function getTypeFormatOfExtendedNumber(num) {\n    if (num instanceof RichNumber) {\n        return { type: num.getDetailedType(), format: num.format };\n    }\n    else {\n        return { type: NumberType.NUMBER_RAW };\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport { EmptyStatistics } from './EmptyStatistics';\nexport { Statistics } from './Statistics';\nexport { StatType } from './StatType';\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { Statistics } from './Statistics';\n/** Do not store stats in the memory. Stats are not needed on daily basis */\nexport class EmptyStatistics extends Statistics {\n    /** @inheritDoc */\n    incrementCriterionFunctionFullCacheUsed() {\n        // do nothing\n    }\n    /** @inheritDoc */\n    incrementCriterionFunctionPartialCacheUsed() {\n        // do nothing\n    }\n    /** @inheritDoc */\n    start(_name) {\n        // do nothing\n    }\n    /** @inheritDoc */\n    end(_name) {\n        // do nothing\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { StatType } from './StatType';\n/**\n * Provides tracking performance statistics to the engine\n */\nexport class Statistics {\n    constructor() {\n        this.stats = new Map([\n            [StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0],\n            [StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0],\n        ]);\n        this.startTimes = new Map();\n    }\n    incrementCriterionFunctionFullCacheUsed() {\n        const newValue = (this.stats.get(StatType.CRITERION_FUNCTION_FULL_CACHE_USED) || 0) + 1;\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, newValue);\n    }\n    incrementCriterionFunctionPartialCacheUsed() {\n        const newValue = (this.stats.get(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED) || 0) + 1;\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, newValue);\n    }\n    /**\n     * Resets statistics\n     */\n    reset() {\n        this.stats.clear();\n        this.startTimes.clear();\n        this.stats.set(StatType.CRITERION_FUNCTION_FULL_CACHE_USED, 0);\n        this.stats.set(StatType.CRITERION_FUNCTION_PARTIAL_CACHE_USED, 0);\n    }\n    /**\n     * Starts tracking particular statistic.\n     *\n     * @param name - statistic to start tracking\n     */\n    start(name) {\n        if (this.startTimes.get(name)) {\n            throw Error(`Statistics ${name} already started`);\n        }\n        else {\n            this.startTimes.set(name, Date.now());\n        }\n    }\n    /**\n     * Stops tracking particular statistic.\n     * Raise error if tracking statistic wasn't started.\n     *\n     * @param name - statistic to stop tracking\n     */\n    end(name) {\n        const now = Date.now();\n        const startTime = this.startTimes.get(name);\n        if (startTime) {\n            let values = this.stats.get(name) || 0;\n            values += (now - startTime);\n            this.stats.set(name, values);\n            this.startTimes.delete(name);\n        }\n        else {\n            throw Error(`Statistics ${name} not started`);\n        }\n    }\n    /**\n     * Measure given statistic as execution of given function.\n     *\n     * @param name - statistic to track\n     * @param func - function to call\n     * @returns result of the function call\n     */\n    measure(name, func) {\n        this.start(name);\n        const result = func();\n        this.end(name);\n        return result;\n    }\n    /**\n     * Returns the snapshot of current results\n     */\n    snapshot() {\n        return new Map(this.stats);\n    }\n    destroy() {\n        this.stats.clear();\n        this.startTimes.clear();\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport var StatType;\n(function (StatType) {\n    /* build engine */\n    StatType[\"BUILD_ENGINE_TOTAL\"] = \"BUILD_ENGINE_TOTAL\";\n    StatType[\"PARSER\"] = \"PARSER\";\n    StatType[\"GRAPH_BUILD\"] = \"GRAPH_BUILD\";\n    StatType[\"TOP_SORT\"] = \"TOP_SORT\";\n    StatType[\"MATRIX_DETECTION\"] = \"MATRIX_DETECTION\";\n    StatType[\"BUILD_COLUMN_INDEX\"] = \"BUILD_COLUMN_INDEX\";\n    StatType[\"EVALUATION\"] = \"EVALUATION\";\n    StatType[\"VLOOKUP\"] = \"VLOOKUP\";\n    /* crud adjustments */\n    StatType[\"TRANSFORM_ASTS\"] = \"TRANSFORM_ASTS\";\n    StatType[\"TRANSFORM_ASTS_POSTPONED\"] = \"TRANSFORM_ASTS_POSTPONED\";\n    StatType[\"ADJUSTING_ADDRESS_MAPPING\"] = \"ADJUSTING_ADDRESS_MAPPING\";\n    StatType[\"ADJUSTING_MATRIX_MAPPING\"] = \"ADJUSTING_MATRIX_MAPPING\";\n    StatType[\"ADJUSTING_RANGES\"] = \"ADJUSTING_RANGES\";\n    StatType[\"ADJUSTING_GRAPH\"] = \"ADJUSTING_GRAPH\";\n    /* criterion cache */\n    StatType[\"CRITERION_FUNCTION_FULL_CACHE_USED\"] = \"CRITERION_FUNCTION_FULL_CACHE_USED\";\n    StatType[\"CRITERION_FUNCTION_PARTIAL_CACHE_USED\"] = \"CRITERION_FUNCTION_PARTIAL_CACHE_USED\";\n})(StatType || (StatType = {}));\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { EmptyValue } from '../../interpreter/InterpreterValue';\nimport { MatrixVertex, ValueCellVertex } from '../index';\nimport { NoSheetWithIdError } from '../../errors';\nexport class AddressMapping {\n    constructor(policy) {\n        this.policy = policy;\n        this.mapping = new Map();\n    }\n    /** @inheritDoc */\n    getCell(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(address.sheet);\n        }\n        return sheetMapping.getCell(address);\n    }\n    fetchCell(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(address.sheet);\n        }\n        const vertex = sheetMapping.getCell(address);\n        if (!vertex) {\n            throw Error('Vertex for address missing in AddressMapping');\n        }\n        return vertex;\n    }\n    strategyFor(sheetId) {\n        const strategy = this.mapping.get(sheetId);\n        if (!strategy) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return strategy;\n    }\n    addSheet(sheetId, strategy) {\n        if (this.mapping.has(sheetId)) {\n            throw Error('Sheet already added');\n        }\n        this.mapping.set(sheetId, strategy);\n    }\n    autoAddSheet(sheetId, sheet, sheetBoundaries) {\n        const { height, width, fill } = sheetBoundaries;\n        const strategyConstructor = this.policy.call(fill);\n        this.addSheet(sheetId, new strategyConstructor(width, height));\n    }\n    getCellValue(address) {\n        const vertex = this.getCell(address);\n        if (vertex === null) {\n            return EmptyValue;\n        }\n        else if (vertex instanceof MatrixVertex) {\n            return vertex.getMatrixCellValue(address);\n        }\n        else {\n            return vertex.getCellValue();\n        }\n    }\n    getRawValue(address) {\n        const vertex = this.getCell(address);\n        if (vertex instanceof ValueCellVertex) {\n            return vertex.getValues().rawValue;\n        }\n        else if (vertex instanceof MatrixVertex) {\n            return vertex.getMatrixCellRawValue(address);\n        }\n        else {\n            return null;\n        }\n    }\n    /** @inheritDoc */\n    setCell(address, newVertex) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet not initialized');\n        }\n        sheetMapping.setCell(address, newVertex);\n    }\n    removeCell(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet not initialized');\n        }\n        sheetMapping.removeCell(address);\n    }\n    /** @inheritDoc */\n    has(address) {\n        const sheetMapping = this.mapping.get(address.sheet);\n        if (!sheetMapping) {\n            return false;\n        }\n        return sheetMapping.has(address);\n    }\n    /** @inheritDoc */\n    getHeight(sheetId) {\n        const sheetMapping = this.mapping.get(sheetId);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheetMapping.getHeight();\n    }\n    /** @inheritDoc */\n    getWidth(sheetId) {\n        const sheetMapping = this.mapping.get(sheetId);\n        if (!sheetMapping) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheetMapping.getWidth();\n    }\n    addRows(sheet, row, numberOfRows) {\n        const sheetMapping = this.mapping.get(sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.addRows(row, numberOfRows);\n    }\n    removeRows(removedRows) {\n        const sheetMapping = this.mapping.get(removedRows.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.removeRows(removedRows);\n    }\n    removeSheet(sheetId) {\n        this.mapping.delete(sheetId);\n    }\n    addColumns(sheet, column, numberOfColumns) {\n        const sheetMapping = this.mapping.get(sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.addColumns(column, numberOfColumns);\n    }\n    removeColumns(removedColumns) {\n        const sheetMapping = this.mapping.get(removedColumns.sheet);\n        if (!sheetMapping) {\n            throw Error('Sheet does not exist');\n        }\n        sheetMapping.removeColumns(removedColumns);\n    }\n    *verticesFromRowsSpan(rowsSpan) {\n        yield* this.mapping.get(rowsSpan.sheet).verticesFromRowsSpan(rowsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    }\n    *verticesFromColumnsSpan(columnsSpan) {\n        yield* this.mapping.get(columnsSpan.sheet).verticesFromColumnsSpan(columnsSpan); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        yield* this.mapping.get(rowsSpan.sheet).entriesFromRowsSpan(rowsSpan);\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        yield* this.mapping.get(columnsSpan.sheet).entriesFromColumnsSpan(columnsSpan);\n    }\n    *entries() {\n        for (const [sheet, mapping] of this.mapping.entries()) {\n            yield* mapping.getEntries(sheet);\n        }\n    }\n    *sheetEntries(sheet) {\n        const sheetMapping = this.mapping.get(sheet);\n        if (sheetMapping) {\n            yield* sheetMapping.getEntries(sheet);\n        }\n        else {\n            throw new Error('Sheet does not exists');\n        }\n    }\n    destroy() {\n        this.mapping.clear();\n    }\n}\n","var $ = require('../internals/export');\nvar fill = require('../internals/array-fill');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$({ target: 'Array', proto: true }, {\n  fill: fill\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('fill');\n","'use strict';\nvar toObject = require('../internals/to-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n/**\n * Error thrown when the sheet of a given ID does not exist.\n */\nexport class NoSheetWithIdError extends Error {\n    constructor(sheetId) {\n        super(`There's no sheet with id = ${sheetId}`);\n    }\n}\n/**\n * Error thrown when the sheet of a given name does not exist.\n */\nexport class NoSheetWithNameError extends Error {\n    constructor(sheetName) {\n        super(`There's no sheet with name '${sheetName}'`);\n    }\n}\n/**\n * Error thrown when the sheet of a given name already exists.\n */\nexport class SheetNameAlreadyTakenError extends Error {\n    constructor(sheetName) {\n        super(`Sheet with name ${sheetName} already exists`);\n    }\n}\n/**\n * Error thrown when loaded sheet size exceeds configured limits.\n */\nexport class SheetSizeLimitExceededError extends Error {\n    constructor() {\n        super('Sheet size limit exceeded');\n    }\n}\n/**\n * Error thrown when the the provided string is not a valid formula, i.e does not start with \"=\"\n */\nexport class NotAFormulaError extends Error {\n    constructor() {\n        super('This is not a formula');\n    }\n}\n/**\n * Error thrown when the given address is invalid.\n */\nexport class InvalidAddressError extends Error {\n    constructor(address) {\n        super(`Address (row = ${address.row}, col = ${address.col}) is invalid`);\n    }\n}\n/**\n * Error thrown when the given arguments are invalid\n */\nexport class InvalidArgumentsError extends Error {\n    constructor(expectedArguments) {\n        super(`Invalid arguments, expected ${expectedArguments}`);\n    }\n}\n/**\n * Error thrown when the given named expression already exists in the workbook and therefore it cannot be added.\n */\nexport class NamedExpressionNameIsAlreadyTakenError extends Error {\n    constructor(expressionName) {\n        super(`Name of Named Expression '${expressionName}' is already present`);\n    }\n}\n/**\n * Error thrown when the name given for the named expression is invalid.\n */\nexport class NamedExpressionNameIsInvalidError extends Error {\n    constructor(expressionName) {\n        super(`Name of Named Expression '${expressionName}' is invalid`);\n    }\n}\n/**\n * Error thrown when the given named expression does not exist.\n */\nexport class NamedExpressionDoesNotExistError extends Error {\n    constructor(expressionName) {\n        super(`Named Expression '${expressionName}' does not exist`);\n    }\n}\n/**\n * Error thrown when there are no operations to be undone by the [[undo]] method.\n */\nexport class NoOperationToUndoError extends Error {\n    constructor() {\n        super('There is no operation to undo');\n    }\n}\n/**\n * Error thrown when there are no operations to redo by the [[redo]] method.\n */\nexport class NoOperationToRedoError extends Error {\n    constructor() {\n        super('There is no operation to redo');\n    }\n}\n/**\n * Error thrown when there is nothing to paste by the [[paste]] method.\n */\nexport class NothingToPasteError extends Error {\n    constructor() {\n        super('There is nothing to paste');\n    }\n}\nfunction replacer(key, val) {\n    switch (typeof val) {\n        case 'function':\n        case 'symbol':\n            return val.toString();\n        case 'bigint':\n            return 'BigInt(' + val.toString() + ')';\n        default: {\n            if (val instanceof RegExp) {\n                return 'RegExp(' + val.toString() + ')';\n            }\n            else {\n                return val;\n            }\n        }\n    }\n}\n/**\n * Error thrown when the given value cannot be parsed.\n *\n * Checks against the validity in:\n *\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[setCellsContents]]\n */\nexport class UnableToParseError extends Error {\n    constructor(value) {\n        super(`Unable to parse value: ${JSON.stringify(value, replacer, 4)}`);\n    }\n}\n/**\n * Error thrown when the expected value type differs from the given value type.\n * It also displays the expected type.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ExpectedValueOfTypeError extends Error {\n    constructor(expectedType, paramName) {\n        super(`Expected value of type: ${expectedType} for config parameter: ${paramName}`);\n    }\n}\n/**\n * Error thrown when supplied config parameter value is an empty string.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ConfigValueEmpty extends Error {\n    constructor(paramName) {\n        super(`Config parameter ${paramName} cannot be empty.`);\n    }\n}\n/**\n * Error thrown when supplied config parameter value is too small.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ConfigValueTooSmallError extends Error {\n    constructor(paramName, minimum) {\n        super(`Config parameter ${paramName} should be at least ${minimum}`);\n    }\n}\n/**\n * Error thrown when supplied config parameter value is too big.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ConfigValueTooBigError extends Error {\n    constructor(paramName, maximum) {\n        super(`Config parameter ${paramName} should be at most ${maximum}`);\n    }\n}\n/**\n * Error thrown when the value was expected to be set for a config parameter.\n * It also displays the expected value.\n * This error might be thrown while setting or updating the [[ConfigParams]].\n * The following methods accept [[ConfigParams]] as a parameter:\n *\n * @see [[buildEmpty]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * @see [[updateConfig]]\n */\nexport class ExpectedOneOfValuesError extends Error {\n    constructor(values, paramName) {\n        super(`Expected one of ${values} for config parameter: ${paramName}`);\n    }\n}\n/**\n * Error thrown when computations become suspended.\n * To perform any other action wait for the batch to complete or resume the evaluation.\n * Relates to:\n *\n * @see [[batch]]\n * @see [[suspendEvaluation]]\n * @see [[resumeEvaluation]]\n */\nexport class EvaluationSuspendedError extends Error {\n    constructor() {\n        super('Computations are suspended');\n    }\n}\n/**\n * Error thrown when translation is missing in translation package.\n *\n * TODO\n */\nexport class MissingTranslationError extends Error {\n    constructor(key) {\n        super(`Translation for ${key} is missing in the translation package you're using.`);\n    }\n}\n/**\n * Error thrown when trying to override protected translation.\n *\n * @see [[registerLanguage]]\n * @see [[registerFunction]]\n * @see [[registerFunctionPlugin]]\n */\nexport class ProtectedFunctionTranslationError extends Error {\n    constructor(key) {\n        super(`Cannot register translation for function with id: ${key}`);\n    }\n}\n/**\n * Error thrown when trying to retrieve not registered language\n *\n * @see [[getLanguage]]\n * @see [[unregisterLanguage]]\n */\nexport class LanguageNotRegisteredError extends Error {\n    constructor() {\n        super('Language not registered.');\n    }\n}\n/**\n * Error thrown when trying to register already registered language\n *\n * @see [[registerLanguage]]\n */\nexport class LanguageAlreadyRegisteredError extends Error {\n    constructor() {\n        super('Language already registered.');\n    }\n}\n/**\n * Error thrown when function plugin is invalid.\n *\n * @see [[registerFunction]]\n * @see [[registerFunctionPlugin]]\n * @see [[buildFromArray]]\n * @see [[buildFromSheets]]\n * */\nexport class FunctionPluginValidationError extends Error {\n    static functionNotDeclaredInPlugin(functionId, pluginName) {\n        return new FunctionPluginValidationError(`Function with id ${functionId} not declared in plugin ${pluginName}`);\n    }\n    static functionMethodNotFound(functionName, pluginName) {\n        return new FunctionPluginValidationError(`Function method ${functionName} not found in plugin ${pluginName}`);\n    }\n}\n/**\n * Error thrown when trying to register, override or remove function with reserved id.\n *\n * @see [[registerFunctionPlugin]]\n * @see [[registerFunction]]\n * @see [[unregisterFunction]]\n * */\nexport class ProtectedFunctionError extends Error {\n    static cannotRegisterFunctionWithId(functionId) {\n        return new ProtectedFunctionError(`Cannot register function with id ${functionId}`);\n    }\n    static cannotUnregisterFunctionWithId(functionId) {\n        return new ProtectedFunctionError(`Cannot unregister function with id ${functionId}`);\n    }\n    static cannotUnregisterProtectedPlugin() {\n        return new ProtectedFunctionError('Cannot unregister protected plugin');\n    }\n}\n/**\n * Error thrown when selected source location has a matrix.\n */\nexport class SourceLocationHasMatrixError extends Error {\n    constructor() {\n        super('Cannot perform this operation, source location has a matrix inside.');\n    }\n}\n/**\n * Error thrown when selected target location has a matrix.\n *\n * @see [[addRows]]\n * @see [[addColumns]]\n * @see [[moveCells]]\n * @see [[moveRows]]\n * @see [[moveColumns]]\n * @see [[paste]]\n */\nexport class TargetLocationHasMatrixError extends Error {\n    constructor() {\n        super('Cannot perform this operation, target location has a matrix inside.');\n    }\n}\n/**\n * Error thrown when trying to use matrix expression as named expression.\n *\n * @see [[addNamedExpression]]\n * @see [[changeNamedExpression]]\n */\nexport class MatrixFormulasNotSupportedError extends Error {\n    constructor() {\n        super('Matrix formulas are not supported in named expressions.');\n    }\n}\n/**\n * Error thrown when named expression contains relative addresses.\n *\n * @see [[addNamedExpression]]\n * @see [[changeNamedExpression]]\n * */\nexport class NoRelativeAddressesAllowedError extends Error {\n    constructor() {\n        super('Relative addresses not allowed in named expressions.');\n    }\n}\n/**\n * Error thrown when alias to a function is already defined.\n *\n * @see [[registerFunctionPlugin]]\n * @see [[registerFunction]]\n */\nexport class AliasAlreadyExisting extends Error {\n    constructor(name, pluginName) {\n        super(`Alias id ${name} in plugin ${pluginName} already defined as a function or alias.`);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AddressDependency, collectDependencies } from '../parser';\nimport { FormulaCellVertex } from './FormulaCellVertex';\nimport { MatrixVertex } from './MatrixVertex';\nimport { RangeVertex } from './RangeVertex';\nexport const collectAddressesDependentToMatrix = (funcitonRegistry, vertex, matrix, lazilyTransformingAstService, dependencyGraph) => {\n    const range = matrix.getRange();\n    if (vertex instanceof RangeVertex) {\n        const intersection = vertex.range.intersectionWith(range);\n        if (intersection !== null) {\n            return Array.from(intersection.addresses(dependencyGraph));\n        }\n        else {\n            return [];\n        }\n    }\n    let formula;\n    let address;\n    if (vertex instanceof FormulaCellVertex) {\n        formula = vertex.getFormula(lazilyTransformingAstService);\n        address = vertex.getAddress(lazilyTransformingAstService);\n    }\n    else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n        formula = vertex.getFormula();\n        address = vertex.getAddress();\n    }\n    else {\n        return [];\n    }\n    return collectDependencies(formula, funcitonRegistry)\n        .filter((d) => d instanceof AddressDependency)\n        .map((d) => d.dependency.toSimpleCellAddress(address))\n        .filter((d) => range.addressInRange(d));\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n/**\n * Represents vertex which keeps formula\n */\nexport class FormulaCellVertex {\n    constructor(\n    /** Formula in AST format */\n    formula, \n    /** Address which this vertex represents */\n    cellAddress, version) {\n        this.formula = formula;\n        this.cellAddress = cellAddress;\n        this.version = version;\n        this.formula = formula;\n        this.cellAddress = cellAddress;\n        this.cachedCellValue = null;\n    }\n    /**\n     * Returns formula stored in this vertex\n     */\n    getFormula(updatingService) {\n        this.ensureRecentData(updatingService);\n        return this.formula;\n    }\n    ensureRecentData(updatingService) {\n        if (this.version != updatingService.version()) {\n            const [newAst, newAddress, newVersion] = updatingService.applyTransformations(this.formula, this.address, this.version);\n            this.formula = newAst;\n            this.cellAddress = newAddress;\n            this.version = newVersion;\n        }\n    }\n    /**\n     * Returns address of the cell associated with vertex\n     */\n    getAddress(updatingService) {\n        this.ensureRecentData(updatingService);\n        return this.cellAddress;\n    }\n    get address() {\n        return this.cellAddress;\n    }\n    /**\n     * Sets computed cell value stored in this vertex\n     */\n    setCellValue(cellValue) {\n        this.cachedCellValue = cellValue;\n    }\n    /**\n     * Returns cell value stored in vertex\n     */\n    getCellValue() {\n        if (this.cachedCellValue !== null) {\n            return this.cachedCellValue;\n        }\n        else {\n            throw Error('Value of the formula cell is not computed.');\n        }\n    }\n    valueOrNull() {\n        return this.cachedCellValue;\n    }\n    isComputed() {\n        return (this.cachedCellValue !== null);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { CellError } from '../Cell';\nimport { ErroredMatrix, Matrix, MatrixSize, NotComputedMatrix } from '../Matrix';\nimport { ColumnsSpan, RowsSpan } from '../Span';\nexport class MatrixVertex {\n    constructor(cellAddress, width, height, formula) {\n        this.cellAddress = cellAddress;\n        this.formula = formula || null;\n        this.matrix = new NotComputedMatrix(new MatrixSize(width, height));\n    }\n    get width() {\n        return this.matrix.width();\n    }\n    get height() {\n        return this.matrix.height();\n    }\n    get sheet() {\n        return this.cellAddress.sheet;\n    }\n    static fromRange(range, formula) {\n        return new MatrixVertex(range.start, range.width(), range.height(), formula);\n    }\n    setCellValue(matrix) {\n        this.matrix = matrix;\n    }\n    setErrorValue(error) {\n        this.matrix = new ErroredMatrix(error, this.matrix.size);\n    }\n    getCellValue() {\n        if (this.matrix instanceof NotComputedMatrix) {\n            throw Error('Matrix not computed yet.');\n        }\n        return this.matrix;\n    }\n    getMatrixCellValue(address) {\n        const col = address.col - this.cellAddress.col;\n        const row = address.row - this.cellAddress.row;\n        return this.matrix.get(col, row);\n    }\n    getMatrixCellRawValue(address) {\n        const val = this.getMatrixCellValue(address);\n        return val instanceof CellError ? undefined : val;\n    }\n    setMatrixCellValue(address, value) {\n        const col = address.col - this.cellAddress.col;\n        const row = address.row - this.cellAddress.row;\n        if (this.matrix instanceof Matrix) {\n            this.matrix.set(col, row, value);\n        }\n    }\n    getRange() {\n        return AbsoluteCellRange.spanFrom(this.cellAddress, this.width, this.height);\n    }\n    getAddress() {\n        return this.cellAddress;\n    }\n    setAddress(address) {\n        this.cellAddress = address;\n    }\n    getFormula() {\n        return this.formula;\n    }\n    setFormula(newFormula) {\n        this.formula = newFormula;\n    }\n    isFormula() {\n        return this.formula !== null;\n    }\n    isNumeric() {\n        return this.formula === null;\n    }\n    spansThroughSheetRows(sheet, startRow, endRow = startRow) {\n        return (this.cellAddress.sheet === sheet) &&\n            (this.cellAddress.row <= endRow) &&\n            (startRow < this.cellAddress.row + this.height);\n    }\n    spansThroughSheetColumn(sheet, col, columnEnd = col) {\n        return (this.cellAddress.sheet === sheet) &&\n            (this.cellAddress.col <= columnEnd) &&\n            (col < this.cellAddress.col + this.width);\n    }\n    addRows(sheet, row, numberOfRows) {\n        if (this.matrix instanceof Matrix) {\n            this.matrix.addRows(row - this.getAddress().row, numberOfRows);\n        }\n    }\n    addColumns(sheet, column, numberOfColumns) {\n        if (this.matrix instanceof Matrix) {\n            this.matrix.addColumns(column - this.getAddress().col, numberOfColumns);\n        }\n    }\n    removeRows(removedRows) {\n        if (this.matrix instanceof Matrix) {\n            const removedRowsFromMatrix = this.rowsFromMatrix().intersect(removedRows);\n            this.matrix.removeRows(removedRowsFromMatrix.rowStart - this.getAddress().row, removedRowsFromMatrix.rowEnd - this.getAddress().row);\n        }\n    }\n    removeColumns(removedColumns) {\n        if (this.matrix instanceof Matrix) {\n            const removedColumnsFromMatrix = this.columnsFromMatrix().intersect(removedColumns);\n            this.matrix.removeColumns(removedColumnsFromMatrix.columnStart - this.getAddress().col, removedColumnsFromMatrix.columnEnd - this.getAddress().col);\n        }\n    }\n    isComputed() {\n        return (!(this.matrix instanceof NotComputedMatrix));\n    }\n    columnsFromMatrix() {\n        return ColumnsSpan.fromNumberOfColumns(this.cellAddress.sheet, this.cellAddress.col, this.width);\n    }\n    rowsFromMatrix() {\n        return RowsSpan.fromNumberOfRows(this.cellAddress.sheet, this.cellAddress.row, this.height);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { CellError, ErrorType, simpleCellAddress } from './Cell';\nimport { ErrorMessage } from './error-message';\nimport { AstNodeType } from './parser';\nexport class MatrixSize {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        if (width <= 0 || height <= 0) {\n            throw Error('Incorrect matrix size');\n        }\n    }\n}\nexport function matrixSizeForTranspose(inputSize) {\n    return new MatrixSize(inputSize.height, inputSize.width);\n}\nexport function matrixSizeForMultiplication(leftMatrixSize, rightMatrixSize) {\n    return new MatrixSize(rightMatrixSize.width, leftMatrixSize.height);\n}\nexport function matrixSizeForPoolFunction(inputMatrix, windowSize, stride) {\n    return new MatrixSize(1 + (inputMatrix.width - windowSize) / stride, 1 + (inputMatrix.height - windowSize) / stride);\n}\nexport function checkMatrixSize(ast, formulaAddress) {\n    if (ast.type === AstNodeType.FUNCTION_CALL) {\n        switch (ast.procedureName) {\n            case 'MMULT': {\n                if (ast.args.length !== 2) {\n                    return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n                }\n                if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n                }\n                const left = checkMatrixSize(ast.args[0], formulaAddress);\n                const right = checkMatrixSize(ast.args[1], formulaAddress);\n                if (left instanceof CellError) {\n                    return left;\n                }\n                else if (right instanceof CellError) {\n                    return right;\n                }\n                else if (left.width !== right.height) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.MatrixDimensions);\n                }\n                else {\n                    return matrixSizeForMultiplication(left, right);\n                }\n            }\n            case 'MEDIANPOOL':\n            case 'MAXPOOL': {\n                if (ast.args.length < 2 || ast.args.length > 3) {\n                    return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n                }\n                if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n                }\n                const matrix = checkMatrixSize(ast.args[0], formulaAddress);\n                const windowArg = ast.args[1];\n                if (matrix instanceof CellError) {\n                    return matrix;\n                }\n                else if (windowArg.type !== AstNodeType.NUMBER) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n                }\n                const window = windowArg.value;\n                let stride = windowArg.value;\n                if (ast.args.length === 3) {\n                    const strideArg = ast.args[2];\n                    if (strideArg.type === AstNodeType.NUMBER) {\n                        stride = strideArg.value;\n                    }\n                    else {\n                        return new CellError(ErrorType.VALUE, ErrorMessage.MatrixParams);\n                    }\n                }\n                if (window > matrix.width || window > matrix.height\n                    || stride > window\n                    || (matrix.width - window) % stride !== 0 || (matrix.height - window) % stride !== 0) {\n                    return new CellError(ErrorType.VALUE); //TODO\n                }\n                return matrixSizeForPoolFunction(matrix, window, stride);\n            }\n            case 'TRANSPOSE': {\n                if (ast.args.length !== 1) {\n                    return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n                }\n                if (ast.args[0].type === AstNodeType.EMPTY) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n                }\n                const size = checkMatrixSize(ast.args[0], formulaAddress);\n                return size instanceof CellError ? size : matrixSizeForTranspose(size);\n            }\n            default: {\n                return new CellError(ErrorType.VALUE, ErrorMessage.MatrixFunction);\n            }\n        }\n    }\n    else if (ast.type === AstNodeType.CELL_RANGE) {\n        const range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n        return { width: range.width(), height: range.height() };\n    }\n    else if (ast.type === AstNodeType.NUMBER || ast.type === AstNodeType.CELL_REFERENCE) {\n        return { width: 1, height: 1 };\n    }\n    else {\n        return new CellError(ErrorType.VALUE); //TODO\n    }\n}\nexport class NotComputedMatrix {\n    constructor(size) {\n        this.size = size;\n    }\n    width() {\n        return this.size.width;\n    }\n    height() {\n        return this.size.height;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    get(col, row) {\n        throw Error('Matrix not computed yet.');\n    }\n}\nexport class Matrix {\n    constructor(matrix) {\n        this.size = new MatrixSize(matrix.length > 0 ? matrix[0].length : 0, matrix.length);\n        this.matrix = matrix;\n    }\n    addRows(aboveRow, numberOfRows) {\n        this.matrix.splice(aboveRow, 0, ...this.zeroArrays(numberOfRows, this.width()));\n        this.size.height += numberOfRows;\n    }\n    addColumns(aboveColumn, numberOfColumns) {\n        for (let i = 0; i < this.height(); i++) {\n            this.matrix[i].splice(aboveColumn, 0, ...new Array(numberOfColumns).fill(0));\n        }\n        this.size.width += numberOfColumns;\n    }\n    removeRows(startRow, endRow) {\n        if (this.outOfBound(0, startRow) || this.outOfBound(0, endRow)) {\n            throw Error('Matrix index out of bound');\n        }\n        const numberOfRows = endRow - startRow + 1;\n        this.matrix.splice(startRow, numberOfRows);\n        this.size.height -= numberOfRows;\n    }\n    removeColumns(leftmostColumn, rightmostColumn) {\n        if (this.outOfBound(leftmostColumn, 0) || this.outOfBound(rightmostColumn, 0)) {\n            throw Error('Matrix index out of bound');\n        }\n        const numberOfColumns = rightmostColumn - leftmostColumn + 1;\n        for (const row of this.matrix) {\n            row.splice(leftmostColumn, numberOfColumns);\n        }\n        this.size.width -= numberOfColumns;\n    }\n    zeroArrays(count, size) {\n        const result = [];\n        for (let i = 0; i < count; ++i) {\n            result.push(new Array(size).fill(0));\n        }\n        return result;\n    }\n    get(col, row) {\n        if (this.outOfBound(col, row)) {\n            throw Error('Matrix index out of bound');\n        }\n        return this.matrix[row][col];\n    }\n    set(col, row, value) {\n        if (this.outOfBound(col, row)) {\n            throw Error('Matrix index out of bound');\n        }\n        this.matrix[row][col] = value;\n    }\n    width() {\n        return this.size.width;\n    }\n    height() {\n        return this.size.height;\n    }\n    raw() {\n        return this.matrix;\n    }\n    *generateValues(leftCorner) {\n        for (let row = 0; row < this.size.height; ++row) {\n            for (let col = 0; col < this.size.width; ++col) {\n                yield [this.matrix[row][col], simpleCellAddress(leftCorner.sheet, leftCorner.col + col, leftCorner.row + row)];\n            }\n        }\n    }\n    outOfBound(col, row) {\n        return col < 0 || row < 0 || row > this.size.height - 1 || col > this.size.width - 1;\n    }\n}\nexport class ErroredMatrix {\n    constructor(error, size) {\n        this.error = error;\n        this.size = size;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    get(col, row) {\n        return this.error;\n    }\n    width() {\n        return this.size.width;\n    }\n    height() {\n        return this.size.height;\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n/**\n * Represents vertex bound to range\n */\nexport class RangeVertex {\n    constructor(range) {\n        this.range = range;\n        this.functionCache = new Map();\n        this.criterionFunctionCache = new Map();\n        this.dependentCacheRanges = new Set();\n        this.bruteForce = false;\n    }\n    get start() {\n        return this.range.start;\n    }\n    get end() {\n        return this.range.end;\n    }\n    get sheet() {\n        return this.range.start.sheet;\n    }\n    /**\n     * Returns cached value stored for given function\n     *\n     * @param functionName - name of the function\n     */\n    getFunctionValue(functionName) {\n        return this.functionCache.get(functionName) || null;\n    }\n    /**\n     * Stores cached value for given function\n     *\n     * @param functionName - name of the function\n     * @param value - cached value\n     */\n    setFunctionValue(functionName, value) {\n        this.functionCache.set(functionName, value);\n    }\n    /**\n     * Returns cached value for given cache key and criterion text representation\n     *\n     * @param cacheKey - key to retrieve from the cache\n     * @param criterionString - criterion text (ex. '<=5')\n     */\n    getCriterionFunctionValue(cacheKey, criterionString) {\n        const values = this.getCriterionFunctionValues(cacheKey);\n        const value = values.get(criterionString);\n        return value ? value[0] : null;\n    }\n    /**\n     * Returns all cached values stored for given criterion function\n     *\n     * @param cacheKey - key to retrieve from the cache\n     */\n    getCriterionFunctionValues(cacheKey) {\n        return this.criterionFunctionCache.get(cacheKey) || new Map();\n    }\n    /**\n     * Stores all values for given criterion function\n     *\n     * @param cacheKey - key to store in the cache\n     * @param values - map with values\n     */\n    setCriterionFunctionValues(cacheKey, values) {\n        this.criterionFunctionCache.set(cacheKey, values);\n    }\n    addDependentCacheRange(dependentRange) {\n        if (dependentRange !== this) {\n            this.dependentCacheRanges.add(dependentRange);\n        }\n    }\n    /**\n     * Clears function cache\n     */\n    clearCache() {\n        this.functionCache.clear();\n        this.criterionFunctionCache.clear();\n        this.dependentCacheRanges.forEach(range => range.criterionFunctionCache.clear());\n        this.dependentCacheRanges.clear();\n    }\n    /**\n     * Returns start of the range (it's top-left corner)\n     */\n    getStart() {\n        return this.start;\n    }\n    /**\n     * Returns end of the range (it's bottom-right corner)\n     */\n    getEnd() {\n        return this.end;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nvar NodeVisitStatus;\n(function (NodeVisitStatus) {\n    NodeVisitStatus[NodeVisitStatus[\"ON_STACK\"] = 0] = \"ON_STACK\";\n    NodeVisitStatus[NodeVisitStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n    NodeVisitStatus[NodeVisitStatus[\"POPPED\"] = 2] = \"POPPED\";\n})(NodeVisitStatus || (NodeVisitStatus = {}));\n/**\n * Provides graph directed structure\n *\n * Invariants:\n * - this.edges(node) exists if and only if node is in the graph\n * - this.specialNodes* are always subset of this.nodes\n * - this.edges(node) is subset of this.nodes (i.e. it does not contain nodes not present in graph) -- this invariant DOES NOT HOLD right now\n */\nexport class Graph {\n    constructor(dependencyQuery) {\n        this.dependencyQuery = dependencyQuery;\n        /** Set with nodes in graph. */\n        this.nodes = new Set();\n        this.specialNodes = new Set();\n        this.specialNodesStructuralChanges = new Set();\n        this.specialNodesRecentlyChanged = new Set();\n        this.infiniteRanges = new Set();\n        /** Nodes adjacency mapping. */\n        this.edges = new Map();\n    }\n    /**\n     * Adds node to a graph\n     *\n     * @param node - a node to be added\n     */\n    addNode(node) {\n        this.nodes.add(node);\n        if (!this.edges.has(node)) {\n            this.edges.set(node, new Set());\n        }\n    }\n    /**\n     * Adds edge between nodes.\n     *\n     * The nodes had to be added to the graph before, or the error will be raised\n     *\n     * @param fromNode - node from which edge is outcoming\n     * @param toNode - node to which edge is incoming\n     */\n    addEdge(fromNode, toNode) {\n        if (!this.nodes.has(fromNode)) {\n            throw new Error(`Unknown node ${fromNode}`);\n        }\n        if (!this.nodes.has(toNode)) {\n            throw new Error(`Unknown node ${toNode}`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.edges.get(fromNode).add(toNode);\n    }\n    removeEdge(fromNode, toNode) {\n        if (this.existsEdge(fromNode, toNode)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.edges.get(fromNode).delete(toNode);\n        }\n        else {\n            throw new Error('Edge does not exist');\n        }\n    }\n    softRemoveEdge(fromNode, toNode) {\n        var _a;\n        (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.delete(toNode);\n    }\n    removeIncomingEdges(toNode) {\n        this.edges.forEach((nodeEdges) => {\n            nodeEdges.delete(toNode);\n        });\n    }\n    /**\n     * Returns nodes adjacent to given node\n     *\n     * @param node - node to which adjacent nodes we want to retrieve\n     */\n    adjacentNodes(node) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.edges.get(node);\n    }\n    adjacentNodesCount(node) {\n        return this.adjacentNodes(node).size;\n    }\n    /**\n     * Checks whether a node is present in graph\n     *\n     * @param node - node to check\n     */\n    hasNode(node) {\n        return this.nodes.has(node);\n    }\n    /**\n     * Returns number of nodes in graph\n     */\n    nodesCount() {\n        return this.nodes.size;\n    }\n    /**\n     * Returns number of edges in graph\n     */\n    edgesCount() {\n        let result = 0;\n        this.edges.forEach((edgesForNode) => (result += edgesForNode.size));\n        return result;\n    }\n    removeNode(node) {\n        for (const adjacentNode of this.adjacentNodes(node).values()) {\n            this.markNodeAsSpecialRecentlyChanged(adjacentNode);\n        }\n        this.edges.delete(node);\n        this.nodes.delete(node);\n        this.specialNodes.delete(node);\n        this.specialNodesRecentlyChanged.delete(node);\n        this.specialNodesStructuralChanges.delete(node);\n        this.infiniteRanges.delete(node);\n        return this.removeDependencies(node);\n    }\n    markNodeAsSpecial(node) {\n        this.specialNodes.add(node);\n    }\n    markNodeAsSpecialRecentlyChanged(node) {\n        if (this.nodes.has(node)) {\n            this.specialNodesRecentlyChanged.add(node);\n        }\n    }\n    markNodeAsChangingWithStructure(node) {\n        this.specialNodesStructuralChanges.add(node);\n    }\n    clearSpecialNodesRecentlyChanged() {\n        this.specialNodesRecentlyChanged.clear();\n    }\n    markNodeAsInfiniteRange(node) {\n        this.infiniteRanges.add(node);\n    }\n    /**\n     * Checks whether exists edge between nodes\n     *\n     * @param fromNode - node from which edge is outcoming\n     * @param toNode - node to which edge is incoming\n     */\n    existsEdge(fromNode, toNode) {\n        var _a, _b;\n        return (_b = (_a = this.edges.get(fromNode)) === null || _a === void 0 ? void 0 : _a.has(toNode)) !== null && _b !== void 0 ? _b : false;\n    }\n    /*\n     * return a topological sort order, but separates vertices that exist in some cycle\n     */\n    topSortWithScc() {\n        return this.getTopSortedWithSccSubgraphFrom(Array.from(this.nodes), (_node) => true, (_node) => { });\n    }\n    /**\n     *\n     * an iterative implementation of Tarjan's algorithm for finding strongly connected compontents\n     * returns vertices in order of topological sort, but vertices that are on cycles are kept separate\n     *\n     * @param modifiedNodes - seed for computation. During engine init run, all of the vertices of grap. In recomputation run, changed vertices.\n     * @param operatingFunction - recomputes value of a node, and returns whether a change occured\n     * @param onCycle - action to be performed when node is on cycle\n     */\n    getTopSortedWithSccSubgraphFrom(modifiedNodes, operatingFunction, onCycle) {\n        const entranceTime = new Map();\n        const low = new Map();\n        const parent = new Map();\n        const inSCC = new Set();\n        // node status life cycle:\n        // undefined -> ON_STACK -> PROCESSED -> POPPED\n        const nodeStatus = new Map();\n        const order = [];\n        let time = 0;\n        const sccNonSingletons = new Set();\n        modifiedNodes.reverse();\n        modifiedNodes.forEach((v) => {\n            if (nodeStatus.get(v) !== undefined) {\n                return;\n            }\n            const DFSstack = [v];\n            const SCCstack = [];\n            nodeStatus.set(v, NodeVisitStatus.ON_STACK);\n            while (DFSstack.length > 0) {\n                const u = DFSstack[DFSstack.length - 1];\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                switch (nodeStatus.get(u)) {\n                    case NodeVisitStatus.ON_STACK: {\n                        entranceTime.set(u, time);\n                        low.set(u, time);\n                        SCCstack.push(u);\n                        time++;\n                        this.adjacentNodes(u).forEach((t) => {\n                            if (entranceTime.get(t) === undefined) {\n                                DFSstack.push(t);\n                                parent.set(t, u);\n                                nodeStatus.set(t, NodeVisitStatus.ON_STACK);\n                            }\n                        });\n                        nodeStatus.set(u, NodeVisitStatus.PROCESSED);\n                        break;\n                    }\n                    case NodeVisitStatus.PROCESSED: { // leaving this DFS subtree\n                        let uLow;\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        uLow = entranceTime.get(u);\n                        this.adjacentNodes(u).forEach((t) => {\n                            if (!inSCC.has(t)) {\n                                if (parent.get(t) === u) {\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                    uLow = Math.min(uLow, low.get(t));\n                                }\n                                else {\n                                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                                    uLow = Math.min(uLow, entranceTime.get(t));\n                                }\n                            }\n                        });\n                        low.set(u, uLow);\n                        if (uLow === entranceTime.get(u)) {\n                            const currentSCC = [];\n                            do {\n                                currentSCC.push(SCCstack[SCCstack.length - 1]);\n                                SCCstack.pop();\n                            } while (currentSCC[currentSCC.length - 1] !== u);\n                            currentSCC.forEach((t) => {\n                                inSCC.add(t);\n                            });\n                            order.push(...currentSCC);\n                            if (currentSCC.length > 1) {\n                                currentSCC.forEach((t) => {\n                                    sccNonSingletons.add(t);\n                                });\n                            }\n                        }\n                        DFSstack.pop();\n                        nodeStatus.set(u, NodeVisitStatus.POPPED);\n                        break;\n                    }\n                    case NodeVisitStatus.POPPED: { // it's a 'shadow' copy, we already processed this vertex and can ignore it\n                        DFSstack.pop();\n                        break;\n                    }\n                }\n            }\n        });\n        const shouldBeUpdatedMapping = new Set(modifiedNodes);\n        const sorted = [];\n        const cycled = [];\n        order.reverse();\n        order.forEach((t) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            if (sccNonSingletons.has(t) || this.adjacentNodes(t).has(t)) {\n                cycled.push(t);\n                onCycle(t);\n                this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\n            }\n            else {\n                sorted.push(t);\n                if (shouldBeUpdatedMapping.has(t) && operatingFunction(t)) {\n                    this.adjacentNodes(t).forEach((s) => shouldBeUpdatedMapping.add(s));\n                }\n            }\n        });\n        return { sorted, cycled };\n    }\n    getDependencies(vertex) {\n        const result = [];\n        this.edges.forEach((adjacentNodes, sourceNode) => {\n            if (adjacentNodes.has(vertex)) {\n                result.push(sourceNode);\n            }\n        });\n        return result;\n    }\n    destroy() {\n        this.edges.clear();\n        this.nodes.clear();\n        this.specialNodes.clear();\n        this.specialNodesStructuralChanges.clear();\n        this.clearSpecialNodesRecentlyChanged();\n    }\n    removeDependencies(node) {\n        const dependencies = this.dependencyQuery(node);\n        if (!dependencies) {\n            return [];\n        }\n        for (const dependency of dependencies) {\n            this.softRemoveEdge(dependency, node);\n        }\n        return dependencies;\n    }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\nvar nativeReverse = [].reverse;\nvar test = [1, 2];\n\n// `Array.prototype.reverse` method\n// https://tc39.es/ecma262/#sec-array.prototype.reverse\n// fix for Safari 12.0 bug\n// https://bugs.webkit.org/show_bug.cgi?id=188794\n$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {\n  reverse: function reverse() {\n    // eslint-disable-next-line no-self-assign -- dirty hack\n    if (isArray(this)) this.length = this.length;\n    return nativeReverse.call(this);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport class MatrixMapping {\n    constructor() {\n        this.matrixMapping = new Map();\n    }\n    getMatrix(range) {\n        return this.matrixMapping.get(range.toString());\n    }\n    setMatrix(range, vertex) {\n        this.matrixMapping.set(range.toString(), vertex);\n    }\n    removeMatrix(range) {\n        this.matrixMapping.delete(range.toString());\n    }\n    isFormulaMatrixInRow(sheet, row) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.spansThroughSheetRows(sheet, row) && mtx.isFormula()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInRows(span) {\n        for (const row of span.rows()) {\n            if (this.isFormulaMatrixInRow(span.sheet, row)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInColumn(sheet, column) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.spansThroughSheetColumn(sheet, column) && mtx.isFormula()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInColumns(span) {\n        for (const col of span.columns()) {\n            if (this.isFormulaMatrixInColumn(span.sheet, col)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixInRange(range) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.isFormula() && mtx.getRange().doesOverlap(range)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isFormulaMatrixAtAddress(address) {\n        for (const mtx of this.matrixMapping.values()) {\n            if (mtx.getRange().addressInRange(address) && mtx.isFormula()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    *numericMatrices() {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (!mtx.isFormula()) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    *numericMatricesInRows(rowsSpan) {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (mtx.spansThroughSheetRows(rowsSpan.sheet, rowsSpan.rowStart, rowsSpan.rowEnd) && !mtx.isFormula()) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    *numericMatricesInColumns(columnsSpan) {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (mtx.spansThroughSheetColumn(columnsSpan.sheet, columnsSpan.columnStart, columnsSpan.columnEnd) && !mtx.isFormula()) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    *numericMatricesInRange(range) {\n        for (const [mtxKey, mtx] of this.matrixMapping.entries()) {\n            if (mtx.getRange().doesOverlap(range)) {\n                yield [mtxKey, mtx];\n            }\n        }\n    }\n    truncateMatricesByRows(rowsSpan) {\n        const verticesToRemove = Array();\n        for (const [key, matrix] of this.numericMatricesInRows(rowsSpan)) {\n            matrix.removeRows(rowsSpan);\n            if (matrix.height === 0) {\n                this.removeMatrix(key);\n                verticesToRemove.push(matrix);\n            }\n        }\n        return verticesToRemove;\n    }\n    truncateMatricesByColumns(columnsSpan) {\n        const verticesToRemove = Array();\n        for (const [key, matrix] of this.numericMatricesInColumns(columnsSpan)) {\n            matrix.removeColumns(columnsSpan);\n            if (matrix.width === 0) {\n                this.removeMatrix(key);\n                verticesToRemove.push(matrix);\n            }\n        }\n        return verticesToRemove;\n    }\n    destroy() {\n        this.matrixMapping.clear();\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../AbsoluteCellRange';\nimport { simpleCellAddress } from '../Cell';\n/**\n * Mapping from address ranges to range vertices\n */\nexport class RangeMapping {\n    constructor() {\n        /** Map in which actual data is stored. */\n        this.rangeMapping = new Map();\n    }\n    getMappingSize(sheet) {\n        var _a, _b;\n        return (_b = (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.size) !== null && _b !== void 0 ? _b : 0;\n    }\n    /**\n     * Saves range vertex\n     *\n     * @param vertex - vertex to save\n     */\n    setRange(vertex) {\n        let sheetMap = this.rangeMapping.get(vertex.getStart().sheet);\n        if (sheetMap === undefined) {\n            sheetMap = new Map();\n            this.rangeMapping.set(vertex.getStart().sheet, sheetMap);\n        }\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n        sheetMap.set(key, vertex);\n    }\n    removeRange(vertex) {\n        const sheet = vertex.getStart().sheet;\n        const sheetMap = this.rangeMapping.get(sheet);\n        if (sheetMap === undefined) {\n            return;\n        }\n        const key = keyFromAddresses(vertex.getStart(), vertex.getEnd());\n        sheetMap.delete(key);\n        if (sheetMap.size === 0) {\n            this.rangeMapping.delete(sheet);\n        }\n    }\n    /**\n     * Returns associated vertex for given range\n     *\n     * @param start - top-left corner of the range\n     * @param end - bottom-right corner of the range\n     */\n    getRange(start, end) {\n        const sheetMap = this.rangeMapping.get(start.sheet);\n        const key = keyFromAddresses(start, end);\n        return sheetMap === null || sheetMap === void 0 ? void 0 : sheetMap.get(key);\n    }\n    fetchRange(start, end) {\n        const maybeRange = this.getRange(start, end);\n        if (!maybeRange) {\n            throw Error('Range does not exist');\n        }\n        return maybeRange;\n    }\n    truncateRanges(span, coordinate) {\n        const verticesToRemove = Array();\n        const updated = Array();\n        const sheet = span.sheet;\n        for (const [key, vertex] of this.entriesFromSheet(span.sheet)) {\n            const range = vertex.range;\n            if (span.start <= coordinate(vertex.range.end)) {\n                range.removeSpan(span);\n                if (range.shouldBeRemoved()) {\n                    this.removeByKey(sheet, key);\n                    verticesToRemove.push(vertex);\n                }\n                else {\n                    updated.push([key, vertex]);\n                }\n            }\n        }\n        const verticesToMerge = [];\n        updated.sort((left, right) => compareBy(left[1], right[1], coordinate));\n        for (const [oldKey, vertex] of updated) {\n            const newKey = keyFromRange(vertex.range);\n            if (newKey === oldKey) {\n                continue;\n            }\n            const existingVertex = this.getByKey(sheet, newKey);\n            this.removeByKey(sheet, oldKey);\n            if (existingVertex !== undefined && vertex != existingVertex) {\n                verticesToMerge.push([existingVertex, vertex]);\n            }\n            else {\n                this.setRange(vertex);\n            }\n        }\n        return {\n            verticesToRemove,\n            verticesToMerge\n        };\n    }\n    moveAllRangesInSheetAfterRowByRows(sheet, row, numberOfRows) {\n        this.updateVerticesFromSheet(sheet, (key, vertex) => {\n            if (row <= vertex.start.row) {\n                vertex.range.shiftByRows(numberOfRows);\n                return vertex;\n            }\n            else if (row > vertex.start.row && row <= vertex.end.row) {\n                vertex.range.expandByRows(numberOfRows);\n                return vertex;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    moveAllRangesInSheetAfterColumnByColumns(sheet, column, numberOfColumns) {\n        this.updateVerticesFromSheet(sheet, (key, vertex) => {\n            if (column <= vertex.start.col) {\n                vertex.range.shiftByColumns(numberOfColumns);\n                return vertex;\n            }\n            else if (column > vertex.start.col && column <= vertex.end.col) {\n                vertex.range.expandByColumns(numberOfColumns);\n                return vertex;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    moveRangesInsideSourceRange(sourceRange, toRight, toBottom, toSheet) {\n        this.updateVerticesFromSheet(sourceRange.sheet, (key, vertex) => {\n            if (sourceRange.containsRange(vertex.range)) {\n                vertex.range.shiftByColumns(toRight);\n                vertex.range.shiftByRows(toBottom);\n                vertex.range.moveToSheet(toSheet);\n                return vertex;\n            }\n            else {\n                return undefined;\n            }\n        });\n    }\n    removeRangesInSheet(sheet) {\n        if (this.rangeMapping.has(sheet)) {\n            const ranges = this.rangeMapping.get(sheet).values();\n            this.rangeMapping.delete(sheet);\n            return ranges;\n        }\n        return [][Symbol.iterator]();\n    }\n    *rangesInSheet(sheet) {\n        const sheetMap = this.rangeMapping.get(sheet);\n        if (!sheetMap) {\n            return;\n        }\n        yield* sheetMap.values();\n    }\n    *rangeVerticesContainedInRange(sourceRange) {\n        for (const rangeVertex of this.rangesInSheet(sourceRange.sheet)) {\n            if (sourceRange.containsRange(rangeVertex.range)) {\n                yield rangeVertex;\n            }\n        }\n    }\n    /**\n     * Finds smaller range does have own vertex.\n     *\n     * @param rangeMapping - range mapping dependency\n     * @param ranges - ranges to find smaller range in\n     */\n    findSmallerRange(range) {\n        if (range.height() > 1 && Number.isFinite(range.height())) {\n            const valuesRangeEndRowLess = simpleCellAddress(range.end.sheet, range.end.col, range.end.row - 1);\n            const rowLessVertex = this.getRange(range.start, valuesRangeEndRowLess);\n            if (rowLessVertex !== undefined) {\n                const restRange = new AbsoluteCellRange(simpleCellAddress(range.start.sheet, range.start.col, range.end.row), range.end);\n                return {\n                    smallerRangeVertex: rowLessVertex,\n                    restRange,\n                };\n            }\n        }\n        return {\n            smallerRangeVertex: null,\n            restRange: range,\n        };\n    }\n    destroy() {\n        this.rangeMapping.clear();\n    }\n    *entriesFromSheet(sheet) {\n        const sheetMap = this.rangeMapping.get(sheet);\n        if (!sheetMap) {\n            return;\n        }\n        yield* sheetMap.entries();\n    }\n    removeByKey(sheet, key) {\n        this.rangeMapping.get(sheet).delete(key);\n    }\n    getByKey(sheet, key) {\n        var _a;\n        return (_a = this.rangeMapping.get(sheet)) === null || _a === void 0 ? void 0 : _a.get(key);\n    }\n    updateVerticesFromSheet(sheet, fn) {\n        const updated = Array();\n        for (const [key, vertex] of this.entriesFromSheet(sheet)) {\n            const result = fn(key, vertex);\n            if (result !== undefined) {\n                this.removeByKey(sheet, key);\n                updated.push(result);\n            }\n        }\n        updated.forEach((range) => {\n            this.setRange(range);\n        });\n    }\n}\nfunction keyFromAddresses(start, end) {\n    return `${start.col},${start.row},${end.col},${end.row}`;\n}\nfunction keyFromRange(range) {\n    return keyFromAddresses(range.start, range.end);\n}\nconst compareBy = (left, right, coordinate) => {\n    const leftStart = coordinate(left.range.start);\n    const rightStart = coordinate(left.range.start);\n    if (leftStart === rightStart) {\n        const leftEnd = coordinate(left.range.end);\n        const rightEnd = coordinate(right.range.end);\n        return leftEnd - rightEnd;\n    }\n    else {\n        return leftStart - rightStart;\n    }\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD;\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? nativeSort.call(toObject(this))\n      : nativeSort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { UIElement } from '../i18n';\nimport { NoSheetWithIdError, NoSheetWithNameError, SheetNameAlreadyTakenError } from '../errors';\nfunction canonicalize(sheetDisplayName) {\n    return sheetDisplayName.toLowerCase();\n}\nclass Sheet {\n    constructor(id, displayName) {\n        this.id = id;\n        this.displayName = displayName;\n    }\n    get canonicalName() {\n        return canonicalize(this.displayName);\n    }\n}\nexport class SheetMapping {\n    constructor(languages) {\n        this.languages = languages;\n        this.mappingFromCanonicalName = new Map();\n        this.mappingFromId = new Map();\n        this.lastSheetId = -1;\n        this.fetch = (sheetName) => {\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\n            if (sheet === undefined) {\n                throw new NoSheetWithNameError(sheetName);\n            }\n            return sheet.id;\n        };\n        this.get = (sheetName) => {\n            const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\n            if (sheet) {\n                return sheet.id;\n            }\n            else {\n                return undefined;\n            }\n        };\n        this.fetchDisplayName = (sheetId) => {\n            return this.fetchSheetById(sheetId).displayName;\n        };\n        this.sheetNamePrefix = languages.getUITranslation(UIElement.NEW_SHEET_PREFIX);\n    }\n    addSheet(newSheetDisplayName = `${this.sheetNamePrefix}${this.lastSheetId + 2}`) {\n        const newSheetCanonicalName = canonicalize(newSheetDisplayName);\n        if (this.mappingFromCanonicalName.has(newSheetCanonicalName)) {\n            throw new SheetNameAlreadyTakenError(newSheetDisplayName);\n        }\n        this.lastSheetId++;\n        const sheet = new Sheet(this.lastSheetId, newSheetDisplayName);\n        this.store(sheet);\n        return sheet.id;\n    }\n    removeSheet(sheetId) {\n        const sheet = this.fetchSheetById(sheetId);\n        if (sheetId == this.lastSheetId) {\n            --this.lastSheetId;\n        }\n        this.mappingFromCanonicalName.delete(sheet.canonicalName);\n        this.mappingFromId.delete(sheet.id);\n    }\n    getDisplayName(sheetId) {\n        const sheet = this.mappingFromId.get(sheetId);\n        if (sheet) {\n            return sheet.displayName;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getDisplayNameByName(sheetName) {\n        const sheet = this.mappingFromCanonicalName.get(canonicalize(sheetName));\n        if (sheet) {\n            return sheet.displayName;\n        }\n        else {\n            return undefined;\n        }\n    }\n    *displayNames() {\n        for (const sheet of this.mappingFromCanonicalName.values()) {\n            yield sheet.displayName;\n        }\n    }\n    numberOfSheets() {\n        return this.mappingFromCanonicalName.size;\n    }\n    hasSheetWithId(sheetId) {\n        return this.mappingFromId.has(sheetId);\n    }\n    hasSheetWithName(sheetName) {\n        return this.mappingFromCanonicalName.has(canonicalize(sheetName));\n    }\n    renameSheet(sheetId, newDisplayName) {\n        const sheet = this.fetchSheetById(sheetId);\n        const currentDisplayName = sheet.displayName;\n        if (currentDisplayName === newDisplayName) {\n            return undefined;\n        }\n        const sheetWithThisCanonicalName = this.mappingFromCanonicalName.get(canonicalize(newDisplayName));\n        if (sheetWithThisCanonicalName && sheetWithThisCanonicalName.id !== sheet.id) {\n            throw new SheetNameAlreadyTakenError(newDisplayName);\n        }\n        const currentCanonicalName = sheet.canonicalName;\n        this.mappingFromCanonicalName.delete(currentCanonicalName);\n        sheet.displayName = newDisplayName;\n        this.store(sheet);\n        return currentDisplayName;\n    }\n    destroy() {\n        this.mappingFromCanonicalName.clear();\n        this.mappingFromId.clear();\n    }\n    sheetNames() {\n        return Array.from(this.mappingFromId.values()).map((s) => s.displayName);\n    }\n    store(sheet) {\n        this.mappingFromId.set(sheet.id, sheet);\n        this.mappingFromCanonicalName.set(sheet.canonicalName, sheet);\n    }\n    fetchSheetById(sheetId) {\n        const sheet = this.mappingFromId.get(sheetId);\n        if (sheet === undefined) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        return sheet;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { buildTranslationPackage, TranslationPackage } from './TranslationPackage';\nexport { TranslationPackage, buildTranslationPackage };\nexport var UIElement;\n(function (UIElement) {\n    UIElement[\"NEW_SHEET_PREFIX\"] = \"NEW_SHEET_PREFIX\";\n})(UIElement || (UIElement = {}));\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ErrorType } from '../Cell';\nimport { MissingTranslationError, ProtectedFunctionTranslationError } from '../errors';\nimport { UIElement } from './index';\nexport class TranslationPackage {\n    constructor(functions, errors, ui) {\n        this.functions = functions;\n        this.errors = errors;\n        this.ui = ui;\n        this._protectedTranslations = {\n            'VERSION': 'VERSION'\n        };\n        this.checkUI();\n        this.checkErrors();\n        this.checkFunctionTranslations(this.functions);\n        Object.assign(this.functions, this._protectedTranslations);\n    }\n    extendFunctions(additionalFunctionTranslations) {\n        this.checkFunctionTranslations(additionalFunctionTranslations);\n        Object.assign(this.functions, additionalFunctionTranslations);\n    }\n    buildFunctionMapping() {\n        return Object.keys(this.functions).reduce((ret, key) => {\n            ret[this.functions[key]] = key;\n            return ret;\n        }, {});\n    }\n    buildErrorMapping() {\n        return Object.keys(this.errors).reduce((ret, key) => {\n            ret[this.errors[key]] = key;\n            return ret;\n        }, {});\n    }\n    isFunctionTranslated(key) {\n        return this.functions[key] !== undefined;\n    }\n    getFunctionTranslations(functionIds) {\n        const translations = [];\n        for (const functionId of functionIds) {\n            if (this.isFunctionTranslated(functionId)) {\n                translations.push(this.functions[functionId]);\n            }\n        }\n        return translations;\n    }\n    getFunctionTranslation(key) {\n        const val = this.functions[key];\n        if (val === undefined) {\n            throw new MissingTranslationError(`functions.${key}`);\n        }\n        else {\n            return val;\n        }\n    }\n    getMaybeFunctionTranslation(key) {\n        return this.functions[key];\n    }\n    getErrorTranslation(key) {\n        if (key === ErrorType.LIC) {\n            return `#${ErrorType.LIC}!`;\n        }\n        const val = this.errors[key];\n        if (val === undefined) {\n            throw new MissingTranslationError(`errors.${key}`);\n        }\n        else {\n            return val;\n        }\n    }\n    getUITranslation(key) {\n        const val = this.ui[key];\n        if (val === undefined) {\n            throw new MissingTranslationError(`ui.${key}`);\n        }\n        else {\n            return val;\n        }\n    }\n    checkUI() {\n        for (const key of Object.values(UIElement)) {\n            if (!(key in this.ui)) {\n                throw new MissingTranslationError(`ui.${key}`);\n            }\n        }\n    }\n    checkErrors() {\n        for (const key of Object.values(ErrorType)) {\n            if (!(key in this.errors) && (key !== ErrorType.LIC)) {\n                throw new MissingTranslationError(`errors.${key}`);\n            }\n        }\n    }\n    checkFunctionTranslations(functions) {\n        const functionNames = new Set(Object.getOwnPropertyNames(functions));\n        for (const protectedTranslation of Object.getOwnPropertyNames(this._protectedTranslations)) {\n            if (functionNames.has(protectedTranslation)) {\n                throw new ProtectedFunctionTranslationError(protectedTranslation);\n            }\n        }\n    }\n}\nexport function buildTranslationPackage(rawTranslationPackage) {\n    return new TranslationPackage(Object.assign({}, rawTranslationPackage.functions), Object.assign({}, rawTranslationPackage.errors), Object.assign({}, rawTranslationPackage.ui));\n}\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { EmptyValue } from '../interpreter/InterpreterValue';\n/**\n * Represents singleton vertex bound to all empty cells\n */\nexport class EmptyCellVertex {\n    constructor(address //might be outdated!\n    ) {\n        this.address = address;\n    }\n    /**\n     * Retrieves cell value bound to that singleton\n     */\n    getCellValue() {\n        return EmptyValue;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n/**\n * Represents vertex which keeps static cell value\n */\nexport class ValueCellVertex {\n    /** Static cell value. */\n    constructor(parsedValue, rawValue) {\n        this.parsedValue = parsedValue;\n        this.rawValue = rawValue;\n    }\n    getValues() {\n        return { parsedValue: this.parsedValue, rawValue: this.rawValue };\n    }\n    setValues(values) {\n        this.parsedValue = values.parsedValue;\n        this.rawValue = values.rawValue;\n    }\n    /**\n     * Returns cell value stored in vertex\n     */\n    getCellValue() {\n        return this.parsedValue;\n    }\n    setCellValue(_cellValue) {\n        throw 'SetCellValue is deprecated for ValueCellVertex';\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError } from '../Cell';\nexport class ParsingErrorVertex {\n    constructor(errors, rawInput) {\n        this.errors = errors;\n        this.rawInput = rawInput;\n    }\n    getCellValue() {\n        return CellError.parsingError();\n    }\n    getFormula() {\n        return this.rawInput;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../../Cell';\n/**\n * Mapping from cell addresses to vertices\n *\n * Uses Map to store addresses, having minimal memory usage for sparse sheets but not necessarily constant set/lookup.\n */\nexport class SparseStrategy {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        /**\n         * Map of Maps in which actual data is stored.\n         *\n         * Key of map in first level is column number.\n         * Key of map in second level is row number.\n         */\n        this.mapping = new Map();\n    }\n    /** @inheritDoc */\n    getCell(address) {\n        const colMapping = this.mapping.get(address.col);\n        if (!colMapping) {\n            return null;\n        }\n        return colMapping.get(address.row) || null;\n    }\n    /** @inheritDoc */\n    setCell(address, newVertex) {\n        this.width = Math.max(this.width, address.col + 1);\n        this.height = Math.max(this.height, address.row + 1);\n        let colMapping = this.mapping.get(address.col);\n        if (!colMapping) {\n            colMapping = new Map();\n            this.mapping.set(address.col, colMapping);\n        }\n        colMapping.set(address.row, newVertex);\n    }\n    /** @inheritDoc */\n    has(address) {\n        const colMapping = this.mapping.get(address.col);\n        if (!colMapping) {\n            return false;\n        }\n        return !!colMapping.get(address.row);\n    }\n    /** @inheritDoc */\n    getHeight() {\n        return this.height;\n    }\n    /** @inheritDoc */\n    getWidth() {\n        return this.width;\n    }\n    removeCell(address) {\n        const colMapping = this.mapping.get(address.col);\n        if (colMapping) {\n            colMapping.delete(address.row);\n        }\n    }\n    addRows(row, numberOfRows) {\n        this.mapping.forEach((rowMapping) => {\n            const tmpMapping = new Map();\n            rowMapping.forEach((vertex, rowNumber) => {\n                if (rowNumber >= row) {\n                    tmpMapping.set(rowNumber + numberOfRows, vertex);\n                    rowMapping.delete(rowNumber);\n                }\n            });\n            tmpMapping.forEach((vertex, rowNumber) => {\n                rowMapping.set(rowNumber, vertex);\n            });\n        });\n        this.height += numberOfRows;\n    }\n    addColumns(column, numberOfColumns) {\n        const tmpMapping = new Map();\n        this.mapping.forEach((rowMapping, colNumber) => {\n            if (colNumber >= column) {\n                tmpMapping.set(colNumber + numberOfColumns, rowMapping);\n                this.mapping.delete(colNumber);\n            }\n        });\n        tmpMapping.forEach((rowMapping, colNumber) => {\n            this.mapping.set(colNumber, rowMapping);\n        });\n        this.width += numberOfColumns;\n    }\n    removeRows(removedRows) {\n        this.mapping.forEach((rowMapping) => {\n            const tmpMapping = new Map();\n            rowMapping.forEach((vertex, rowNumber) => {\n                if (rowNumber >= removedRows.rowStart) {\n                    rowMapping.delete(rowNumber);\n                    if (rowNumber > removedRows.rowEnd) {\n                        tmpMapping.set(rowNumber - removedRows.numberOfRows, vertex);\n                    }\n                }\n            });\n            tmpMapping.forEach((vertex, rowNumber) => {\n                rowMapping.set(rowNumber, vertex);\n            });\n        });\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\n    }\n    removeColumns(removedColumns) {\n        const tmpMapping = new Map();\n        this.mapping.forEach((rowMapping, colNumber) => {\n            if (colNumber >= removedColumns.columnStart) {\n                this.mapping.delete(colNumber);\n                if (colNumber > removedColumns.columnEnd) {\n                    tmpMapping.set(colNumber - removedColumns.numberOfColumns, rowMapping);\n                }\n            }\n        });\n        tmpMapping.forEach((rowMapping, colNumber) => {\n            this.mapping.set(colNumber, rowMapping);\n        });\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\n    }\n    *getEntries(sheet) {\n        for (const [colNumber, col] of this.mapping) {\n            for (const [rowNumber, value] of col) {\n                yield [simpleCellAddress(sheet, colNumber, rowNumber), value];\n            }\n        }\n    }\n    *verticesFromColumn(column) {\n        const colMapping = this.mapping.get(column);\n        if (!colMapping) {\n            return;\n        }\n        for (const [_, vertex] of colMapping) {\n            yield vertex;\n        }\n    }\n    *verticesFromRow(row) {\n        for (const colMapping of this.mapping.values()) {\n            const rowVertex = colMapping.get(row);\n            if (rowVertex) {\n                yield rowVertex;\n            }\n        }\n    }\n    *verticesFromColumnsSpan(columnsSpan) {\n        for (const column of columnsSpan.columns()) {\n            const colMapping = this.mapping.get(column);\n            if (!colMapping) {\n                continue;\n            }\n            for (const [_, vertex] of colMapping) {\n                yield vertex;\n            }\n        }\n    }\n    *verticesFromRowsSpan(rowsSpan) {\n        for (const colMapping of this.mapping.values()) {\n            for (const row of rowsSpan.rows()) {\n                const rowVertex = colMapping.get(row);\n                if (rowVertex) {\n                    yield rowVertex;\n                }\n            }\n        }\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        for (const [col, colMapping] of this.mapping.entries()) {\n            for (const row of rowsSpan.rows()) {\n                const rowVertex = colMapping.get(row);\n                if (rowVertex) {\n                    yield [simpleCellAddress(rowsSpan.sheet, col, row), rowVertex];\n                }\n            }\n        }\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        for (const col of columnsSpan.columns()) {\n            const colMapping = this.mapping.get(col);\n            if (colMapping) {\n                for (const [row, vertex] of colMapping.entries()) {\n                    yield [simpleCellAddress(columnsSpan.sheet, col, row), vertex];\n                }\n            }\n        }\n    }\n    *vertices() {\n        for (const [_, col] of this.mapping) {\n            for (const [_, value] of col) {\n                if (value) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from '../../Cell';\n/**\n * Mapping from cell addresses to vertices\n *\n * Uses Array to store addresses, having minimal memory usage for dense sheets and constant set/lookup.\n */\nexport class DenseStrategy {\n    /**\n     * @param width - width of the stored sheet\n     * @param height - height of the stored sheet\n     */\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.mapping = new Array(height);\n        for (let i = 0; i < height; i++) {\n            this.mapping[i] = new Array(width);\n        }\n    }\n    /** @inheritDoc */\n    getCell(address) {\n        return this.getCellVertex(address.col, address.row);\n    }\n    /** @inheritDoc */\n    setCell(address, newVertex) {\n        this.width = Math.max(this.width, address.col + 1);\n        this.height = Math.max(this.height, address.row + 1);\n        const rowMapping = this.mapping[address.row];\n        if (!rowMapping) {\n            this.mapping[address.row] = new Array(this.width);\n        }\n        this.mapping[address.row][address.col] = newVertex;\n    }\n    /** @inheritDoc */\n    has(address) {\n        const row = this.mapping[address.row];\n        if (!row) {\n            return false;\n        }\n        return !!row[address.col];\n    }\n    /** @inheritDoc */\n    getHeight() {\n        return this.height;\n    }\n    /** @inheritDoc */\n    getWidth() {\n        return this.width;\n    }\n    removeCell(address) {\n        if (this.mapping[address.row] !== undefined) {\n            delete this.mapping[address.row][address.col];\n        }\n    }\n    addRows(row, numberOfRows) {\n        const newRows = [];\n        for (let i = 0; i < numberOfRows; i++) {\n            newRows.push(new Array(this.width));\n        }\n        this.mapping.splice(row, 0, ...newRows);\n        this.height += numberOfRows;\n    }\n    addColumns(column, numberOfColumns) {\n        for (let i = 0; i < this.height; i++) {\n            this.mapping[i].splice(column, 0, ...new Array(numberOfColumns));\n        }\n        this.width += numberOfColumns;\n    }\n    removeRows(removedRows) {\n        this.mapping.splice(removedRows.rowStart, removedRows.numberOfRows);\n        const rightmostRowRemoved = Math.min(this.height - 1, removedRows.rowEnd);\n        const numberOfRowsRemoved = Math.max(0, rightmostRowRemoved - removedRows.rowStart + 1);\n        this.height = Math.max(0, this.height - numberOfRowsRemoved);\n    }\n    removeColumns(removedColumns) {\n        for (let i = 0; i < this.height; i++) {\n            this.mapping[i].splice(removedColumns.columnStart, removedColumns.numberOfColumns);\n        }\n        const rightmostColumnRemoved = Math.min(this.width - 1, removedColumns.columnEnd);\n        const numberOfColumnsRemoved = Math.max(0, rightmostColumnRemoved - removedColumns.columnStart + 1);\n        this.width = Math.max(0, this.width - numberOfColumnsRemoved);\n    }\n    *getEntries(sheet) {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = 0; x < this.width; ++x) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield [simpleCellAddress(sheet, x, y), vertex];\n                }\n            }\n        }\n    }\n    *verticesFromColumn(column) {\n        for (let y = 0; y < this.height; ++y) {\n            const vertex = this.getCellVertex(column, y);\n            if (vertex) {\n                yield vertex;\n            }\n        }\n    }\n    *verticesFromRow(row) {\n        for (let x = 0; x < this.width; ++x) {\n            const vertex = this.getCellVertex(x, row);\n            if (vertex) {\n                yield vertex;\n            }\n        }\n    }\n    *verticesFromColumnsSpan(columnsSpan) {\n        for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\n            for (let y = 0; y < this.height; ++y) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield vertex;\n                }\n            }\n        }\n    }\n    *verticesFromRowsSpan(rowsSpan) {\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield vertex;\n                }\n            }\n        }\n    }\n    *entriesFromRowsSpan(rowsSpan) {\n        for (let x = 0; x < this.width; ++x) {\n            for (let y = rowsSpan.rowStart; y <= rowsSpan.rowEnd; ++y) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield [simpleCellAddress(rowsSpan.sheet, x, y), vertex];\n                }\n            }\n        }\n    }\n    *entriesFromColumnsSpan(columnsSpan) {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = columnsSpan.columnStart; x <= columnsSpan.columnEnd; ++x) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield [simpleCellAddress(columnsSpan.sheet, x, y), vertex];\n                }\n            }\n        }\n    }\n    *vertices() {\n        for (let y = 0; y < this.height; ++y) {\n            for (let x = 0; x < this.width; ++x) {\n                const vertex = this.getCellVertex(x, y);\n                if (vertex) {\n                    yield vertex;\n                }\n            }\n        }\n    }\n    getCellVertex(x, y) {\n        const row = this.mapping[y];\n        if (row) {\n            return this.mapping[y][x] || null;\n        }\n        return null;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport class DetailedCellError {\n    constructor(error, value, address) {\n        var _a;\n        this.value = value;\n        this.address = address;\n        this.type = error.type;\n        this.message = (_a = error.message) !== null && _a !== void 0 ? _a : '';\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { defaultParseToDateTime } from './DateTimeDefault';\nimport { instanceOfSimpleDate } from './DateTimeHelper';\nimport { AlwaysDense } from './DependencyGraph/AddressMapping/ChooseAddressMappingPolicy';\nimport { ConfigValueEmpty, ConfigValueTooBigError, ConfigValueTooSmallError, ExpectedOneOfValuesError, ExpectedValueOfTypeError } from './errors';\nimport { defaultStringifyDateTime, defaultStringifyDuration } from './format/format';\nimport { HyperFormula } from './HyperFormula';\nimport { checkLicenseKeyValidity } from './helpers/licenseKeyValidator';\nconst PossibleGPUModeString = ['gpu', 'cpu', 'dev'];\nconst privatePool = new WeakMap();\nexport class Config {\n    constructor({ accentSensitive, caseSensitive, caseFirst, chooseAddressMappingPolicy, dateFormats, timeFormats, functionArgSeparator, decimalSeparator, thousandSeparator, language, licenseKey, functionPlugins, gpujs, gpuMode, ignorePunctuation, leapYear1900, localeLang, smartRounding, matrixDetection, matrixDetectionThreshold, evaluateNullToZero, nullYear, parseDateTime, stringifyDateTime, stringifyDuration, precisionEpsilon, precisionRounding, useColumnIndex, binarySearchThreshold, nullDate, useStats, undoLimit, useRegularExpressions, useWildcards, matchWholeCell, maxRows, maxColumns, currencySymbol, } = {}) {\n        this.accentSensitive = this.valueFromParam(accentSensitive, 'boolean', 'accentSensitive');\n        this.caseSensitive = this.valueFromParam(caseSensitive, 'boolean', 'caseSensitive');\n        this.caseFirst = this.valueFromParam(caseFirst, ['upper', 'lower', 'false'], 'caseFirst');\n        this.ignorePunctuation = this.valueFromParam(ignorePunctuation, 'boolean', 'ignorePunctuation');\n        this.chooseAddressMappingPolicy = chooseAddressMappingPolicy !== null && chooseAddressMappingPolicy !== void 0 ? chooseAddressMappingPolicy : Config.defaultConfig.chooseAddressMappingPolicy;\n        this.dateFormats = this.valueFromParamCheck(dateFormats, Array.isArray, 'array', 'dateFormats');\n        this.timeFormats = this.valueFromParamCheck(timeFormats, Array.isArray, 'array', 'timeFormats');\n        this.functionArgSeparator = this.valueFromParam(functionArgSeparator, 'string', 'functionArgSeparator');\n        this.decimalSeparator = this.valueFromParam(decimalSeparator, ['.', ','], 'decimalSeparator');\n        this.language = this.valueFromParam(language, 'string', 'language');\n        this.licenseKey = this.valueFromParam(licenseKey, 'string', 'licenseKey');\n        this.thousandSeparator = this.valueFromParam(thousandSeparator, ['', ',', ' ', '.'], 'thousandSeparator');\n        this.localeLang = this.valueFromParam(localeLang, 'string', 'localeLang');\n        this.functionPlugins = functionPlugins !== null && functionPlugins !== void 0 ? functionPlugins : Config.defaultConfig.functionPlugins;\n        this.gpujs = gpujs !== null && gpujs !== void 0 ? gpujs : Config.defaultConfig.gpujs;\n        this.gpuMode = this.valueFromParam(gpuMode, PossibleGPUModeString, 'gpuMode');\n        this.smartRounding = this.valueFromParam(smartRounding, 'boolean', 'smartRounding');\n        this.matrixDetection = this.valueFromParam(matrixDetection, 'boolean', 'matrixDetection');\n        this.matrixDetectionThreshold = this.valueFromParam(matrixDetectionThreshold, 'number', 'matrixDetectionThreshold');\n        this.validateNumberToBeAtLeast(this.matrixDetectionThreshold, 'matrixDetectionThreshold', 1);\n        this.evaluateNullToZero = this.valueFromParam(evaluateNullToZero, 'boolean', 'evaluateNullToZero');\n        this.nullYear = this.valueFromParam(nullYear, 'number', 'nullYear');\n        this.validateNumberToBeAtLeast(this.nullYear, 'nullYear', 0);\n        this.validateNumberToBeAtMost(this.nullYear, 'nullYear', 100);\n        this.precisionRounding = this.valueFromParam(precisionRounding, 'number', 'precisionRounding');\n        this.validateNumberToBeAtLeast(this.precisionRounding, 'precisionRounding', 0);\n        this.precisionEpsilon = this.valueFromParam(precisionEpsilon, 'number', 'precisionEpsilon');\n        this.validateNumberToBeAtLeast(this.precisionEpsilon, 'precisionEpsilon', 0);\n        this.useColumnIndex = this.valueFromParam(useColumnIndex, 'boolean', 'useColumnIndex');\n        this.useStats = this.valueFromParam(useStats, 'boolean', 'useStats');\n        this.binarySearchThreshold = this.valueFromParam(binarySearchThreshold, 'number', 'binarySearchThreshold');\n        this.validateNumberToBeAtLeast(this.binarySearchThreshold, 'binarySearchThreshold', 1);\n        this.parseDateTime = this.valueFromParam(parseDateTime, 'function', 'parseDateTime');\n        this.stringifyDateTime = this.valueFromParam(stringifyDateTime, 'function', 'stringifyDateTime');\n        this.stringifyDuration = this.valueFromParam(stringifyDuration, 'function', 'stringifyDuration');\n        this.translationPackage = HyperFormula.getLanguage(this.language);\n        this.errorMapping = this.translationPackage.buildErrorMapping();\n        this.nullDate = this.valueFromParamCheck(nullDate, instanceOfSimpleDate, 'IDate', 'nullDate');\n        this.leapYear1900 = this.valueFromParam(leapYear1900, 'boolean', 'leapYear1900');\n        this.undoLimit = this.valueFromParam(undoLimit, 'number', 'undoLimit');\n        this.useRegularExpressions = this.valueFromParam(useRegularExpressions, 'boolean', 'useRegularExpressions');\n        this.useWildcards = this.valueFromParam(useWildcards, 'boolean', 'useWildcards');\n        this.matchWholeCell = this.valueFromParam(matchWholeCell, 'boolean', 'matchWholeCell');\n        this.validateNumberToBeAtLeast(this.undoLimit, 'undoLimit', 0);\n        this.maxRows = this.valueFromParam(maxRows, 'number', 'maxRows');\n        this.validateNumberToBeAtLeast(this.maxRows, 'maxRows', 1);\n        this.maxColumns = this.valueFromParam(maxColumns, 'number', 'maxColumns');\n        this.currencySymbol = this.valueFromParamCheck(currencySymbol, Array.isArray, 'array', 'currencySymbol');\n        this.currencySymbol.forEach((val) => {\n            if (typeof val !== 'string') {\n                throw new ExpectedValueOfTypeError('string[]', 'currencySymbol');\n            }\n            if (val === '') {\n                throw new ConfigValueEmpty('currencySymbol');\n            }\n        });\n        this.validateNumberToBeAtLeast(this.maxColumns, 'maxColumns', 1);\n        privatePool.set(this, {\n            licenseKeyValidityState: checkLicenseKeyValidity(this.licenseKey)\n        });\n        this.checkIfParametersNotInConflict({ value: this.decimalSeparator, name: 'decimalSeparator' }, { value: this.functionArgSeparator, name: 'functionArgSeparator' }, { value: this.thousandSeparator, name: 'thousandSeparator' });\n    }\n    /**\n     * Proxied property to its private counterpart. This makes the property\n     * as accessible as the other Config options but without ability to change the value.\n     *\n     * @internal\n     */\n    get licenseKeyValidityState() {\n        return privatePool.get(this).licenseKeyValidityState;\n    }\n    getConfig() {\n        return this;\n    }\n    mergeConfig(init) {\n        const mergedConfig = Object.assign({}, this.getConfig(), init);\n        return new Config(mergedConfig);\n    }\n    warnDeprecatedIfUsed(inputValue, paramName, fromVersion, replacementName) {\n        if (inputValue !== undefined) {\n            console.warn(`${paramName} option is deprecated since ${fromVersion}, please use ${replacementName}`);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    valueFromParam(inputValue, expectedType, paramName) {\n        if (typeof inputValue === 'undefined') {\n            return Config.defaultConfig[paramName];\n        }\n        else if (typeof expectedType === 'string') {\n            if (typeof inputValue === expectedType) {\n                return inputValue;\n            }\n            else {\n                throw new ExpectedValueOfTypeError(expectedType, paramName);\n            }\n        }\n        else {\n            if (expectedType.includes(inputValue)) {\n                return inputValue;\n            }\n            else {\n                throw new ExpectedOneOfValuesError(expectedType.map((val) => '\\'' + val + '\\'').join(' '), paramName);\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    valueFromParamCheck(inputValue, typeCheck, expectedType, paramName) {\n        if (typeCheck(inputValue)) {\n            return inputValue;\n        }\n        else if (typeof inputValue === 'undefined') {\n            return Config.defaultConfig[paramName];\n        }\n        else {\n            throw new ExpectedValueOfTypeError(expectedType, paramName);\n        }\n    }\n    checkIfParametersNotInConflict(...params) {\n        const valuesMap = new Map();\n        params.forEach((param) => {\n            const names = valuesMap.get(param.value) || [];\n            names.push(param.name);\n            valuesMap.set(param.value, names);\n        });\n        const duplicates = [];\n        for (const entry of valuesMap.values()) {\n            if (entry.length > 1) {\n                duplicates.push(entry);\n            }\n        }\n        if (duplicates.length > 0) {\n            duplicates.forEach(entry => entry.sort());\n            const paramNames = duplicates.map(entry => `[${entry}]`).join('; ');\n            throw new Error(`Config initialization failed. Parameters in conflict: ${paramNames}`);\n        }\n    }\n    validateNumberToBeAtLeast(value, paramName, minimum) {\n        if (value < minimum) {\n            throw new ConfigValueTooSmallError(paramName, minimum);\n        }\n    }\n    validateNumberToBeAtMost(value, paramName, maximum) {\n        if (value > maximum) {\n            throw new ConfigValueTooBigError(paramName, maximum);\n        }\n    }\n}\nConfig.defaultConfig = {\n    accentSensitive: false,\n    caseSensitive: false,\n    caseFirst: 'lower',\n    ignorePunctuation: false,\n    chooseAddressMappingPolicy: new AlwaysDense(),\n    dateFormats: ['DD/MM/YYYY', 'DD/MM/YY'],\n    timeFormats: ['hh:mm', 'hh:mm:ss.sss'],\n    functionArgSeparator: ',',\n    decimalSeparator: '.',\n    thousandSeparator: '',\n    language: 'enGB',\n    licenseKey: '',\n    functionPlugins: [],\n    gpujs: undefined,\n    gpuMode: 'gpu',\n    leapYear1900: false,\n    smartRounding: true,\n    localeLang: 'en',\n    matrixDetection: true,\n    matrixDetectionThreshold: 100,\n    evaluateNullToZero: false,\n    nullYear: 30,\n    parseDateTime: defaultParseToDateTime,\n    stringifyDateTime: defaultStringifyDateTime,\n    stringifyDuration: defaultStringifyDuration,\n    precisionEpsilon: 1e-13,\n    precisionRounding: 14,\n    useColumnIndex: false,\n    useStats: false,\n    binarySearchThreshold: 20,\n    nullDate: { year: 1899, month: 12, day: 30 },\n    undoLimit: 20,\n    useRegularExpressions: false,\n    useWildcards: true,\n    matchWholeCell: true,\n    maxRows: 40000,\n    maxColumns: 18278,\n    currencySymbol: ['$'],\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport function defaultParseToDateTime(dateTimeString, dateFormat, timeFormat) {\n    dateTimeString = dateTimeString.replace(/\\s\\s+/g, ' ').trim().toLowerCase();\n    let ampmtoken = dateTimeString.substring(dateTimeString.length - 2);\n    if (ampmtoken === 'am' || ampmtoken === 'pm') {\n        dateTimeString = dateTimeString.substring(0, dateTimeString.length - 2).trim();\n    }\n    else {\n        ampmtoken = dateTimeString.substring(dateTimeString.length - 1);\n        if (ampmtoken === 'a' || ampmtoken === 'p') {\n            dateTimeString = dateTimeString.substring(0, dateTimeString.length - 1).trim();\n        }\n        else {\n            ampmtoken = undefined;\n        }\n    }\n    const dateItems = dateTimeString.split(/[ /.-]/g);\n    if (dateItems.length >= 2 && dateItems[dateItems.length - 2].includes(':')) {\n        dateItems[dateItems.length - 2] = dateItems[dateItems.length - 2] + '.' + dateItems[dateItems.length - 1];\n        dateItems.pop();\n    }\n    const timeItems = dateItems[dateItems.length - 1].split(':');\n    if (ampmtoken !== undefined) {\n        timeItems.push(ampmtoken);\n    }\n    if (dateItems.length === 1) {\n        return defaultParseToTime(timeItems, timeFormat);\n    }\n    if (timeItems.length === 1) {\n        return defaultParseToDate(dateItems, dateFormat);\n    }\n    const parsedDate = defaultParseToDate(dateItems.slice(0, dateItems.length - 1), dateFormat);\n    const parsedTime = defaultParseToTime(timeItems, timeFormat);\n    if (parsedDate === undefined) {\n        return undefined;\n    }\n    else if (parsedTime === undefined) {\n        return undefined;\n    }\n    else {\n        return Object.assign(Object.assign({}, parsedDate), parsedTime);\n    }\n}\nexport const secondsExtendedRegexp = /^ss\\.(s+|0+)$/;\nfunction defaultParseToTime(timeItems, timeFormat) {\n    if (timeFormat === undefined) {\n        return undefined;\n    }\n    timeFormat = timeFormat.toLowerCase();\n    if (timeFormat.endsWith('am/pm')) {\n        timeFormat = timeFormat.substring(0, timeFormat.length - 5).trim();\n    }\n    else if (timeFormat.endsWith('a/p')) {\n        timeFormat = timeFormat.substring(0, timeFormat.length - 3).trim();\n    }\n    const formatItems = timeFormat.split(':');\n    let ampm = undefined;\n    if (timeItems[timeItems.length - 1] === 'am' || timeItems[timeItems.length - 1] === 'a') {\n        ampm = false;\n        timeItems.pop();\n    }\n    else if (timeItems[timeItems.length - 1] === 'pm' || timeItems[timeItems.length - 1] === 'p') {\n        ampm = true;\n        timeItems.pop();\n    }\n    let fractionOfSecondPrecision = 0;\n    if (formatItems.length >= 1 && secondsExtendedRegexp.test(formatItems[formatItems.length - 1])) {\n        fractionOfSecondPrecision = formatItems[formatItems.length - 1].length - 3;\n        formatItems[formatItems.length - 1] = 'ss';\n    }\n    if (timeItems.length !== formatItems.length) {\n        return undefined;\n    }\n    const hourIndex = formatItems.indexOf('hh');\n    const minuteIndex = formatItems.indexOf('mm');\n    const secondIndex = formatItems.indexOf('ss');\n    const hourString = hourIndex !== -1 ? timeItems[hourIndex] : '0';\n    if (!/^\\d+$/.test(hourString)) {\n        return undefined;\n    }\n    let hours = Number(hourString);\n    if (ampm !== undefined) {\n        if (hours < 0 || hours > 12) {\n            return undefined;\n        }\n        hours = hours % 12;\n        if (ampm) {\n            hours = hours + 12;\n        }\n    }\n    const minuteString = minuteIndex !== -1 ? timeItems[minuteIndex] : '0';\n    if (!/^\\d+$/.test(minuteString)) {\n        return undefined;\n    }\n    const minutes = Number(minuteString);\n    const secondString = secondIndex !== -1 ? timeItems[secondIndex] : '0';\n    if (!/^\\d+(\\.\\d+)?$/.test(secondString)) {\n        return undefined;\n    }\n    let seconds = Number(secondString);\n    seconds = Math.round(seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n    return { hours, minutes, seconds };\n}\nfunction defaultParseToDate(dateItems, dateFormat) {\n    if (dateFormat === undefined) {\n        return undefined;\n    }\n    const formatItems = dateFormat.toLowerCase().split(/[ /.-]/g);\n    if (dateItems.length !== formatItems.length) {\n        return undefined;\n    }\n    const monthIndex = formatItems.indexOf('mm');\n    const dayIndex = formatItems.indexOf('dd');\n    const yearIndexLong = formatItems.indexOf('yyyy');\n    const yearIndexShort = formatItems.indexOf('yy');\n    if (!(monthIndex in dateItems) || !(dayIndex in dateItems) ||\n        (!(yearIndexLong in dateItems) && !(yearIndexShort in dateItems))) {\n        return undefined;\n    }\n    if (yearIndexLong in dateItems && yearIndexShort in dateItems) {\n        return undefined;\n    }\n    let year;\n    if (yearIndexLong in dateItems) {\n        const yearString = dateItems[yearIndexLong];\n        if (/^\\d+$/.test(yearString)) {\n            year = Number(yearString);\n            if (year < 1000 || year > 9999) {\n                return undefined;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    else {\n        const yearString = dateItems[yearIndexShort];\n        if (/^\\d+$/.test(yearString)) {\n            year = Number(yearString);\n            if (year < 0 || year > 99) {\n                return undefined;\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    const monthString = dateItems[monthIndex];\n    if (!/^\\d+$/.test(monthString)) {\n        return undefined;\n    }\n    const month = Number(monthString);\n    const dayString = dateItems[dayIndex];\n    if (!/^\\d+$/.test(dayString)) {\n        return undefined;\n    }\n    const day = Number(dayString);\n    return { year, month, day };\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-endswith -- safe\nvar $endsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return $endsWith\n      ? $endsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { DateNumber, DateTimeNumber, TimeNumber } from './interpreter/InterpreterValue';\nconst numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst prefSumDays = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\nexport function instanceOfSimpleDate(obj) {\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n        return 'year' in obj && typeof obj.year === 'number' && 'month' in obj && typeof obj.month === 'number' && 'day' in obj && typeof obj.day === 'number';\n    }\n    else {\n        return false;\n    }\n}\nexport function instanceOfSimpleTime(obj) {\n    if (obj && (typeof obj === 'object' || typeof obj === 'function')) {\n        return 'hours' in obj && typeof obj.hours === 'number' && 'minutes' in obj && typeof obj.minutes === 'number' && 'seconds' in obj && typeof obj.seconds === 'number';\n    }\n    else {\n        return false;\n    }\n}\nexport const maxDate = { year: 9999, month: 12, day: 31 };\nexport class DateTimeHelper {\n    constructor(config) {\n        this.config = config;\n        this.minDateAboluteValue = this.dateToNumberFromZero(config.nullDate);\n        this.maxDateValue = this.dateToNumber(maxDate);\n        this.leapYear1900 = config.leapYear1900;\n        // code below fixes epochYearStart while being leapYear1900 sensitive\n        // if nullDate is earlier than fateful 28 Feb 1900 and 1900 is not supposed to be leap year, then we should\n        // add two days (this is the config default)\n        // otherwise only one day\n        if (!this.leapYear1900 && 0 <= this.dateToNumber({ year: 1900, month: 2, day: 28 })) {\n            this.epochYearZero = this.numberToSimpleDate(2).year;\n        }\n        else {\n            this.epochYearZero = this.numberToSimpleDate(1).year;\n        }\n        this.parseDateTime = config.parseDateTime;\n    }\n    getWithinBounds(dayNumber) {\n        return (dayNumber <= this.maxDateValue) && (dayNumber >= 0) ? dayNumber : undefined;\n    }\n    dateStringToDateNumber(dateTimeString) {\n        const { dateTime, dateFormat = '', timeFormat = '' } = this.parseDateTimeFromConfigFormats(dateTimeString);\n        if (dateTime === undefined) {\n            return undefined;\n        }\n        if (instanceOfSimpleTime(dateTime)) {\n            if (instanceOfSimpleDate(dateTime)) {\n                return new DateTimeNumber(timeToNumber(dateTime) + this.dateToNumber(dateTime), dateFormat + ' ' + timeFormat);\n            }\n            else {\n                return new TimeNumber(timeToNumber(dateTime), timeFormat);\n            }\n        }\n        else {\n            if (instanceOfSimpleDate(dateTime)) {\n                return new DateNumber(this.dateToNumber(dateTime), dateFormat);\n            }\n            else {\n                return 0;\n            }\n        }\n    }\n    parseSingleFormat(dateString, dateFormat, timeFormat) {\n        const dateTime = this.parseDateTime(dateString, dateFormat, timeFormat);\n        if (instanceOfSimpleDate(dateTime)) {\n            if (dateTime.year >= 0 && dateTime.year < 100) {\n                if (dateTime.year < this.getNullYear()) {\n                    dateTime.year += 2000;\n                }\n                else {\n                    dateTime.year += 1900;\n                }\n            }\n            if (!this.isValidDate(dateTime)) {\n                return undefined;\n            }\n        }\n        return dateTime;\n    }\n    parseDateTimeFromConfigFormats(dateTimeString) {\n        return this.parseDateTimeFromFormats(dateTimeString, this.config.dateFormats, this.config.timeFormats);\n    }\n    parseDateTimeFromFormats(dateTimeString, dateFormats, timeFormats) {\n        const dateFormatsIterate = dateFormats.length === 0 ? [undefined] : dateFormats;\n        const timeFormatsIterate = timeFormats.length === 0 ? [undefined] : timeFormats;\n        for (const dateFormat of dateFormatsIterate) {\n            for (const timeFormat of timeFormatsIterate) {\n                const dateTime = this.parseSingleFormat(dateTimeString, dateFormat, timeFormat);\n                if (dateTime !== undefined) {\n                    return { dateTime, timeFormat, dateFormat };\n                }\n            }\n        }\n        return {};\n    }\n    getNullYear() {\n        return this.config.nullYear;\n    }\n    getEpochYearZero() {\n        return this.epochYearZero;\n    }\n    isValidDate(date) {\n        if (isNaN(date.year) || isNaN(date.month) || isNaN(date.day)) {\n            return false;\n        }\n        else if (date.day !== Math.round(date.day) || date.month !== Math.round(date.month) || date.year !== Math.round(date.year)) {\n            return false;\n        }\n        else if (date.year < 1582) { // Gregorian calendar start\n            return false;\n        }\n        else if (date.month < 1 || date.month > 12) {\n            return false;\n        }\n        else if (date.day < 1) {\n            return false;\n        }\n        else if (this.isLeapYear(date.year) && date.month === 2) {\n            return date.day <= 29;\n        }\n        else {\n            return date.day <= numDays[date.month - 1];\n        }\n    }\n    dateToNumber(date) {\n        return this.dateToNumberFromZero(date) - this.minDateAboluteValue;\n    }\n    relativeNumberToAbsoluteNumber(arg) {\n        return arg + this.minDateAboluteValue - (this.leapYear1900 ? 1 : 0);\n    }\n    numberToSimpleDate(arg) {\n        const dateNumber = Math.floor(arg) + this.minDateAboluteValue;\n        let year = Math.floor(dateNumber / 365.2425);\n        if (this.dateToNumberFromZero({ year: year + 1, month: 1, day: 1 }) <= dateNumber) {\n            year++;\n        }\n        else if (this.dateToNumberFromZero({ year: year - 1, month: 1, day: 1 }) > dateNumber) {\n            year--;\n        }\n        const dayOfYear = dateNumber - this.dateToNumberFromZero({ year, month: 1, day: 1 });\n        const month = dayToMonth(dayOfYear - (this.isLeapYear(year) && dayOfYear >= 59 ? 1 : 0));\n        const day = dayOfYear - prefSumDays[month] - (this.isLeapYear(year) && month > 1 ? 1 : 0);\n        return { year, month: month + 1, day: day + 1 };\n    }\n    numberToSimpleDateTime(arg) {\n        return Object.assign(Object.assign({}, this.numberToSimpleDate(Math.floor(arg))), numberToSimpleTime(arg % 1));\n    }\n    leapYearsCount(year) {\n        return Math.floor(year / 4) - Math.floor(year / 100) + Math.floor(year / 400) + (this.config.leapYear1900 && year >= 1900 ? 1 : 0);\n    }\n    countLeapDays(date) {\n        if (date.month > 2 || (date.month === 2 && date.day >= 29)) {\n            return this.leapYearsCount(date.year);\n        }\n        else {\n            return this.leapYearsCount(date.year - 1);\n        }\n    }\n    dateToNumberFromZero(date) {\n        return 365 * date.year + prefSumDays[date.month - 1] + date.day - 1 + (date.month <= 2 ? this.leapYearsCount(date.year - 1) : this.leapYearsCount(date.year));\n    }\n    isLeapYear(year) {\n        if (year % 4) {\n            return false;\n        }\n        else if (year % 100) {\n            return true;\n        }\n        else if (year % 400) {\n            return year === 1900 && this.config.leapYear1900;\n        }\n        else {\n            return true;\n        }\n    }\n    daysInMonth(year, month) {\n        if (this.isLeapYear(year) && month === 2) {\n            return 29;\n        }\n        else {\n            return numDays[month - 1];\n        }\n    }\n    endOfMonth(date) {\n        return { year: date.year, month: date.month, day: this.daysInMonth(date.year, date.month) };\n    }\n    toBasisUS(start, end) {\n        if (start.day === 31) {\n            start.day = 30;\n        }\n        if (start.day === 30 && end.day === 31) {\n            end.day = 30;\n        }\n        if (start.month === 2 && start.day === this.daysInMonth(start.year, start.month)) {\n            start.day = 30;\n            if (end.month === 2 && end.day === this.daysInMonth(end.year, end.month)) {\n                end.day = 30;\n            }\n        }\n        return [start, end];\n    }\n    yearLengthForBasis(start, end) {\n        if (start.year !== end.year) {\n            if ((start.year + 1 !== end.year) || (start.month < end.month) || (start.month === end.month && start.day < end.day)) {\n                // this is true IFF at least one year of gap between dates\n                return (this.leapYearsCount(end.year) - this.leapYearsCount(start.year - 1)) / (end.year - start.year + 1) + 365;\n            }\n            if (this.countLeapDays(end) !== this.countLeapDays({ year: start.year, month: start.month, day: start.day - 1 })) {\n                return 366;\n            }\n            else {\n                return 365;\n            }\n        }\n        if (this.isLeapYear(start.year)) {\n            return 366;\n        }\n        else {\n            return 365;\n        }\n    }\n}\nfunction dayToMonth(dayOfYear) {\n    let month = 0;\n    if (prefSumDays[month + 6] <= dayOfYear) {\n        month += 6;\n    }\n    if (prefSumDays[month + 3] <= dayOfYear) {\n        month += 3;\n    }\n    if (prefSumDays[month + 2] <= dayOfYear) {\n        month += 2;\n    }\n    else if (prefSumDays[month + 1] <= dayOfYear) {\n        month += 1;\n    }\n    return month;\n}\nexport function offsetMonth(date, offset) {\n    const totalM = 12 * date.year + date.month - 1 + offset;\n    return { year: Math.floor(totalM / 12), month: totalM % 12 + 1, day: date.day };\n}\nexport function truncateDayInMonth(date) {\n    return { year: date.year, month: date.month, day: Math.min(date.day, numDays[date.month - 1]) };\n}\nexport function roundToNearestSecond(arg) {\n    return Math.round(arg * 3600 * 24) / (3600 * 24);\n}\nexport function numberToSimpleTime(arg) {\n    arg = Math.round(arg * 24 * 60 * 60 * 100000) / (24 * 60 * 60 * 100000);\n    arg *= 24;\n    const hours = Math.floor(arg);\n    arg -= hours;\n    arg *= 60;\n    const minutes = Math.floor(arg);\n    arg -= minutes;\n    arg *= 60;\n    const seconds = Math.round(arg * 100000) / 100000;\n    return { hours, minutes, seconds };\n}\nexport function timeToNumber(time) {\n    return ((time.seconds / 60 + time.minutes) / 60 + time.hours) / 24;\n}\nexport function toBasisEU(date) {\n    return { year: date.year, month: date.month, day: Math.min(30, date.day) };\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { DenseStrategy } from './DenseStrategy';\nimport { SparseStrategy } from './SparseStrategy';\nexport class DenseSparseChooseBasedOnThreshold {\n    constructor(threshold) {\n        this.threshold = threshold;\n    }\n    call(fill) {\n        if (fill > this.threshold) {\n            return DenseStrategy;\n        }\n        else {\n            return SparseStrategy;\n        }\n    }\n}\nexport class AlwaysSparse {\n    call() {\n        return SparseStrategy;\n    }\n}\nexport class AlwaysDense {\n    call() {\n        return DenseStrategy;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { secondsExtendedRegexp } from '../DateTimeDefault';\nimport { numberToSimpleTime } from '../DateTimeHelper';\nimport { parseForDateTimeFormat, parseForNumberFormat, TokenType } from './parser';\nexport function format(value, formatArg, config, dateHelper) {\n    const tryDateTime = config.stringifyDateTime(dateHelper.numberToSimpleDateTime(value), formatArg); // default points to defaultStringifyDateTime()\n    if (tryDateTime !== undefined) {\n        return tryDateTime;\n    }\n    const tryDuration = config.stringifyDuration(numberToSimpleTime(value), formatArg);\n    if (tryDuration !== undefined) {\n        return tryDuration;\n    }\n    const expression = parseForNumberFormat(formatArg);\n    if (expression !== undefined) {\n        return numberFormat(expression.tokens, value);\n    }\n    return formatArg;\n}\nexport function padLeft(number, size) {\n    let result = number + '';\n    while (result.length < size) {\n        result = '0' + result;\n    }\n    return result;\n}\nexport function padRight(number, size) {\n    let result = number + '';\n    while (result.length < size) {\n        result = result + '0';\n    }\n    return result;\n}\nfunction countChars(text, char) {\n    return text.split(char).length - 1;\n}\nfunction numberFormat(tokens, value) {\n    let result = '';\n    for (let i = 0; i < tokens.length; ++i) {\n        const token = tokens[i];\n        if (token.type === TokenType.FREE_TEXT) {\n            result += token.value;\n            continue;\n        }\n        const tokenParts = token.value.split('.');\n        const integerFormat = tokenParts[0];\n        const decimalFormat = tokenParts[1] || '';\n        const separator = tokenParts[1] ? '.' : '';\n        /* get fixed-point number without trailing zeros */\n        const valueParts = Number(value.toFixed(decimalFormat.length)).toString().split('.');\n        let integerPart = valueParts[0] || '';\n        let decimalPart = valueParts[1] || '';\n        if (integerFormat.length > integerPart.length) {\n            const padSizeInteger = countChars(integerFormat.substr(0, integerFormat.length - integerPart.length), '0');\n            integerPart = padLeft(integerPart, padSizeInteger + integerPart.length);\n        }\n        const padSizeDecimal = countChars(decimalFormat.substr(decimalPart.length, decimalFormat.length - decimalPart.length), '0');\n        decimalPart = padRight(decimalPart, padSizeDecimal + decimalPart.length);\n        result += integerPart + separator + decimalPart;\n    }\n    return result;\n}\nexport function defaultStringifyDuration(time, formatArg) {\n    const expression = parseForDateTimeFormat(formatArg);\n    if (expression === undefined) {\n        return undefined;\n    }\n    const tokens = expression.tokens;\n    let result = '';\n    for (const token of tokens) {\n        if (token.type === TokenType.FREE_TEXT) {\n            result += token.value;\n            continue;\n        }\n        if (secondsExtendedRegexp.test(token.value)) {\n            const fractionOfSecondPrecision = token.value.length - 3;\n            result += (time.seconds < 10 ? '0' : '') + Math.round(time.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n            continue;\n        }\n        switch (token.value.toLowerCase()) {\n            case 'h':\n            case 'hh': {\n                result += padLeft(time.hours, token.value.length);\n                time.hours = 0;\n                break;\n            }\n            case '[hh]': {\n                result += padLeft(time.hours, token.value.length - 2);\n                time.hours = 0;\n                break;\n            }\n            case 'm':\n            case 'mm': {\n                result += padLeft(time.minutes, token.value.length);\n                time.minutes = 0;\n                break;\n            }\n            case '[mm]': {\n                result += padLeft(time.minutes + 60 * time.hours, token.value.length - 2);\n                time.minutes = 0;\n                time.hours = 0;\n                break;\n            }\n            /* seconds */\n            case 's':\n            case 'ss': {\n                result += padLeft(time.seconds, token.value.length);\n                break;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n    return result;\n}\nexport function defaultStringifyDateTime(dateTime, formatArg) {\n    const expression = parseForDateTimeFormat(formatArg);\n    if (expression === undefined) {\n        return undefined;\n    }\n    const tokens = expression.tokens;\n    let result = '';\n    let minutes = false;\n    const ampm = tokens.some((token) => token.type === TokenType.FORMAT &&\n        (token.value === 'a/p' || token.value === 'A/P' || token.value === 'am/pm' || token.value === 'AM/PM'));\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i];\n        if (token.type === TokenType.FREE_TEXT) {\n            result += token.value;\n            continue;\n        }\n        if (secondsExtendedRegexp.test(token.value)) {\n            const fractionOfSecondPrecision = token.value.length - 3;\n            result += (dateTime.seconds < 10 ? '0' : '') + Math.round(dateTime.seconds * Math.pow(10, fractionOfSecondPrecision)) / Math.pow(10, fractionOfSecondPrecision);\n            continue;\n        }\n        switch (token.value.toLowerCase()) {\n            /* hours*/\n            case 'h':\n            case 'hh': {\n                minutes = true;\n                result += padLeft(ampm ? (dateTime.hours + 11) % 12 + 1 : dateTime.hours, token.value.length);\n                break;\n            }\n            /* days */\n            case 'd':\n            case 'dd': {\n                result += padLeft(dateTime.day, token.value.length);\n                break;\n            }\n            /* seconds */\n            case 's':\n            case 'ss': {\n                result += padLeft(Math.round(dateTime.seconds), token.value.length);\n                break;\n            }\n            /* minutes / months */\n            case 'm':\n            case 'mm': {\n                if (i + 1 < tokens.length && tokens[i + 1].value.startsWith(':')) {\n                    minutes = true;\n                }\n                if (minutes) {\n                    result += padLeft(dateTime.minutes, token.value.length);\n                }\n                else {\n                    result += padLeft(dateTime.month, token.value.length);\n                }\n                minutes = true;\n                break;\n            }\n            /* years */\n            case 'yy': {\n                result += padLeft(dateTime.year % 100, token.value.length);\n                break;\n            }\n            case 'yyyy': {\n                result += dateTime.year;\n                break;\n            }\n            /* AM / PM */\n            case 'am/pm':\n            case 'a/p': {\n                const [am, pm] = token.value.split('/');\n                result += dateTime.hours < 12 ? am : pm;\n                break;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n    return result;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar multiply = function (data, n, c) {\n  var index = -1;\n  var c2 = c;\n  while (++index < 6) {\n    c2 += n * data[index];\n    data[index] = c2 % 1e7;\n    c2 = floor(c2 / 1e7);\n  }\n};\n\nvar divide = function (data, n) {\n  var index = 6;\n  var c = 0;\n  while (--index >= 0) {\n    c += data[index];\n    data[index] = floor(c / n);\n    c = (c % n) * 1e7;\n  }\n};\n\nvar dataToString = function (data) {\n  var index = 6;\n  var s = '';\n  while (--index >= 0) {\n    if (s !== '' || index === 0 || data[index] !== 0) {\n      var t = String(data[index]);\n      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n    }\n  } return s;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.es/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(data, 0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(data, 1e7, 0);\n          j -= 7;\n        }\n        multiply(data, pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(data, 1 << 23);\n          j -= 23;\n        }\n        divide(data, 1 << j);\n        multiply(data, 1, 1);\n        divide(data, 2);\n        result = dataToString(data);\n      } else {\n        multiply(data, 0, z);\n        multiply(data, 1 << -e, 0);\n        result = dataToString(data) + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.es/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nmodule.exports = function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nconst dateFormatRegex = /(\\\\.|dd|DD|d|D|mm|MM|m|M|YYYY|YY|yyyy|yy|HH|hh|H|h|ss(\\.(0+|s+))?|s|AM\\/PM|am\\/pm|A\\/P|a\\/p|\\[mm]|\\[MM]|\\[hh]|\\[HH])/g;\nconst numberFormatRegex = /(\\\\.|[#0]+(\\.[#0]*)?)/g;\nexport var TokenType;\n(function (TokenType) {\n    TokenType[\"FORMAT\"] = \"FORMAT\";\n    TokenType[\"FREE_TEXT\"] = \"FREE_TEXT\";\n})(TokenType || (TokenType = {}));\nexport function formatToken(type, value) {\n    return {\n        type,\n        value,\n    };\n}\nexport var FormatExpressionType;\n(function (FormatExpressionType) {\n    FormatExpressionType[\"DATE\"] = \"DATE\";\n    FormatExpressionType[\"NUMBER\"] = \"NUMBER\";\n    FormatExpressionType[\"STRING\"] = \"STRING\";\n})(FormatExpressionType || (FormatExpressionType = {}));\nfunction matchDateFormat(str) {\n    dateFormatRegex.lastIndex = 0;\n    const tokens = [];\n    let m;\n    do {\n        m = dateFormatRegex.exec(str);\n        if (m !== null) {\n            tokens.push(m);\n        }\n    } while (m);\n    return tokens;\n}\nfunction matchNumberFormat(str) {\n    numberFormatRegex.lastIndex = 0;\n    const numberFormatToken = numberFormatRegex.exec(str);\n    if (numberFormatToken !== null) {\n        return [numberFormatToken];\n    }\n    else {\n        return [];\n    }\n}\nfunction createTokens(regexTokens, str) {\n    const tokens = [];\n    let start = 0;\n    for (let i = 0; i < regexTokens.length; ++i) {\n        const token = regexTokens[i];\n        if (token.index !== start) {\n            const beforeToken = str.substr(start, token.index - start);\n            tokens.push(formatToken(TokenType.FREE_TEXT, beforeToken));\n        }\n        if (token[0].startsWith('\\\\')) {\n            tokens.push(formatToken(TokenType.FREE_TEXT, token[0]));\n        }\n        else {\n            tokens.push(formatToken(TokenType.FORMAT, token[0]));\n        }\n        start = token.index + token[0].length;\n    }\n    const lastToken = regexTokens[regexTokens.length - 1];\n    if (lastToken.index + lastToken[0].length < str.length) {\n        const afterLastToken = str.substr(lastToken.index + lastToken[0].length, str.length);\n        tokens.push(formatToken(TokenType.FREE_TEXT, afterLastToken));\n    }\n    return tokens;\n}\nexport function parseForDateTimeFormat(str) {\n    const dateFormatTokens = matchDateFormat(str);\n    if (dateFormatTokens.every((elem) => isEscapeToken(elem))) {\n        return undefined;\n    }\n    else {\n        return {\n            type: FormatExpressionType.DATE,\n            tokens: createTokens(dateFormatTokens, str),\n        };\n    }\n}\nexport function parseForNumberFormat(str) {\n    const numberFormatTokens = matchNumberFormat(str);\n    if (numberFormatTokens.every((elem) => isEscapeToken(elem))) {\n        return undefined;\n    }\n    else {\n        return {\n            type: FormatExpressionType.NUMBER,\n            tokens: createTokens(numberFormatTokens, str),\n        };\n    }\n}\nexport function parse(str) {\n    var _a, _b;\n    return (_b = (_a = parseForDateTimeFormat(str)) !== null && _a !== void 0 ? _a : parseForNumberFormat(str)) !== null && _b !== void 0 ? _b : {\n        type: FormatExpressionType.STRING,\n        tokens: [{\n                type: TokenType.FREE_TEXT,\n                value: str,\n            }],\n    };\n}\nexport function isEscapeToken(token) {\n    return token[0].startsWith('\\\\');\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { CellType, getCellType, getCellValueType, getCellValueDetailedType, getCellValueFormat } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { numberToSimpleTime } from './DateTimeHelper';\nimport { buildTranslationPackage } from './i18n';\nimport { normalizeAddedIndexes, normalizeRemovedIndexes } from './Operations';\nimport { EvaluationSuspendedError, LanguageAlreadyRegisteredError, LanguageNotRegisteredError, NotAFormulaError } from './errors';\nimport { AstNodeType, simpleCellAddressFromString, simpleCellAddressToString, } from './parser';\nimport { Emitter, Events } from './Emitter';\nimport { BuildEngineFactory } from './BuildEngineFactory';\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\n/**\n * This is a class for creating HyperFormula instance, all the following public methods\n * ale related to this class.\n *\n * The instance can be created only by calling one of the static methods\n * `buildFromArray`, `buildFromSheets` or `buildEmpty` and should be disposed of with the\n * `destroy` method when it's no longer needed to free the resources.\n *\n * The instance can be seen as a workbook where worksheets can be created and\n * manipulated. They are organized within a widely know structure of columns and rows\n * which can be manipulated as well. The smallest possible data unit are the cells, which\n * may contain simple values or formulas to be calculated.\n *\n * All CRUD methods are called directly on HyperFormula instance and will trigger\n * corresponding lifecycle events. The events are marked accordingly, as well as thrown\n * errors so they can be correctly handled.\n */\nexport class HyperFormula {\n    constructor(_config, _stats, _dependencyGraph, _columnSearch, _parser, _unparser, _cellContentParser, _evaluator, _lazilyTransformingAstService, _crudOperations, _exporter, _namedExpressions, _serialization, _functionRegistry) {\n        this._config = _config;\n        this._stats = _stats;\n        this._dependencyGraph = _dependencyGraph;\n        this._columnSearch = _columnSearch;\n        this._parser = _parser;\n        this._unparser = _unparser;\n        this._cellContentParser = _cellContentParser;\n        this._evaluator = _evaluator;\n        this._lazilyTransformingAstService = _lazilyTransformingAstService;\n        this._crudOperations = _crudOperations;\n        this._exporter = _exporter;\n        this._namedExpressions = _namedExpressions;\n        this._serialization = _serialization;\n        this._functionRegistry = _functionRegistry;\n        this._emitter = new Emitter();\n        this._evaluationSuspended = false;\n    }\n    /**\n     * Calls the `graph` method on the dependency graph.\n     * Allows to execute `graph` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get graph() {\n        return this.dependencyGraph.graph;\n    }\n    /**\n     * Calls the `rangeMapping` method on the dependency graph.\n     * Allows to execute `rangeMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get rangeMapping() {\n        return this.dependencyGraph.rangeMapping;\n    }\n    /**\n     * Calls the `matrixMapping` method on the dependency graph.\n     * Allows to execute `matrixMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get matrixMapping() {\n        return this.dependencyGraph.matrixMapping;\n    }\n    /**\n     * Calls the `sheetMapping` method on the dependency graph.\n     * Allows to execute `sheetMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get sheetMapping() {\n        return this.dependencyGraph.sheetMapping;\n    }\n    /**\n     * Calls the `addressMapping` method on the dependency graph.\n     * Allows to execute `addressMapping` directly without a need to refer to `dependencyGraph`.\n     *\n     * @internal\n     */\n    get addressMapping() {\n        return this.dependencyGraph.addressMapping;\n    }\n    /** @internal */\n    get dependencyGraph() {\n        return this._dependencyGraph;\n    }\n    /** @internal */\n    get evaluator() {\n        return this._evaluator;\n    }\n    /** @internal */\n    get columnSearch() {\n        return this._columnSearch;\n    }\n    /** @internal */\n    get lazilyTransformingAstService() {\n        return this._lazilyTransformingAstService;\n    }\n    /**\n     * Returns state of the validity of the license key.\n     *\n     * @internal\n     */\n    get licenseKeyValidityState() {\n        return this._config.licenseKeyValidityState;\n    }\n    static buildFromEngineState(engine) {\n        return new HyperFormula(engine.config, engine.stats, engine.dependencyGraph, engine.columnSearch, engine.parser, engine.unparser, engine.cellContentParser, engine.evaluator, engine.lazilyTransformingAstService, engine.crudOperations, engine.exporter, engine.namedExpressions, engine.serialization, engine.functionRegistry);\n    }\n    /**\n     * Builds the engine for a sheet from a two-dimensional array representation.\n     * The engine is created with a single sheet.\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\n     * If not specified, the engine will be built with the default configuration.\n     *\n     * @param {Sheet} sheet - two-dimensional array representation of sheet\n     * @param {Partial<ConfigParams>} configInput - engine configuration\n     *\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\n     * @throws [[InvalidArgumentsError]] when sheet is not an array of arrays\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\n     *\n     * @example\n     * ```js\n     * // data represented as an array\n     * const sheetData = [\n     *  ['0', '=SUM(1,2,3)', '52'],\n     *  ['=SUM(A1:C1)', '', '=A1'],\n     *  ['2', '=SUM(A1:C1)', '91'],\n     * ];\n     *\n     * // method with optional config parameter maxColumns\n     * const hfInstance = HyperFormula.buildFromArray(sheetData, { maxColumns: 1000 });\n     * ```\n     *\n     * @category Factories\n     */\n    static buildFromArray(sheet, configInput) {\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheet(sheet, configInput));\n    }\n    /**\n     * Builds the engine from an object containing multiple sheets with names.\n     * The engine is created with one or more sheets.\n     * Can be configured with the optional second parameter that represents a [[ConfigParams]].\n     * If not specified the engine will be built with the default configuration.\n     *\n     * @param {Sheet} sheets - object with sheets definition\n     * @param {Partial<ConfigParams>} configInput - engine configuration\n     *\n     * @throws [[SheetSizeLimitExceededError]] when sheet size exceeds the limits\n     * @throws [[InvalidArgumentsError]] when any sheet is not an array of arrays\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\n     *\n     * @example\n     * ```js\n     * // data represented as an object with sheets: Sheet1 and Sheet2\n     * const sheetData = {\n     *  'Sheet1': [\n     *    ['1', '', '=Sheet2!$A1'],\n     *    ['', '2', '=SUM(1,2,3)'],\n     *    ['=Sheet2!$A2', '2', ''],\n     *   ],\n     *  'Sheet2': [\n     *    ['', '4', '=Sheet1!$B1'],\n     *    ['', '8', '=SUM(9,3,3)'],\n     *    ['=Sheet1!$B1', '2', ''],\n     *   ],\n     * };\n     *\n     * // method with optional config parameter useColumnIndex\n     * const hfInstance = HyperFormula.buildFromSheets(sheetData, { useColumnIndex: true });\n     * ```\n     *\n     * @category Factories\n     */\n    static buildFromSheets(sheets, configInput) {\n        return this.buildFromEngineState(BuildEngineFactory.buildFromSheets(sheets, configInput));\n    }\n    /**\n     * Builds an empty engine instance.\n     * Can be configured with the optional parameter that represents a [[ConfigParams]].\n     * If not specified the engine will be built with the default configuration.\n     *\n     * @param {Partial<ConfigParams>} configInput - engine configuration\n     *\n     * @example\n     * ```js\n     * // build with no initial data and with optional config parameter maxColumns\n     * const hfInstance = HyperFormula.buildEmpty({ maxColumns: 1000 });\n     * ```\n     *\n     * @category Factories\n     */\n    static buildEmpty(configInput) {\n        return this.buildFromEngineState(BuildEngineFactory.buildEmpty(configInput));\n    }\n    /**\n     * Returns registered language from its code string.\n     *\n     * @param {string} languageCode - code string of the translation package\n     *\n     * @throws [[LanguageNotRegisteredError]] when trying to retrieve not registered language\n     *\n     * @example\n     * ```js\n     * // return registered language\n     * const language = HyperFormula.getLanguage('enGB');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getLanguage(languageCode) {\n        const val = this.registeredLanguages.get(languageCode);\n        if (val === undefined) {\n            throw new LanguageNotRegisteredError();\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Registers language from under given code string.\n     *\n     * @param {string} languageCode - code string of the translation package\n     * @param {RawTranslationPackage} languagePackage - translation package to be registered\n     *\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\n     * @throws [[LanguageAlreadyRegisteredError]] when given language is already registered\n     *\n     * @example\n     * ```js\n     * // return registered language\n     * HyperFormula.registerLanguage('plPL', plPL);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static registerLanguage(languageCode, languagePackage) {\n        if (this.registeredLanguages.has(languageCode)) {\n            throw new LanguageAlreadyRegisteredError();\n        }\n        else {\n            this.registeredLanguages.set(languageCode, buildTranslationPackage(languagePackage));\n        }\n    }\n    /**\n     * Unregisters language that is registered under given code string.\n     *\n     * @param {string} languageCode - code string of the translation package\n     *\n     * @throws [[LanguageNotRegisteredError]] when given language is not registered\n     *\n     * @example\n     * ```js\n     * // register the language for the instance\n     * HyperFormula.registerLanguage('plPL', plPL);\n     *\n     * // unregister plPL\n     * HyperFormula.unregisterLanguage('plPL');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterLanguage(languageCode) {\n        if (this.registeredLanguages.has(languageCode)) {\n            this.registeredLanguages.delete(languageCode);\n        }\n        else {\n            throw new LanguageNotRegisteredError();\n        }\n    }\n    /**\n     * Returns all registered languages codes.\n     *\n     * @example\n     * ```js\n     * // should return all registered language codes: ['enGB', 'plPL']\n     * const registeredLangugaes = HyperFormula.getRegisteredLanguagesCodes();\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getRegisteredLanguagesCodes() {\n        return Array.from(this.registeredLanguages.keys());\n    }\n    /**\n     * Registers all functions in a given plugin with optional translations\n     *\n     * @param {FunctionPluginDefinition} plugin - plugin class\n     * @param {FunctionTranslationsPackage} translations - optional package of function names translations\n     *\n     * @throws [[FunctionPluginValidationError]] when plugin class definition is not consistent with metadata\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register the plugin\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static registerFunctionPlugin(plugin, translations) {\n        FunctionRegistry.registerFunctionPlugin(plugin, translations);\n    }\n    /**\n     * Unregisters all functions defined in given plugin\n     *\n     * @param {FunctionPluginDefinition} plugin - plugin class\n     *\n     * @example\n     * ```js\n     * // get the class of a plugin\n     * const registeredPluginClass = HyperFormula.getFunctionPlugin('EXAMPLE');\n     *\n     * // unregister all functions defined in a plugin of ID 'EXAMPLE'\n     * HyperFormula.unregisterFunctionPlugin(registeredPluginClass);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterFunctionPlugin(plugin) {\n        FunctionRegistry.unregisterFunctionPlugin(plugin);\n    }\n    /**\n     * Registers a function with a given id if such exists in a plugin.\n     *\n     * @param {string} functionId - function id, e.g. 'SUMIF'\n     * @param {FunctionPluginDefinition} plugin - plugin class\n     * @param translations\n     *\n     * @throws [[FunctionPluginValidationError]] when function with a given id does not exists in plugin or plugin class definition is not consistent with metadata\n     * @throws [[ProtectedFunctionTranslationError]] when trying to register translation for protected function\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register a function\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\n     * ```\n     *\n     * @category Static Methods\n     */\n    static registerFunction(functionId, plugin, translations) {\n        FunctionRegistry.registerFunction(functionId, plugin, translations);\n    }\n    /**\n     * Unregisters a function with a given id\n     *\n     * @param {string} functionId - function id, e.g. 'SUMIF'\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register a function\n     * HyperFormula.registerFunction('EXAMPLE', MyExamplePlugin);\n     *\n     * // unregister a function\n     * HyperFormula.unregisterFunction('EXAMPLE');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterFunction(functionId) {\n        FunctionRegistry.unregisterFunction(functionId);\n    }\n    /**\n     * Clears function registry\n     *\n     * @example\n     * ```js\n     * HyperFormula.unregisterAllFunctions();\n     * ```\n     *\n     * @category Static Methods\n     */\n    static unregisterAllFunctions() {\n        FunctionRegistry.unregisterAll();\n    }\n    /**\n     * Returns translated names of all registered functions for a given language\n     *\n     * @param {string} code - language code\n     *\n     * @example\n     * ```js\n     * // return a list of function names registered for enGB\n     * const allNames = HyperFormula.getRegisteredFunctionNames('enGB');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getRegisteredFunctionNames(code) {\n        const functionIds = FunctionRegistry.getRegisteredFunctionIds();\n        const language = this.getLanguage(code);\n        return language.getFunctionTranslations(functionIds);\n    }\n    /**\n     * Returns class of a plugin used by function with given id\n     *\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * // register a plugin\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\n     *\n     * // return the class of a given plugin\n     * const myFunctionClass = HyperFormula.getFunctionPlugin('EXAMPLE');\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getFunctionPlugin(functionId) {\n        return FunctionRegistry.getFunctionPlugin(functionId);\n    }\n    /**\n     * Returns classes of all plugins registered in this instance of HyperFormula\n     *\n     * @example\n     * ```js\n     * // return classes of all plugins\n     * const allClasses = HyperFormula.getAllFunctionPlugins();\n     * ```\n     *\n     * @category Static Methods\n     */\n    static getAllFunctionPlugins() {\n        return FunctionRegistry.getPlugins();\n    }\n    /**\n     * Returns the cell value of a given address.\n     * Applies rounding and post-processing.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '2'],\n     * ]);\n     *\n     * // get value of A1 cell, should be '6'\n     * const A1Value = hfInstance.getCellValue({ sheet: 0, col: 0, row: 0 });\n     *\n     * // get value of B1 cell, should be '2'\n     * const B1Value = hfInstance.getCellValue({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellValue(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getCellValue(cellAddress);\n    }\n    ensureEvaluationIsNotSuspended() {\n        if (this._evaluationSuspended) {\n            throw new EvaluationSuspendedError();\n        }\n    }\n    /**\n     * Returns a normalized formula string from the cell of a given address or `undefined` for an address that does not exist and empty values.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '0'],\n     * ]);\n     *\n     * // should return a normalized A1 cell formula: '=SUM(1,2,3)'\n     * const A1Formula = hfInstance.getCellFormula({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return a normalized B1 cell formula: 'undefined'\n     * const B1Formula = hfInstance.getCellFormula({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellFormula(cellAddress) {\n        return this._serialization.getCellFormula(cellAddress);\n    }\n    /**\n     * Returns [[CellValue]] which a serialized content of the cell of a given address either a cell formula, an explicit value, or an error.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '0'],\n     * ]);\n     *\n     * // should return serialized content of A1 cell: '=SUM(1,2,3)'\n     * const cellA1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return serialized content of B1 cell: '0'\n     * const cellB1Serialized = hfInstance.getCellSerialized({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellSerialized(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getCellSerialized(cellAddress);\n    }\n    /**\n     * Returns an array of arrays of [[CellValue]] with values of all cells from [[Sheet]].\n     * Applies rounding and post-processing.\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @param {number} sheetId - sheet ID number\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     *  ['2', '=SUM(A1:C1)', '=C1'],\n     * ]);\n     *\n     * // should return all values of a sheet: [[0, 6, 0], [1, '1.0%', 0], [2, 6, 0]]\n     * const sheetValues = hfInstance.getSheetValues(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetValues(sheetId) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getSheetValues(sheetId);\n    }\n    /**\n     * Returns an array with normalized formula strings from [[Sheet]] or `undefined` for a cells that have no value.\n     *\n     * @param {SimpleCellAddress} sheetId - sheet ID number\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     *  ['2', '=SUM(A1:C1)', '=C1'],\n     * ]);\n     *\n     * // should return all formulas of a sheet:\n     * // [\n     * //  [undefined, '=SUM(1,2,3)', '=A1'],\n     * //  [undefined, '=TEXT(A2, \"0.0%\")', '=C1'],\n     * //  [undefined, '=SUM(A1:C1)', '=C1'],\n     * // ];\n     * const sheetFormulas = hfInstance.getSheetFormulas(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetFormulas(sheetId) {\n        return this._serialization.getSheetFormulas(sheetId);\n    }\n    /**\n     * Returns an array of arrays of [[NoErrorCellValue]] with serialized content of cells from [[Sheet]], either a cell formula or an explicit value.\n     *\n     * @param {SimpleCellAddress} sheetId - sheet ID number\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     *  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     *  ['2', '=SUM(A1:C1)', '=C1'],\n     * ]);\n     *\n     * // should return:\n     * // [\n     * //  ['0', '=SUM(1,2,3)', '=A1'],\n     * //  ['1', '=TEXT(A2, \"0.0%\")', '=C1'],\n     * //  ['2', '=SUM(A1:C1)', '=C1'],\n     * // ];\n     * const serializedContent = hfInstance.getSheetSerialized(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetSerialized(sheetId) {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getSheetSerialized(sheetId);\n    }\n    /**\n     * Returns a map containing dimensions of all sheets for the engine instance represented as a key-value pairs where keys are sheet IDs and dimensions are returned as numbers, width and height respectively.\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   Sheet1: [\n     *    ['1', '2', '=Sheet2!$A1'],\n     *   ],\n     *   Sheet2: [\n     *    ['3'],\n     *    ['4'],\n     *   ],\n     * });\n     *\n     * // should return the dimensions of all sheets:\n     * // { Sheet1: { width: 3, height: 1 }, Sheet2: { width: 1, height: 2 } }\n     * const allSheetsDimensions = hfInstance.getAllSheetsDimensions();\n     * ```\n     *\n     * @category Sheets\n     */\n    getAllSheetsDimensions() {\n        return this._serialization.genericAllSheetsGetter((arg) => this.getSheetDimensions(arg));\n    }\n    /**\n     * Returns dimensions of a specified sheet.\n     * The sheet dimensions is represented with numbers: width and height.\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @param {number} sheetId - sheet ID number\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *    ['1', '2', '=Sheet2!$A1'],\n     * ]);\n     *\n     * // should return provided sheet's dimensions: { width: 3, height: 1 }\n     * const sheetDimensions = hfInstance.getSheetDimensions(0);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetDimensions(sheetId) {\n        return {\n            width: this.dependencyGraph.getSheetWidth(sheetId),\n            height: this.dependencyGraph.getSheetHeight(sheetId),\n        };\n    }\n    /**\n     * Returns values of all sheets in a form of an object which property keys are strings and values are arrays of arrays of [[CellValue]].\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '=A1+10', '3'],\n     * ]);\n     *\n     * // should return all sheets values: { Sheet1: [ [ 1, 11, 3 ] ] }\n     * const allSheetsValues = hfInstance.getAllSheetsValues();\n     * ```\n     *\n     * @category Sheets\n     */\n    getAllSheetsValues() {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getAllSheetsValues();\n    }\n    /**\n     * Returns formulas of all sheets in a form of an object which property keys are strings and values are arrays of arrays of strings or possibly `undefined` when the call does not contain a formula.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '=A1+10'],\n     * ]);\n     *\n     * // should return only formulas: { Sheet1: [ [ undefined, undefined, '=A1+10' ] ] }\n     * const allSheetsFormulas = hfInstance.getAllSheetsFormulas();\n     * ```\n     * @category Sheets\n     */\n    getAllSheetsFormulas() {\n        return this._serialization.getAllSheetsFormulas();\n    }\n    /**\n     * Returns formulas or values of all sheets in a form of an object which property keys are strings and values are arrays of arrays of [[CellValue]].\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '=A1+10'],\n     * ]);\n     *\n     * // should return all sheets serialized content: { Sheet1: [ [ 1, 2, '=A1+10' ] ] }\n     * const allSheetsSerialized = hfInstance.getAllSheetsSerialized();\n     * ```\n     *\n     * @category Sheets\n     */\n    getAllSheetsSerialized() {\n        this.ensureEvaluationIsNotSuspended();\n        return this._serialization.getAllSheetsSerialized();\n    }\n    /**\n     * Updates the config with given new metadata.\n     *\n     * @param {Partial<ConfigParams>} newParams configuration options to be updated or added\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // add a config param, for example maxColumns,\n     * // you can check the configuration with getConfig method\n     * hfInstance.updateConfig({ maxColumns: 1000 });\n     * ```\n     *\n     * @category Instance\n     */\n    updateConfig(newParams) {\n        const newConfig = this._config.mergeConfig(newParams);\n        const configNewLanguage = this._config.mergeConfig({ language: newParams.language });\n        const serializedSheets = this._serialization.withNewConfig(configNewLanguage, this._namedExpressions).getAllSheetsSerialized();\n        const serializedNamedExpressions = this._serialization.getAllNamedExpressionsSerialized();\n        const newEngine = BuildEngineFactory.rebuildWithConfig(newConfig, serializedSheets, this._stats);\n        this._config = newEngine.config;\n        this._stats = newEngine.stats;\n        this._dependencyGraph = newEngine.dependencyGraph;\n        this._columnSearch = newEngine.columnSearch;\n        this._parser = newEngine.parser;\n        this._unparser = newEngine.unparser;\n        this._cellContentParser = newEngine.cellContentParser;\n        this._evaluator = newEngine.evaluator;\n        this._lazilyTransformingAstService = newEngine.lazilyTransformingAstService;\n        this._crudOperations = newEngine.crudOperations;\n        this._exporter = newEngine.exporter;\n        this._namedExpressions = newEngine.namedExpressions;\n        this._serialization = newEngine.serialization;\n        this._functionRegistry = newEngine.functionRegistry;\n        serializedNamedExpressions.forEach((entry) => {\n            this.addNamedExpression(entry.name, entry.expression, entry.scope, entry.options);\n        });\n    }\n    /**\n     * Returns current configuration of the engine instance.\n     *\n     * @example\n     * ```js\n     * // should return all config metadata including default and those which were added\n     * const hfConfig = hfInstance.getConfig();\n     * ```\n     *\n     * @category Instance\n     */\n    getConfig() {\n        return this._config.getConfig();\n    }\n    /**\n     * Serializes and deserializes whole engine, effectively reloading it.\n     *\n     * @example\n     * ```js\n     * hfInstance.rebuildAndRecalculate();\n     * ```\n     *\n     * @category Instance\n     */\n    rebuildAndRecalculate() {\n        this.updateConfig({});\n    }\n    /**\n     * Returns a snapshot of computation time statistics.\n     * It returns a map with key-value pairs where keys are enums for stat type and time (number).\n     *\n     * @internal\n     *\n     * @category Instance\n     */\n    getStats() {\n        return this._stats.snapshot();\n    }\n    /**\n     * Undo the previous operation.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoOperationToUndoError]] when there is no operation running that can be undone\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     *  ['3', ''],\n     * ]);\n     *\n     * // perform CRUD operation, for example remove the second row\n     * hfInstance.removeRows(0, [1, 1]);\n     *\n     * // do an undo, it should return the changes\n     * const changes = hfInstance.undo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    undo() {\n        this._crudOperations.undo();\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Re-do recently undone operation.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoOperationToRedoError]] when there is no operation running that can be re-done\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     *  ['3'],\n     * ]);\n     *\n     * // perform CRUD operation, for example remove the second row\n     * hfInstance.removeRows(0, [1, 1]);\n     *\n     * // do an undo, it should return prvious values: [['1'], ['2'], ['3']]\n     * hfInstance.undo();\n     *\n     * // do a redo, it should return the values after removing the second row: [['1'], ['3']]\n     * const changes = hfInstance.redo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    redo() {\n        this._crudOperations.redo();\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Checks if there is at least one operation that can be undone.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     *  ['3'],\n     * ]);\n     *\n     * // perform CRUD operation, for example remove the second row\n     * hfInstance.removeRows(0, [1, 1]);\n     *\n     * // should return 'true', it is possible to undo last operation\n     * // which is removing rows in this example\n     * const isSomethingToUndo = hfInstance.isThereSomethingToUndo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    isThereSomethingToUndo() {\n        return this._crudOperations.isThereSomethingToUndo();\n    }\n    /**\n     * Checks if there is at least one operation that can be re-done.\n     *\n     * @example\n     * ```js\n     * hfInstance.undo();\n     *\n     * // when there is an action to redo, this will return 'true'\n     * const isSomethingToRedo = hfInstance.isThereSomethingToRedo();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    isThereSomethingToRedo() {\n        return this._crudOperations.isThereSomethingToRedo();\n    }\n    /**\n     * Returns information whether it is possible to change the content in a rectangular area bounded by the box.\n     * If returns `true`, doing [[setCellContents]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside selected cells, the address is invalid or the sheet does not exist.\n     *\n     * @param {SimpleCellAddress} topLeftCornerAddress -  top left corner of block of cells\n     * @param {number} width - width of the box\n     * @param {number} height - height of the box\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // choose the address and assign it to a variable\n     * const address = { col: 0, row: 0, sheet: 0 };\n     *\n     * // should return 'true' for this example, it is possible to set content of\n     * // width 2, height 1 in the first row and column of sheet 0\n     * const isSettable = hfInstance.isItPossibleToSetCellContents(address, 2, 1);\n     * ```\n     *\n     * @category Cells\n     */\n    isItPossibleToSetCellContents(topLeftCornerAddress, width = 1, height = 1) {\n        try {\n            this._crudOperations.ensureRangeInSizeLimits(AbsoluteCellRange.spanFrom(topLeftCornerAddress, width, height));\n            for (let i = 0; i < width; i++) {\n                for (let j = 0; j < height; j++) {\n                    this._crudOperations.ensureItIsPossibleToChangeContent({\n                        col: topLeftCornerAddress.col + i,\n                        row: topLeftCornerAddress.row + j,\n                        sheet: topLeftCornerAddress.sheet\n                    });\n                }\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Sets the content for a block of cells of a given coordinates.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {SimpleCellAddress} topLeftCornerAddress - top left corner of block of cells\n     * @param {(RawCellContent[][]|RawCellContent)} cellContents - array with content\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the value is not an array of arrays or a raw cell value\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws an error when it is an attempt to set cells content inside matrices during batch operation\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '=A1'],\n     * ]);\n     *\n     * // should set the content, returns:\n     * // [{\n     * //   address: { sheet: 0, col: 3, row: 0 },\n     * //   newValue: 2,\n     * // }]\n     * const changes = hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     * ```\n     *\n     * @category Cells\n     */\n    setCellContents(topLeftCornerAddress, cellContents) {\n        this._crudOperations.setCellContents(topLeftCornerAddress, cellContents);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Reorders rows of a sheet according to a source-target mapping.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1],\n     *  [2],\n     *  [4, 5],\n     * ]);\n     *\n     * // should set swap rows 0 and 2 in place, returns:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 2 },\n     * //   newValue: 1,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 1, row: 2 },\n     * //   newValue: null,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 4,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: 5,\n     * // }]\n     * const changes = hfInstance.swapRowIndexes(0, [[0,2],[2,0]]);\n     * ```\n     *\n     * @category Rows\n     */\n    swapRowIndexes(sheetId, rowMapping) {\n        this._crudOperations.setRowOrder(sheetId, rowMapping);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Checks if it is possible to reorder rows of a sheet according to a source-target mapping.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {[number, number][]} rowMapping - array mapping original positions to final positions of rows\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1],\n     *  [2],\n     *  [4, 5],\n     * ]);\n     *\n     * // returns true\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0,2],[2,0]]);\n     *\n     * // returns false\n     * const isSwappable = hfInstance.isItPossibleToSwapRowIndexes(0, [[0,1]]);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToSwapRowIndexes(sheetId, rowMapping) {\n        try {\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\n            this._crudOperations.testRowOrderForMatrices(sheetId, rowMapping);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Reorders rows of a sheet according to a permutation.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {number[]} newRowOrder - permutation of rows\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when rowMapping does not define correct row permutation for some subset of rows of the given sheet\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1],\n     *  [2],\n     *  [4, 5],\n     * ]);\n     *\n     * // should set swap rows 0 and 2 in place, returns:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 2 },\n     * //   newValue: 1,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 1, row: 2 },\n     * //   newValue: null,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 4,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: 5,\n     * // }]\n     * const changes = hfInstance.setRowOrder(0, [2, 1, 0]);\n     * ```\n     *\n     * @category Rows\n     */\n    setRowOrder(sheetId, newRowOrder) {\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\n        return this.swapRowIndexes(sheetId, mapping);\n    }\n    /**\n     * Checks if it is possible to reorder rows of a sheet according to a permutation.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {number[]} newRowOrder - permutation of rows\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1],\n     *  [2],\n     *  [4, 5],\n     * ]);\n     *\n     * // returns true\n     * hfInstance.isItPossibleToSetRowOrder(0, [2, 1, 0]);\n     *\n     * // returns false\n     * hfInstance.isItPossibleToSetRowOrder(0, [2]);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToSetRowOrder(sheetId, newRowOrder) {\n        try {\n            const rowMapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'row');\n            this._crudOperations.validateSwapRowIndexes(sheetId, rowMapping);\n            this._crudOperations.testRowOrderForMatrices(sheetId, rowMapping);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Reorders columns of a sheet according to a source-target mapping.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {[number, number][]} columnMapping - array mapping original positions to final positions of columns\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1, 2, 4],\n     *  [5]\n     * ]);\n     *\n     * // should set swap columns 0 and 2 in place, returns:\n     * // [{\n     * //   address: { sheet: 0, col: 2, row: 0 },\n     * //   newValue: 1,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 2, row: 1 },\n     * //   newValue: 5,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 4,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 0, row: 1 },\n     * //   newValue: null,\n     * // }]\n     * const changes = hfInstance.swapColumnIndexes(0, [[0,2],[2,0]]);\n     * ```\n     *\n     * @category Columns\n     */\n    swapColumnIndexes(sheetId, columnMapping) {\n        this._crudOperations.setColumnOrder(sheetId, columnMapping);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Checks if it is possible to reorder columns of a sheet according to a source-target mapping.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1, 2, 4],\n     *  [5]\n     * ]);\n     *\n     * // returns true\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0,2],[2,0]]);\n     *\n     * // returns false\n     * hfInstance.isItPossibleToSwapColumnIndexes(0, [[0,1]]);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToSwapColumnIndexes(sheetId, columnMapping) {\n        try {\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\n            this._crudOperations.testColumnOrderForMatrices(sheetId, columnMapping);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Reorders columns of a sheet according to a permutation.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {number[]} newColumnOrder - permutation of columns\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when columnMapping does not define correct column permutation for some subset of columns of the given sheet\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1, 2, 4],\n     *  [5]\n     * ]);\n     *\n     * // should set swap columns 0 and 2 in place, returns:\n     * // [{\n     * //   address: { sheet: 0, col: 2, row: 0 },\n     * //   newValue: 1,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 2, row: 1 },\n     * //   newValue: 5,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 4,\n     * // },\n     * // {\n     * //   address: { sheet: 0, col: 0, row: 1 },\n     * //   newValue: null,\n     * // }]\n     * const changes = hfInstance.setColumnOrder(0, [2, 1, 0]]);\n     * ```\n     *\n     * @category Columns\n     */\n    setColumnOrder(sheetId, newColumnOrder) {\n        const mapping = this._crudOperations.mappingFromOrder(sheetId, newColumnOrder, 'column');\n        return this.swapColumnIndexes(sheetId, mapping);\n    }\n    /**\n     * Checks if it possible to reorder columns of a sheet according to a permutation.\n     *\n     * @param {number} sheetId - ID of a sheet to operate on\n     * @param {number[]} newColumnOrder - permutation of columns\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  [1, 2, 4],\n     *  [5]\n     * ]);\n     *\n     * // returns true\n     * hfInstance.isItPossibleToSetColumnOrder(0, [2, 1, 0]]);\n     *\n     * // returns false\n     * hfInstance.isItPossibleToSetColumnOrder(0, [1]]);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToSetColumnOrder(sheetId, newRowOrder) {\n        try {\n            const columnMapping = this._crudOperations.mappingFromOrder(sheetId, newRowOrder, 'column');\n            this._crudOperations.validateSwapColumnIndexes(sheetId, columnMapping);\n            this._crudOperations.testColumnOrderForMatrices(sheetId, columnMapping);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Returns information whether it is possible to add rows into a specified position in a given sheet.\n     * Checks against particular rules to ascertain that addRows can be called.\n     * If returns `true`, doing [[addRows]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected rows.\n     *\n     * @param {number} sheetId - sheet ID in which rows will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '3'],\n     * ]);\n     *\n     * // should return 'true' for this example,\n     * // it is possible to add one row in the second row of sheet 0\n     * const isAddable = hfInstance.isItPossibleToAddRows(0, [1, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToAddRows(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToAddRows(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds multiple rows into a specified position in a given sheet.\n     * Does nothing if rows are outside of effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID in which rows will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [row, amount], where row is a row number above which the rows will be added\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[TargetLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values\n     * const changes = hfInstance.addRows(0, [0, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    addRows(sheetId, ...indexes) {\n        this._crudOperations.addRows(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to remove rows from a specified position in a given sheet.\n     * Checks against particular rules to ascertain that removeRows can be called.\n     * If returns `true`, doing [[removeRows]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected rows.\n     *\n     * @param {number} sheetId - sheet ID from which rows will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to remove one row from row 1 of sheet 0\n     * const isRemovable = hfInstance.isItPossibleToRemoveRows(0, [1, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToRemoveRows(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToRemoveRows(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes multiple rows from a specified position in a given sheet.\n     * Does nothing if rows are outside of the effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID from which rows will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [row, amount]\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return: [{ sheet: 0, col: 1, row: 2, value: null }] for this example\n     * const changes = hfInstance.removeRows(0, [1, 1]);\n     * ```\n     *\n     * @category Rows\n     */\n    removeRows(sheetId, ...indexes) {\n        this._crudOperations.removeRows(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to add columns into a specified position in a given sheet.\n     * Checks against particular rules to ascertain that addColumns can be called.\n     * If returns `true`, doing [[addColumns]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns.\n     *\n     * @param {number} sheetId - sheet ID in which columns will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return 'true' for this example,\n     * // it is possible to add 1 column in sheet 0, at column 1\n     * const isAddable = hfInstance.isItPossibleToAddColumns(0, [1, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToAddColumns(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeAddedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToAddColumns(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds multiple columns into a specified position in a given sheet.\n     * Does nothing if the columns are outside of the effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID in which columns will be added\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount], where column is a column number from which new columns will be added\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[TargetLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=RAND()', '42'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, for this example:\n     * // [{\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: 0.92754862796338,\n     * // }]\n     * const changes = hfInstance.addColumns(0, [0, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    addColumns(sheetId, ...indexes) {\n        this._crudOperations.addColumns(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to remove columns from a specified position in a given sheet.\n     * Checks against particular rules to ascertain that removeColumns can be called.\n     * If returns `true`, doing [[removeColumns]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns.\n     *\n     * @param {number} sheetId - sheet ID from which columns will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format [column, amount]\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to remove one column, in place of the second column of sheet 0\n     * const isRemovable = hfInstance.isItPossibleToRemoveColumns(0, [1, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToRemoveColumns(sheetId, ...indexes) {\n        const normalizedIndexes = normalizeRemovedIndexes(indexes);\n        try {\n            this._crudOperations.ensureItIsPossibleToRemoveColumns(sheetId, ...normalizedIndexes);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes multiple columns from a specified position in a given sheet.\n     * Does nothing if columns are outside of the effective sheet size.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - sheet ID from which columns will be removed\n     * @param {ColumnRowIndex[]} indexes - non-contiguous indexes with format: [column, amount]\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SourceLocationHasMatrixError]] when the selected position has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['0', '=SUM(1,2,3)', '=A1'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, in this example it will return:\n     * // [{\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: { error: [CellError], value: '#REF!' },\n     * // }]\n     * const changes = hfInstance.removeColumns(0, [0, 1]);\n     * ```\n     *\n     * @category Columns\n     */\n    removeColumns(sheetId, ...indexes) {\n        this._crudOperations.removeColumns(sheetId, ...indexes);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to move cells to a specified position in a given sheet.\n     * Checks against particular rules to ascertain that moveCells can be called.\n     * If returns `true`, doing [[moveCells]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns, the target location has matrix or the provided address is invalid.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a moved block\n     * @param {number} width - width of the cell block that is being moved\n     * @param {number} height - height of the cell block that is being moved\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // choose the coordinates and assign them to variables\n     * const source = { sheet: 0, col: 1, row: 0 };\n     * const destination = { sheet: 0, col: 3, row: 0 };\n     *\n     * // should return 'true' for this example\n     * // it is possible to move a block of width 1 and height 1\n     * // from the corner: column 1 and row 0 of sheet 0\n     * // into destination corner: column 3, row 0 of sheet 0\n     * const isMovable = hfInstance.isItPossibleToMoveCells(source, 1, 1, destination);\n     * ```\n     * @category Cells\n     */\n    isItPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        try {\n            this._crudOperations.operations.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Moves the content of a cell block from source to the target location.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a moved block\n     * @param {number} width - width of the cell block that is being moved\n     * @param {number} height - height of the cell block that is being moved\n     * @param {SimpleCellAddress} destinationLeftCorner - upper left address of the target cell block\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[SourceLocationHasMatrixError]] when the source location has matrix inside - matrix cannot be moved\n     * @throws [[TargetLocationHasMatrixError]] when the target location has matrix inside - cells cannot be replaced by the matrix\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=RAND()', '42'],\n     * ]);\n     *\n     * // choose the coordinates and assign them to variables\n     * const source = { sheet: 0, col: 1, row: 0 };\n     * const destination = { sheet: 0, col: 3, row: 0 };\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, for this example:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 0.93524248002062,\n     * // }]\n     * const changes = hfInstance.moveCells(source, 1, 1, destination);\n     * ```\n     *\n     * @category Cells\n     */\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        this._crudOperations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to move a particular number of rows to a specified position in a given sheet.\n     * Checks against particular rules to ascertain that moveRows can be called.\n     * If returns `true`, doing [[moveRows]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected rows, the target location has matrix or the provided address is invalid.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startRow - number of the first row to move\n     * @param {number} numberOfRows - number of rows to move\n     * @param {number} targetRow - row number before which rows will be moved\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to move one row from row 0 into row 2\n     * const isMovable = hfInstance.isItPossibleToMoveRows(0, 0, 1, 2);\n     * ```\n     *\n     * @category Rows\n     */\n    isItPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow) {\n        try {\n            this._crudOperations.ensureItIsPossibleToMoveRows(sheetId, startRow, numberOfRows, targetRow);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Moves a particular number of rows to a specified position in a given sheet.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startRow - number of the first row to move\n     * @param {number} numberOfRows - number of rows to move\n     * @param {number} targetRow - row number before which rows will be moved\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SourceLocationHasMatrixError]] when the source location has matrix inside - matrix cannot be moved\n     * @throws [[TargetLocationHasMatrixError]] when the target location has matrix inside - cells cannot be replaced by the matrix\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1'],\n     *  ['2'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values\n     * const changes = hfInstance.moveRows(0, 0, 1, 2);\n     * ```\n     *\n     * @category Rows\n     */\n    moveRows(sheetId, startRow, numberOfRows, targetRow) {\n        this._crudOperations.moveRows(sheetId, startRow, numberOfRows, targetRow);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to move a particular number of columns to a specified position in a given sheet.\n     * Checks against particular rules to ascertain that moveColumns can be called.\n     * If returns `true`, doing [[moveColumns]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted and causes side-effects by the fact that there is a matrix inside the selected columns, the target location has matrix or the provided address is invalid.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startColumn - number of the first column to move\n     * @param {number} numberOfColumns - number of columns to move\n     * @param {number} targetColumn - column number before which columns will be moved\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return 'true' for this example\n     * // it is possible to move one column from column 1 into column 2 of sheet 0\n     * const isMovable = hfInstance.isItPossibleToMoveColumns(0, 1, 1, 2);\n     * ```\n     *\n     * @category Columns\n     */\n    isItPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\n        try {\n            this._crudOperations.ensureItIsPossibleToMoveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Moves a particular number of columns to a specified position in a given sheet.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {number} sheetId - a sheet number in which the operation will be performed\n     * @param {number} startColumn - number of the first column to move\n     * @param {number} numberOfColumns - number of columns to move\n     * @param {number} targetColumn - column number before which columns will be moved\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[InvalidArgumentsError]] when the given arguments are invalid\n     * @throws [[SourceLocationHasMatrixError]] when the source location has matrix inside - matrix cannot be moved\n     * @throws [[TargetLocationHasMatrixError]] when the target location has matrix inside - cells cannot be replaced by the matrix\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2', '3', '=RAND()', '=SUM(A1:C1)'],\n     * ]);\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, for this example:\n     * // [{\n     * //   address: { sheet: 0, col: 1, row: 0 },\n     * //   newValue: 0.16210054671639,\n     * //  }, {\n     * //   address: { sheet: 0, col: 4, row: 0 },\n     * //   newValue: 6.16210054671639,\n     * // }]\n     * const changes = hfInstance.moveColumns(0, 1, 1, 2);\n     * ```\n     *\n     * @category Columns\n     */\n    moveColumns(sheetId, startColumn, numberOfColumns, targetColumn) {\n        this._crudOperations.moveColumns(sheetId, startColumn, numberOfColumns, targetColumn);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Stores a copy of the cell block in internal clipboard for the further paste.\n     * Returns values of cells for use in external clipboard.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a copied block\n     * @param {number} width - width of the cell block being copied\n     * @param {number} height - height of the cell block being copied\n     *\n     * @throws an error while attempting to copy unsupported content type\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return: [ [ 2 ] ]\n     * const clipboardContent = hfInstance.copy({ sheet: 0, col: 1, row: 0 }, 1, 1);\n     * ```\n     *\n     * @category Clipboard\n     */\n    copy(sourceLeftCorner, width, height) {\n        this._crudOperations.copy(sourceLeftCorner, width, height);\n        return this.getRangeValues(sourceLeftCorner, width, height);\n    }\n    /**\n     * Stores information of the cell block in internal clipboard for further paste.\n     * Calling [[paste]] right after this method is equivalent to call [[moveCells]].\n     * Almost any CRUD operation called after this method will abort the cut operation.\n     * Returns values of cells for use in external clipboard.\n     *\n     * @param {SimpleCellAddress} sourceLeftCorner - address of the upper left corner of a copied block\n     * @param {number} width - width of the cell block being copied\n     * @param {number} height - height of the cell block being copied\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return values that were cut: [ [ 1 ] ]\n     * const clipboardContent = hfInstance.cut({ sheet: 0, col: 0, row: 0 }, 1, 1);\n     * ```\n     *\n     * @category Clipboard\n     */\n    cut(sourceLeftCorner, width, height) {\n        this._crudOperations.cut(sourceLeftCorner, width, height);\n        return this.getRangeValues(sourceLeftCorner, width, height);\n    }\n    /**\n     * When called after [[copy]] it will paste copied values and formulas into a cell block.\n     * When called after [[cut]] it will perform [[moveCells]] operation into the cell block.\n     * Does nothing if the clipboard is empty.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {SimpleCellAddress} targetLeftCorner - upper left address of the target cell block\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws an error while attempting to paste onto a matrix\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     * @throws [[SheetSizeLimitExceededError]] when performing this operation would result in sheet size limits exceeding\n     * @throws [[NothingToPasteError]] when clipboard is empty\n     * @throws [[TargetLocationHasMatrixError]] when the selected target area has matrix inside\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // do a copy, [ [ 2 ] ] was copied\n     * hfInstance.copy({ sheet: 0, col: 0, row: 0 }, 1, 1);\n     *\n     * // do a paste, should return a list of cells which values changed\n     * // after the operation, their absolute addresses and new values\n     * const changes = hfInstance.paste({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Clipboard\n     */\n    paste(targetLeftCorner) {\n        this.ensureEvaluationIsNotSuspended();\n        this._crudOperations.paste(targetLeftCorner);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether there is something in the clipboard.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // copy desired content\n     * hfInstance.copy({ sheet: 0, col: 1, row: 0 }, 1, 1);\n     *\n     * // returns 'false', there is content in the clipboard\n     * const isClipboardEmpty = hfInstance.isClipboardEmpty();\n     * ```\n     *\n     * @category Clipboard\n     */\n    isClipboardEmpty() {\n        return this._crudOperations.isClipboardEmpty();\n    }\n    /**\n     * Clears the clipboard content.\n     *\n     * @example\n     * ```js\n     * // clears the clipboard, isClipboardEmpty() should return true if called afterwards\n     * hfInstance.clearClipboard();\n     * ```\n     *\n     * @category Clipboard\n     */\n    clearClipboard() {\n        this._crudOperations.clearClipboard();\n    }\n    /**\n     * Clears the redo stack in undoRedo history.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *   ['1', '2', '3'],\n     * ]);\n     *\n     * // do an operation, for example remove columns\n     * hfInstance.removeColumns(0, [0, 1]);\n     *\n     * // undo the operation\n     * hfInstance.undo();\n     *\n     * // redo the operation\n     * hfInstance.redo();\n     *\n     * // clear the redo stack\n     * hfInstance.clearRedoStack();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    clearRedoStack() {\n        this._crudOperations.undoRedo.clearRedoStack();\n    }\n    /**\n     * Clears the undo stack in undoRedo history.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *   ['1', '2', '3'],\n     * ]);\n     *\n     * // do an operation, for example remove columns\n     * hfInstance.removeColumns(0, [0, 1]);\n     *\n     * // undo the operation\n     * hfInstance.undo();\n     *\n     * // clear the undo stack\n     * hfInstance.clearUndoStack();\n     * ```\n     *\n     * @category Undo and Redo\n     */\n    clearUndoStack() {\n        this._crudOperations.undoRedo.clearUndoStack();\n    }\n    /**\n     * Returns the cell content of a given range in a [[CellValue]][][] format.\n     *\n     * @param {SimpleCellAddress} leftCorner - address of the upper left corner of a range\n     * @param {number} width - width of a range\n     * @param {number} height - height of a range\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2)', '2', '10'],\n     *  ['5', '6', '7'],\n     *  ['40', '30', '20'],\n     * ]);\n     *\n     *\n     * // returns calculated cells content: [ [ 3, 2 ], [ 5, 6 ] ]\n     * const rangeValues = hfInstance.getRangeValues({ sheet: 0, col: 0, row: 0 }, 2, 2);\n     * ```\n     *\n     * @category Ranges\n     */\n    getRangeValues(leftCorner, width, height) {\n        const cellRange = AbsoluteCellRange.spanFrom(leftCorner, width, height);\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellValue(address)));\n    }\n    /**\n     * Returns cell formulas in given range.\n     *\n     * @param {SimpleCellAddress} leftCorner - address of the upper left corner of a range\n     * @param {number} width - width of a range\n     * @param {number} height - height of a range\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2)', '2', '10'],\n     *  ['5', '6', '7'],\n     *  ['40', '30', '20'],\n     * ]);\n     *\n     * // returns cell formulas of a given range only:\n     * // [ [ '=SUM(1,2)', undefined ], [ undefined, undefined ] ]\n     * const rangeFormulas = hfInstance.getRangeFormulas({ sheet: 0, col: 0, row: 0 }, 2, 2);\n     * ```\n     *\n     * @category Ranges\n     */\n    getRangeFormulas(leftCorner, width, height) {\n        const cellRange = AbsoluteCellRange.spanFrom(leftCorner, width, height);\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellFormula(address)));\n    }\n    /**\n     * Returns serialized cells in given range.\n     *\n     * @param {SimpleCellAddress} leftCorner - address of the upper left corner of a range\n     * @param {number} width - width of a range\n     * @param {number} height - height of a range\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2)', '2', '10'],\n     *  ['5', '6', '7'],\n     *  ['40', '30', '20'],\n     * ]);\n     *\n     * // should return serialized cell content for the given range:\n     * // [ [ '=SUM(1,2)', 2 ], [ 5, 6 ] ]\n     * const rangeSerialized = hfInstance.getRangeSerialized({ sheet: 0, col: 0, row: 0 }, 2, 2);\n     * ```\n     *\n     * @category Ranges\n     */\n    getRangeSerialized(leftCorner, width, height) {\n        const cellRange = AbsoluteCellRange.spanFrom(leftCorner, width, height);\n        return cellRange.arrayOfAddressesInRange().map((subarray) => subarray.map((address) => this.getCellSerialized(address)));\n    }\n    /**\n     * Returns information whether it is possible to add a sheet to the engine.\n     * Checks against particular rules to ascertain that addSheet can be called.\n     * If returns `true`, doing [[addSheet]] operation won't throw any errors and it possible to add sheet with provided name.\n     * Returns `false` if the chosen name is already used.\n     *\n     * @param {string} sheetName - sheet name, case insensitive\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'false' because 'MySheet2' already exists\n     * const isAddable = hfInstance.isItPossibleToAddSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToAddSheet(sheetName) {\n        try {\n            this._crudOperations.ensureItIsPossibleToAddSheet(sheetName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds a new sheet to the HyperFormula instance. Returns given or autogenerated name of a new sheet.\n     *\n     * @param {string} [sheetName] - if not specified, name will be autogenerated\n     *\n     * @fires [[sheetAdded]] after the sheet was added\n     *\n     * @throws [[SheetNameAlreadyTakenError]] when sheet with a given name already exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'MySheet3'\n     * const nameProvided = hfInstance.addSheet('MySheet3');\n     *\n     * // should return autogenerated 'Sheet4'\n     * // because no name was provided and 3 other ones already exist\n     * const generatedName = hfInstance.addSheet();\n     * ```\n     *\n     * @category Sheets\n     */\n    addSheet(sheetName) {\n        const addedSheetName = this._crudOperations.addSheet(sheetName);\n        this._emitter.emit(Events.SheetAdded, addedSheetName);\n        return addedSheetName;\n    }\n    /**\n     * Returns information whether it is possible to remove sheet for the engine.\n     * Returns `true` if the provided name of a sheet exists and therefore it can be removed, doing [[removeSheet]] operation won't throw any errors.\n     * Returns `false` if there is no sheet with a given name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' because 'MySheet2' exists and is removable\n     * const isRemovable = hfInstance.isItPossibleToRemoveSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToRemoveSheet(sheetName) {\n        try {\n            this._crudOperations.ensureSheetExists(sheetName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes sheet with a specified name.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} sheetName - sheet name, case insensitive\n     *\n     * @fires [[sheetRemoved]] after the sheet was removed\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, in this example it will return:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: { error: [CellError], value: '#REF!' },\n     * // }]\n     * const changes = hfInstance.removeSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    removeSheet(sheetName) {\n        const displayName = this.sheetMapping.getDisplayNameByName(sheetName);\n        this._crudOperations.removeSheet(sheetName);\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\n        this._emitter.emit(Events.SheetRemoved, displayName, changes);\n        return changes;\n    }\n    /**\n     * Returns information whether it is possible to clear a specified sheet.\n     * If returns `true`, doing [[clearSheet]] operation won't throw any errors, provided name of a sheet exists and then its content can be cleared.\n     * Returns `false` if there is no sheet with a given name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' because 'MySheet2' exists and can be cleared\n     * const isClearable = hfInstance.isItPossibleToClearSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToClearSheet(sheetName) {\n        try {\n            this._crudOperations.ensureSheetExists(sheetName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Clears the sheet content. Based on that the method finds the ID of a sheet to be cleared.\n     * Double-checks if the sheet exists.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['=SUM(MySheet2!A1:A2)'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values, in this example it will return:\n     * // [{\n     * //   address: { sheet: 0, col: 0, row: 0 },\n     * //   newValue: 0,\n     * // }]\n     * const changes = hfInstance.clearSheet('MySheet2');\n     * ```\n     *\n     * @category Sheets\n     */\n    clearSheet(sheetName) {\n        this._crudOperations.ensureSheetExists(sheetName);\n        this._crudOperations.clearSheet(sheetName);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to replace the sheet content.\n     * If returns `true`, doing [[setSheetContent]] operation won't throw any errors, the provided name of a sheet exists and then its content can be replaced.\n     * Returns `false` if there is no sheet with a given name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     * @param {RawCellContent[][]} values - array of new values\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' because 'MySheet1' exists\n     * // and the provided content can be placed in this sheet\n     * const isReplaceable = hfInstance.isItPossibleToReplaceSheetContent('MySheet1', [['50'], ['60']]);\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToReplaceSheetContent(sheetName, values) {\n        try {\n            this._crudOperations.ensureSheetExists(sheetName);\n            const sheetId = this.sheetMapping.fetch(sheetName);\n            this._crudOperations.ensureItIsPossibleToChangeSheetContents(sheetId, values);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Replaces the sheet content with new values.\n     * The new value is to be provided as an array of arrays of [[RawCellContent]].\n     * The method finds sheet ID based on the provided sheet name.\n     *\n     * @param {string} sheetName - sheet name, case insensitive.\n     * @param {RawCellContent[][]} values - array of new values\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     * @throws [[InvalidArgumentsError]] when values is not an array of arrays\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return a list of cells which values changed after the operation,\n     * // their absolute addresses and new values\n     * const changes = hfInstance.setSheetContent('MySheet1', [['50'], ['60']]);\n     * ```\n     *\n     * @category Sheets\n     */\n    setSheetContent(sheetName, values) {\n        this._crudOperations.setSheetContent(sheetName, values);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Computes simple (absolute) address of a cell address based on its string representation.\n     * If sheet name is present in string representation but not present in the engine, returns `undefined`.\n     * If sheet name is not present in string representation, returns the sheet number.\n     * Returns an absolute representation of address.\n     *\n     * @param {string} cellAddress - string representation of cell address in A1 notation\n     * @param {number} sheetId - override sheet index regardless of sheet mapping\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // should return { sheet: 0, col: 0, row: 0 }\n     * const simpleCellAddress = hfInstance.simpleCellAddressFromString('A1', 0);\n     * ```\n     *\n     * @category Helpers\n     */\n    simpleCellAddressFromString(cellAddress, sheetId) {\n        return simpleCellAddressFromString(this.sheetMapping.get, cellAddress, sheetId);\n    }\n    /**\n     * Returns string representation of an absolute address in A1 notation or `undefined` if the sheet index is not present in the engine.\n     *\n     * @param {SimpleCellAddress} cellAddress - object representation of an absolute address\n     * @param {number} sheetId - if is not equal with address sheet index, string representation will contain sheet name\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // should return 'B2'\n     * const A1Notation = hfInstance.simpleCellAddressToString({ sheet: 0, col: 1, row: 1 }, 0);\n     * ```\n     *\n     * @category Helpers\n     */\n    simpleCellAddressToString(cellAddress, sheetId) {\n        return simpleCellAddressToString(this.sheetMapping.fetchDisplayName, cellAddress, sheetId);\n    }\n    /**\n     * Returns all addresses and ranges whose computation depends on input address or range provided.\n     *\n     * @param {SimpleCellAddress | AbsoluteCellRange} address - object representation of an absolute address or range of addresses\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\n     *\n     * hfInstance.getCellDependents({ sheet: 0, col: 0, row: 0});\n     * // should return [{ sheet: 0, col: 1, row: 0}, { sheet: 0, col: 2, row: 0}]\n     * ```\n     *\n     * @category Helpers\n     */\n    getCellDependents(address) {\n        let vertex;\n        if (address instanceof AbsoluteCellRange) {\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\n            if (vertex === undefined) {\n                return [];\n            }\n        }\n        else {\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\n            if (vertex === null) {\n                return [];\n            }\n        }\n        return this._dependencyGraph.getAdjacentNodesAddresses(vertex);\n    }\n    /**\n     * Returns all addresses and ranges necessary for computation of a given address or range.\n     *\n     * @param {SimpleCellAddress | AbsoluteCellRange} address - object representation of an absolute address or range of addresses\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray( [ ['1', '=A1', '=A1+B1'] ] );\n     *\n     * hfInstance.getCellPrecedents({ sheet: 0, col: 2, row: 0});\n     * // should return [{ sheet: 0, col: 0, row: 0}, { sheet: 0, col: 1, row: 0}]\n     * ```\n     *\n     * @category Helpers\n     */\n    getCellPrecedents(address) {\n        var _a;\n        let vertex;\n        if (address instanceof AbsoluteCellRange) {\n            vertex = this._dependencyGraph.rangeMapping.getRange(address.start, address.end);\n            if (vertex === undefined) {\n                return [];\n            }\n        }\n        else {\n            vertex = this._dependencyGraph.addressMapping.getCell(address);\n            if (vertex === null) {\n                return [];\n            }\n        }\n        return (_a = this._dependencyGraph.dependencyQueryAddresses(vertex)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Returns a unique sheet name assigned to the sheet of a given ID or `undefined` if the there is no sheet with a given ID.\n     *\n     * @param {number} sheetId - ID of the sheet, for which we want to retrieve name\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'MySheet2' as this sheet is the second one\n     * const sheetName = hfInstance.getSheetName(1);\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetName(sheetId) {\n        return this.sheetMapping.getDisplayName(sheetId);\n    }\n    /**\n     * List all sheet names.\n     * Returns an array of sheet names as strings.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return all sheets names: ['MySheet1', 'MySheet2']\n     * const sheetNames = hfInstance.getSheetNames();\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetNames() {\n        return this.sheetMapping.sheetNames();\n    }\n    /**\n     * Returns a unique sheet ID assigned to the sheet with a given name or `undefined` if the sheet does not exist.\n     *\n     * @param {string} sheetName - name of the sheet, for which we want to retrieve ID, case insensitive.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return '0' because 'MySheet1' is of ID '0'\n     * const sheetID = hfInstance.getSheetId('MySheet1');\n     * ```\n     *\n     * @category Sheets\n     */\n    getSheetId(sheetName) {\n        return this.sheetMapping.get(sheetName);\n    }\n    /**\n     * Returns `true` whether sheet with a given name exists. The methods accepts sheet name to be checked.\n     *\n     * @param {string} sheetName - name of the sheet, case insensitive.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // should return 'true' since 'MySheet1' exists\n     * const sheetExist = hfInstance.doesSheetExist('MySheet1');\n     * ```\n     *\n     * @category Sheets\n     */\n    doesSheetExist(sheetName) {\n        return this.sheetMapping.hasSheetWithName(sheetName);\n    }\n    /**\n     * Returns type of a specified cell of a given address.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(A2:A3)', '2'],\n     * ]);\n     *\n     * // should return 'FORMULA', the cell of given coordinates is of this type\n     * const cellA1Type = hfInstance.getCellType({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'VALUE', the cell of given coordinates is of this type\n     * const cellB1Type = hfInstance.getCellType({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellType(cellAddress) {\n        const vertex = this.dependencyGraph.getCell(cellAddress);\n        return getCellType(vertex);\n    }\n    /**\n     * Returns `true` if the specified cell contains a simple value.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(A2:A3)', '2'],\n     * ]);\n     *\n     * // should return 'true' since the selected cell contains a simple value\n     * const isA1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'false' since the selected cell does not contain a simple value\n     * const isB1Simple = hfInstance.doesCellHaveSimpleValue({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    doesCellHaveSimpleValue(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.VALUE;\n    }\n    /**\n     * Returns `true` if the specified cell contains a formula.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(A2:A3)', '2'],\n     * ]);\n     *\n     * // should return 'true' since the A1 cell contains a formula\n     * const A1Formula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'false' since the B1 cell does not contain a formula\n     * const B1NoFormula = hfInstance.doesCellHaveFormula({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    doesCellHaveFormula(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.FORMULA;\n    }\n    /**\n     * Returns`true` if the specified cell is empty.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *   [null, '1'],\n     * ]);\n     *\n     * // should return 'true', cell of provided coordinates is empty\n     * const isEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'false', cell of provided coordinates is not empty\n     * const isNotEmpty = hfInstance.isCellEmpty({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    isCellEmpty(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.EMPTY;\n    }\n    /**\n     * Returns `true` if a given cell is a part of a matrix.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *    ['{=TRANSPOSE(B1:B1)}'],\n     * ]);\n     *\n     * // should return 'true', cell of provided coordinates is a part of a matrix\n     * const isPartOfMatrix = hfInstance.isCellPartOfMatrix({ sheet: 0, col: 0, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    isCellPartOfMatrix(cellAddress) {\n        return this.getCellType(cellAddress) === CellType.MATRIX;\n    }\n    /**\n     * Returns type of the cell value of a given address.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['=SUM(1,2,3)', '2'],\n     * ]);\n     *\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 1, row: 0 });\n     *\n     * // should return 'NUMBER', cell value type of provided coordinates is a number\n     * const cellValue = hfInstance.getCellValueType({ sheet: 0, col: 0, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellValueType(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        const value = this.dependencyGraph.getCellValue(cellAddress);\n        return getCellValueType(value);\n    }\n    /**\n     * Returns detailed type of the cell value of a given address.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1%', '1$'],\n     * ]);\n     *\n     * // should return 'NUMBER_PERCENT', cell value type of provided coordinates is a number with a format inference percent.\n     * const cellType = hfInstance.getCellValueType({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return 'NUMBER_CURRENCY', cell value type of provided coordinates is a number with a format inference currency.\n     * const cellType = hfInstance.getCellValueType({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellValueDetailedType(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        const value = this.dependencyGraph.getCellValue(cellAddress);\n        return getCellValueDetailedType(value);\n    }\n    /**\n     * Returns auxilary format information of the cell value of a given address.\n     * The methods accepts cell coordinates as object with column, row and sheet numbers.\n     *\n     * @param {SimpleCellAddress} cellAddress - cell coordinates\n     *\n     * @throws [[EvaluationSuspendedError]] when the evaluation is suspended\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1$', '1'],\n     * ]);\n     *\n     * // should return '$', cell value type of provided coordinates is a number with a format inference currency, parsed as using '$' as currency.\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 0, row: 0 });\n     *\n     * // should return undefined, cell value type of provided coordinates is a number with no format information.\n     * const cellFormat = hfInstance.getCellValueFormat({ sheet: 0, col: 1, row: 0 });\n     * ```\n     *\n     * @category Cells\n     */\n    getCellValueFormat(cellAddress) {\n        this.ensureEvaluationIsNotSuspended();\n        const value = this.dependencyGraph.getCellValue(cellAddress);\n        return getCellValueFormat(value);\n    }\n    /**\n     * Returns the number of existing sheets.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['1', '2'],\n     * ]);\n     *\n     * // should return the number of sheets which is '1'\n     * const sheetsCount = hfInstance.countSheets();\n     * ```\n     *\n     * @category Sheets\n     */\n    countSheets() {\n        return this.sheetMapping.numberOfSheets();\n    }\n    /**\n     * Returns information whether it is possible to rename sheet.\n     * Returns `true` if the sheet with provided id exists and new name is available\n     * Returns `false` if sheet cannot be renamed\n     *\n     * @param {number} sheetId - a sheet number\n     * @param {string} newName - a name of the sheet to be given\n     *\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // returns true\n     * hfInstance.isItPossibleToRenameSheet(0, 'MySheet0');\n     * ```\n     *\n     * @category Sheets\n     */\n    isItPossibleToRenameSheet(sheetId, newName) {\n        try {\n            this._crudOperations.ensureItIsPossibleToRenameSheet(sheetId, newName);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Renames a specified sheet.\n     *\n     * @param {number} sheetId - a sheet number\n     * @param {string} newName - a name of the sheet to be given, if is the same as the old one the method does nothing\n     *\n     * @fires [[sheetRenamed]] after the sheet was renamed\n     *\n     * @throws [[NoSheetWithIdError]] when the given sheet ID does not exist\n     *\n     * @throws [[SheetNameAlreadyTakenError]] when the provided sheet name already exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *   MySheet1: [ ['1'] ],\n     *   MySheet2: [ ['10'] ],\n     * });\n     *\n     * // renames the sheet 'MySheet1'\n     * hfInstance.renameSheet(0, 'MySheet0');\n     * ```\n     *\n     * @category Sheets\n     */\n    renameSheet(sheetId, newName) {\n        const oldName = this._crudOperations.renameSheet(sheetId, newName);\n        if (oldName !== undefined) {\n            this._emitter.emit(Events.SheetRenamed, oldName, newName);\n        }\n    }\n    /**\n     * Runs multiple operations and recomputes formulas at the end.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {() => void} batchOperations\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     * @fires [[evaluationSuspended]] always\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // multiple operations in a single callback will trigger evaluation only once\n     * // and only one set of changes is returned as a combined result of all\n     * // the operations that were triggered within the callback\n     * const changes = hfInstance.batch(() => {\n     *  hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     *  hfInstance.setCellContents({ col: 4, row: 0, sheet: 0 }, [['=A1']]);\n     * });\n     * ```\n     *\n     * @category Batch\n     */\n    batch(batchOperations) {\n        this.suspendEvaluation();\n        this._crudOperations.beginUndoRedoBatchMode();\n        try {\n            batchOperations();\n        }\n        catch (e) {\n            this._crudOperations.commitUndoRedoBatchMode();\n            this.resumeEvaluation();\n            throw (e);\n        }\n        this._crudOperations.commitUndoRedoBatchMode();\n        return this.resumeEvaluation();\n    }\n    /**\n     * Suspends the dependency graph recalculation.\n     * It allows optimizing the performance.\n     * With this method, multiple CRUD operations can be done without triggering recalculation after every operation.\n     * Suspending evaluation should result in an overall faster calculation compared to recalculating after each operation separately.\n     * To resume the evaluation use [[resumeEvaluation]].\n     *\n     * @fires [[evaluationSuspended]] always\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // similar to batch() but operations are not within a callback,\n     * // one method suspends the recalculation\n     * // the second will resume calculations and return the changes\n     *\n     * // suspend the evaluation with this method\n     * hfInstance.suspendEvaluation();\n     *\n     * // perform operations\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     * hfInstance.setSheetContent('MySheet2', [['50'], ['60']]);\n     *\n     * // use resumeEvaluation to resume\n     * const changes = hfInstance.resumeEvaluation();\n     * ```\n     *\n     * @category Batch\n     */\n    suspendEvaluation() {\n        this._evaluationSuspended = true;\n        this._emitter.emit(Events.EvaluationSuspended);\n    }\n    /**\n     * Resumes the dependency graph recalculation that was suspended with [[suspendEvaluation]].\n     * It also triggers the recalculation and returns changes that are a result of all batched operations.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     * @fires [[evaluationResumed]] after the recomputation of necessary values\n     *\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  MySheet1: [ ['1'] ],\n     *  MySheet2: [ ['10'] ],\n     * });\n     *\n     * // similar to batch() but operations are not within a callback,\n     * // one method suspends the recalculation\n     * // the second will resume calculations and return the changes\n     *\n     * // first, suspend the evaluation\n     * hfInstance.suspendEvaluation();\n     *\n     * // perform operations\n     * hfInstance.setCellContents({ col: 3, row: 0, sheet: 0 }, [['=B1']]);\n     * hfInstance.setSheetContent('MySheet2', [['50'], ['60']]);\n     *\n     * // resume the evaluation\n     * const changes = hfInstance.resumeEvaluation();\n     * ```\n     *\n     * @category Batch\n     */\n    resumeEvaluation() {\n        this._evaluationSuspended = false;\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\n        this._emitter.emit(Events.EvaluationResumed, changes);\n        return changes;\n    }\n    /**\n     * Checks if the dependency graph recalculation process is suspended or not.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // suspend the evaluation\n     * hfInstance.suspendEvaluation();\n     *\n     * // between suspendEvaluation() and resumeEvaluation()\n     * // or inside batch() callback it will return 'true', otherwise 'false'\n     * const isEvaluationSuspended = hfInstance.isEvaluationSuspended();\n     *\n     * const changes = hfInstance.resumeEvaluation();\n     * ```\n     *\n     * @category Batch\n     */\n    isEvaluationSuspended() {\n        return this._evaluationSuspended;\n    }\n    /**\n     * Returns information whether it is possible to add named expression into a specific scope.\n     * Checks against particular rules to ascertain that addNamedExpression can be called.\n     * If returns `true`, doing [[addNamedExpression]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted.\n     *\n     * @param {string} expressionName - a name of the expression to be added\n     * @param {RawCellContent} expression - the expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // should return 'true' for this example,\n     * // it is possible to add named expression to global scope\n     * const isAddable = hfInstance.isItPossibleToAddNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    isItPossibleToAddNamedExpression(expressionName, expression, scope) {\n        try {\n            this._crudOperations.ensureItIsPossibleToAddNamedExpression(expressionName, expression, scope);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Adds a specified named expression.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} expressionName - a name of the expression to be added\n     * @param {RawCellContent} expression - the expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\n     *\n     * @fires [[namedExpressionAdded]] always, unless [[batch]] mode is used\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NamedExpressionNameIsAlreadyTakenError]] when the named expression name is not available.\n     * @throws [[NamedExpressionNameIsInvalidError]] when the named expression name is not valid\n     * @throws [[MatrixFormulasNotSupportedError]] when the named expression formula is a Matrix formula\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add own expression, scope limited to 'Sheet1', the method should return a list of cells which values\n     * // changed after the operation, their absolute addresses and new values\n     * // for this example:\n     * // [{\n     * //   name: 'prettyName',\n     * //   newValue: 142,\n     * // }]\n     * const changes = hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    addNamedExpression(expressionName, expression, scope, options) {\n        this._crudOperations.addNamedExpression(expressionName, expression, scope, options);\n        const changes = this.recomputeIfDependencyGraphNeedsIt();\n        this._emitter.emit(Events.NamedExpressionAdded, expressionName, changes);\n        return changes;\n    }\n    /**\n     * Gets specified named expression value.\n     * Returns a [[CellValue]] or undefined if the given named expression does not exists.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression, only 'Sheet1' considered as it is the scope\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // returns the calculated value of a passed named expression, '142' for this example\n     * const myFormula = hfInstance.getNamedExpressionValue('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    getNamedExpressionValue(expressionName, scope) {\n        this.ensureEvaluationIsNotSuspended();\n        const sheetId = this._crudOperations.scopeId(scope);\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (namedExpression) {\n            return this._serialization.getCellValue(namedExpression.address);\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Returns a normalized formula string for given named expression or `undefined` for a named expression that does not exist or does not hold a formula.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression in 'Sheet1'\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // returns a normalized formula string corresponding to a passed name from 'Sheet1',\n     * // '=Sheet1!A1+100' for this example\n     * const myFormula = hfInstance.getNamedExpressionFormula('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    getNamedExpressionFormula(expressionName, scope) {\n        const sheetId = this._crudOperations.scopeId(scope);\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (namedExpression === undefined) {\n            return undefined;\n        }\n        else {\n            return this._serialization.getCellFormula(namedExpression.address);\n        }\n    }\n    /**\n     * Returns named expression a normalized formula string for given named expression or `undefined` for a named expression that does not exist or does not hold a formula.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression in 'Sheet1'\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // returns a normalized formula string corresponding to a passed name from 'Sheet1',\n     * // '=Sheet1!$A$1+100' for this example\n     * const myFormula = hfInstance.getNamedExpression('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    getNamedExpression(expressionName, scope) {\n        const sheetId = this._crudOperations.scopeId(scope);\n        const namedExpression = this._namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (namedExpression === undefined) {\n            return undefined;\n        }\n        const expression = this._serialization.getCellFormula(namedExpression.address);\n        return {\n            name: expressionName,\n            scope: scope,\n            expression: expression,\n            options: namedExpression.options\n        };\n    }\n    /**\n     * Returns information whether it is possible to change named expression in a specific scope.\n     * Checks against particular rules to ascertain that changeNamedExpression can be called.\n     * If returns `true`, doing [[changeNamedExpression]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted.\n     *\n     * @param {string} expressionName - an expression name, case insensitive.\n     * @param {RawCellContent} newExpression - a new expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     *\n     * // should return 'true' for this example,\n     * // it is possible to change named expression\n     * const isAddable = hfInstance.isItPossibleToChangeNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    isItPossibleToChangeNamedExpression(expressionName, newExpression, scope) {\n        try {\n            this._crudOperations.ensureItIsPossibleToChangeNamedExpression(expressionName, newExpression, scope);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Changes a given named expression to a specified formula.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} expressionName - an expression name, case insensitive.\n     * @param {RawCellContent} newExpression - a new expression\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     * @param {NamedExpressionOptions?} options - additional metadata related to named expression\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     * @throws [[MatrixFormulasNotSupportedError]] when the named expression formula is a Matrix formula\n     * @throws [[NoRelativeAddressesAllowedError]] when the named expression formula contains relative references\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression, scope limited to 'Sheet1'\n     * hfInstance.addNamedExpression('prettyName', 'Sheet1', '=Sheet1!$A$1+100');\n     *\n     * // change the named expression\n     * const changes = hfInstance.changeNamedExpression('prettyName', '=Sheet1!$A$1+200');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    changeNamedExpression(expressionName, newExpression, scope, options) {\n        this._crudOperations.changeNamedExpressionExpression(expressionName, scope, newExpression, options);\n        return this.recomputeIfDependencyGraphNeedsIt();\n    }\n    /**\n     * Returns information whether it is possible to remove named expression from a specific scope.\n     * Checks against particular rules to ascertain that removeNamedExpression can be called.\n     * If returns `true`, doing [[removeNamedExpression]] operation won't throw any errors.\n     * Returns `false` if the operation might be disrupted.\n     *\n     * @param {string} expressionName - an expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100');\n     *\n     * // should return 'true' for this example,\n     * // it is possible to change named expression\n     * const isAddable = hfInstance.isItPossibleToRemoveNamedExpression('prettyName');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    isItPossibleToRemoveNamedExpression(expressionName, scope) {\n        try {\n            this._crudOperations.isItPossibleToRemoveNamedExpression(expressionName, scope);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Removes a named expression.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @param {string} expressionName - expression name, case insensitive.\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @fires [[namedExpressionRemoved]] after the expression was removed\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     *\n     * @throws [[NamedExpressionDoesNotExistError]] when the given expression does not exist.\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     * ]);\n     *\n     * // add a named expression\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!$A$1+100', 'Sheet1');\n     *\n     * // remove the named expression\n     * const changes = hfInstance.removeNamedExpression('prettyName', 'Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    removeNamedExpression(expressionName, scope) {\n        const removedNamedExpression = this._crudOperations.removeNamedExpression(expressionName, scope);\n        if (removedNamedExpression) {\n            const changes = this.recomputeIfDependencyGraphNeedsIt();\n            this._emitter.emit(Events.NamedExpressionRemoved, removedNamedExpression.displayName, changes);\n            return changes;\n        }\n        else {\n            return [];\n        }\n    }\n    /**\n     * Lists all named expressions.\n     * Returns an array of expression names defined in a scope, as strings.\n     *\n     * @param {string?} scope - scope definition, `sheetName` for local scope or `undefined` for global scope\n     *\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     *  ['50'],\n     *  ['60'],\n     * ]);\n     *\n     * // add two named expressions and one scoped\n     * hfInstance.addNamedExpression('prettyName', '=Sheet1!A1+100');\n     * hfInstance.addNamedExpression('prettyName2', '=Sheet1!A2+100');\n     * hfInstance.addNamedExpression('prettyName3', '=Sheet1!A3+100', 'Sheet1');\n     *\n     * // list the expressions, should return: ['prettyName', 'prettyName2'] for this example\n     * const listOfExpressions = hfInstance.listNamedExpressions();\n     *\n     *  // list the expressions, should return: ['prettyName3'] for this example\n     * const listOfExpressions = hfInstance.listNamedExpressions('Sheet1');\n     * ```\n     *\n     * @category Named Expressions\n     */\n    listNamedExpressions(scope) {\n        const scopeId = this._crudOperations.scopeId(scope);\n        return this._namedExpressions.getAllNamedExpressionsNamesInScope(scopeId);\n    }\n    /**\n     * Returns a normalized formula.\n     *\n     * @param {string} formulaString - a formula in a proper format - it must start with \"=\"\n     *\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e does not start with \"=\"\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromArray([\n     *  ['42'],\n     *  ['50'],\n     * ]);\n     *\n     * // normalize the formula, should return '=Sheet1!A1+10' for this example\n     * const normalizedFormula = hfInstance.normalizeFormula('=SHEET1!A1+10');\n     * ```\n     *\n     * @category Helpers\n     */\n    normalizeFormula(formulaString) {\n        const [ast, address] = this.extractTemporaryFormula(formulaString);\n        if (ast === undefined) {\n            throw new NotAFormulaError();\n        }\n        return this._unparser.unparse(ast, address);\n    }\n    /**\n     * Calculates fire-and-forget formula, returns the calculated value.\n     *\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\n     * @param {string} sheetName - a name of the sheet in context of which we evaluate formula, case insensitive.\n     *\n     * @throws [[NotAFormulaError]] when the provided string is not a valid formula, i.e does not start with \"=\"\n     * @throws [[NoSheetWithNameError]] when the given sheet name does not exists\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildFromSheets({\n     *  Sheet1: [['22']],\n     *  Sheet2: [['58']],\n     * });\n     *\n     * // returns the value of calculated formula, '32' for this example\n     * const calculatedFormula = hfInstance.calculateFormula('=A1+10', 'Sheet1');\n     * ```\n     *\n     * @category Helpers\n     */\n    calculateFormula(formulaString, sheetName) {\n        this._crudOperations.ensureSheetExists(sheetName);\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        const [ast, address, dependencies] = this.extractTemporaryFormula(formulaString, sheetId);\n        if (ast === undefined) {\n            throw new NotAFormulaError();\n        }\n        const internalCellValue = this.evaluator.runAndForget(ast, address, dependencies);\n        return this._exporter.exportValue(internalCellValue);\n    }\n    /**\n     * Validates the formula.\n     * If the provided string starts with \"=\" and is a parsable formula the method returns `true`.\n     *\n     * @param {string} formulaString -  a formula in a proper format - it must start with \"=\"\n     *\n     * @example\n     * ```js\n     * // checks if the given string is a valid formula, should return 'true' for this example\n     * const isFormula = hfInstance.validateFormula('=SUM(1,2)');\n     * ```\n     *\n     * @category Helpers\n     */\n    validateFormula(formulaString) {\n        const [ast] = this.extractTemporaryFormula(formulaString);\n        if (ast === undefined) {\n            return false;\n        }\n        if (ast.type === AstNodeType.ERROR && !ast.error) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns translated names of all functions registered in this instance of HyperFormula\n     * according to the language set in the configuration\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // return translated names of all functions, assign to a variable\n     * const allNames = hfInstance.getRegisteredFunctionNames();\n     * ```\n     *\n     * @category Custom Functions\n     */\n    getRegisteredFunctionNames() {\n        const language = HyperFormula.getLanguage(this._config.language);\n        return language.getFunctionTranslations(this._functionRegistry.getRegisteredFunctionIds());\n    }\n    /**\n     * Returns class of a plugin used by function with given id\n     *\n     * @param {string} functionId - id of a function, e.g. 'SUMIF'\n     *\n     * @example\n     * ```js\n     * // import your own plugin\n     * import { MyExamplePlugin } from './file_with_your_plugin';\n     *\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // register a plugin\n     * HyperFormula.registerFunctionPlugin(MyExamplePlugin);\n     *\n     * // get the plugin\n     * const myPlugin = hfInstance.getFunctionPlugin('EXAMPLE');\n     * ```\n     *\n     * @category Custom Functions\n     */\n    getFunctionPlugin(functionId) {\n        return this._functionRegistry.getFunctionPlugin(functionId);\n    }\n    /**\n     * Returns classes of all plugins registered in this instance of HyperFormula\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // return classes of all plugins registered, assign to a variable\n     * const allNames = hfInstance.getAllFunctionPlugins();\n     * ```\n     *\n     * @category Custom Functions\n     */\n    getAllFunctionPlugins() {\n        return this._functionRegistry.getPlugins();\n    }\n    /**\n     * Interprets number as a date + time.\n     *\n     * @param {number} val - number of days since nullDate, should be nonnegative, fractions are interpreted as hours/minutes/seconds.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // pass the number of days since nullDate\n     * // the method should return formatted date and time, for this example:\n     * // {year: 2020, month: 1, day: 15, hours: 2, minutes: 24, seconds: 0}\n     * const dateTimeFromNumber = hfInstance.numberToDateTime(43845.1);\n     *\n     * ```\n     *\n     * @category Helpers\n     */\n    numberToDateTime(val) {\n        return this._evaluator.dateHelper.numberToSimpleDateTime(val);\n    }\n    /**\n     * Interprets number as a date.\n     *\n     * @param {number} val - number of days since nullDate, should be nonnegative, fractions are ignored.\n  \n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // pass the number of days since nullDate\n     * // the method should return formatted date, for this example:\n     * // {year: 2020, month: 1, day: 15}\n     * const dateFromNumber = hfInstance.numberToDate(43845);\n     * ```\n     *\n     * @category Helpers\n     */\n    numberToDate(val) {\n        return this._evaluator.dateHelper.numberToSimpleDate(val);\n    }\n    /**\n     * Interprets number as a time (hours/minutes/seconds).\n     *\n     * @param {number} val - time in 24h units.\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // pass a number to be interpreted as a time\n     * // should return {hours: 26, minutes: 24} for this example\n     * const timeFromNumber = hfInstance.numberToTime(1.1);\n     * ```\n     *\n     * @category Helpers\n     */\n    numberToTime(val) {\n        return numberToSimpleTime(val);\n    }\n    extractTemporaryFormula(formulaString, sheetId = 1) {\n        const parsedCellContent = this._cellContentParser.parse(formulaString);\n        const exampleTemporaryFormulaAddress = { sheet: sheetId, col: 0, row: 0 };\n        if (!(parsedCellContent instanceof CellContent.Formula)) {\n            return [undefined, exampleTemporaryFormulaAddress, []];\n        }\n        const { ast, errors, dependencies } = this._parser.parse(parsedCellContent.formula, exampleTemporaryFormulaAddress);\n        if (errors.length > 0) {\n            return [undefined, exampleTemporaryFormulaAddress, []];\n        }\n        return [ast, exampleTemporaryFormulaAddress, dependencies];\n    }\n    /**\n     * A method that subscribes to an event.\n     *\n     * @param {Event} event the name of the event to subscribe to\n     * @param {Listener} listener to be called when event is emitted\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // subscribe to a 'sheetAdded', pass a simple handler\n     * hfInstance.on('sheetAdded', ( ) => { console.log('foo') });\n     *\n     * // add a sheet to trigger an event,\n     * // console should print 'foo' after each time sheet is added in this example\n     * hfInstance.addSheet('FooBar');\n     * ```\n     *\n     * @category Events\n     */\n    on(event, listener) {\n        this._emitter.on(event, listener);\n    }\n    /**\n     * A method that subscribes to an event once.\n     *\n     * @param {Event} event the name of the event to subscribe to\n     * @param {Listener} listener to be called when event is emitted\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // subscribe to a 'sheetAdded', pass a simple handler\n     * hfInstance.once('sheetAdded', ( ) => { console.log('foo') });\n     *\n     * // call addSheet twice,\n     * // console should print 'foo' only once when the sheet is added in this example\n     * hfInstance.addSheet('FooBar');\n     * hfInstance.addSheet('FooBaz');\n     * ```\n     *\n     * @category Events\n     */\n    once(event, listener) {\n        this._emitter.once(event, listener);\n    }\n    /**\n     * A method that unsubscribe from an event or all events.\n     *\n     * @param {Event} event the name of the event to subscribe to\n     * @param {Listener} listener to be called when event is emitted\n     *\n     * @example\n     * ```js\n     * const hfInstance = HyperFormula.buildEmpty();\n     *\n     * // define a simple function to be called upon emitting an event\n     * const handler = ( ) => { console.log('baz') }\n     *\n     * // subscribe to a 'sheetAdded', pass the handler\n     * hfInstance.on('sheetAdded', handler);\n     *\n     * // add a sheet to trigger an event,\n     * // console should print 'baz' each time a sheet is added\n     * hfInstance.addSheet('FooBar');\n     *\n     * // unsubscribe from a 'sheetAdded'\n     * hfInstance.off('sheetAdded', handler);\n     *\n     * // add a sheet, the console should not print anything\n     * hfInstance.addSheet('FooBaz');\n     * ```\n     *\n     * @category Events\n     */\n    off(event, listener) {\n        this._emitter.off(event, listener);\n    }\n    /**\n     * Destroys instance of HyperFormula.\n     *\n     * @example\n     * ```js\n     * // destroys the instance\n     * hfInstance.destroy();\n     * ```\n     *\n     * @category Instance\n     */\n    destroy() {\n        this.dependencyGraph.destroy();\n        this.columnSearch.destroy();\n        this.evaluator.destroy();\n        this._parser.destroy();\n        this._lazilyTransformingAstService.destroy();\n        this._stats.destroy();\n        this._crudOperations.clearClipboard();\n    }\n    /**\n     * Runs a recomputation starting from recently changed vertices.\n     *\n     * Note that this method may trigger dependency graph recalculation.\n     *\n     * @fires [[valuesUpdated]] if recalculation was triggered by this change\n     */\n    recomputeIfDependencyGraphNeedsIt() {\n        if (!this._evaluationSuspended) {\n            const changes = this._crudOperations.getAndClearContentChanges();\n            const verticesToRecomputeFrom = Array.from(this.dependencyGraph.verticesToRecompute());\n            this.dependencyGraph.clearRecentlyChangedVertices();\n            if (verticesToRecomputeFrom.length > 0) {\n                changes.addAll(this.evaluator.partialRun(verticesToRecomputeFrom));\n            }\n            const exportedChanges = changes.exportChanges(this._exporter);\n            if (!changes.isEmpty()) {\n                this._emitter.emit(Events.ValuesUpdated, exportedChanges);\n            }\n            return exportedChanges;\n        }\n        else {\n            return [];\n        }\n    }\n}\n/**\n * Version of the HyperFormula.\n *\n * @category Static Properties\n */\nHyperFormula.version = process.env.HT_VERSION;\n/**\n * Latest build date.\n *\n * @category Static Properties\n */\nHyperFormula.buildDate = process.env.HT_BUILD_DATE;\n/**\n * A release date.\n *\n * @category Static Properties\n */\nHyperFormula.releaseDate = process.env.HT_RELEASE_DATE;\n/**\n * Contains all available languages to use in registerLanguage.\n *\n * @category Static Properties\n */\nHyperFormula.languages = {};\nHyperFormula.registeredLanguages = new Map();\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from './Cell';\nimport { UnableToParseError } from './errors';\nimport { fixNegativeZero, isNumberOverflow } from './interpreter/ArithmeticHelper';\nimport { cloneNumber, CurrencyNumber, DateNumber, getRawValue, PercentNumber } from './interpreter/InterpreterValue';\nexport var CellContent;\n(function (CellContent) {\n    class Number {\n        constructor(value) {\n            this.value = value;\n            this.value = cloneNumber(this.value, fixNegativeZero(getRawValue(this.value)));\n        }\n    }\n    CellContent.Number = Number;\n    class String {\n        constructor(value) {\n            this.value = value;\n        }\n    }\n    CellContent.String = String;\n    class Boolean {\n        constructor(value) {\n            this.value = value;\n        }\n    }\n    CellContent.Boolean = Boolean;\n    class Empty {\n        static getSingletonInstance() {\n            if (!Empty.instance) {\n                Empty.instance = new Empty();\n            }\n            return Empty.instance;\n        }\n    }\n    CellContent.Empty = Empty;\n    class Formula {\n        constructor(formula) {\n            this.formula = formula;\n        }\n    }\n    CellContent.Formula = Formula;\n    class MatrixFormula {\n        constructor(formula) {\n            this.formula = formula;\n        }\n        formulaWithBraces() {\n            return '{' + this.formula + '}';\n        }\n    }\n    CellContent.MatrixFormula = MatrixFormula;\n    class Error {\n        constructor(errorType) {\n            this.value = new CellError(errorType);\n        }\n    }\n    CellContent.Error = Error;\n})(CellContent || (CellContent = {}));\n/**\n * Checks whether string looks like formula or not.\n *\n * @param text - formula\n */\nexport function isFormula(text) {\n    return text.startsWith('=');\n}\nexport function isBoolean(text) {\n    const tl = text.toLowerCase();\n    return tl === 'true' || tl === 'false';\n}\nexport function isMatrix(text) {\n    if (typeof text !== 'string') {\n        return false;\n    }\n    return (text.length > 1) && (text.startsWith('{')) && (text.endsWith('}'));\n}\nexport function isError(text, errorMapping) {\n    const upperCased = text.toUpperCase();\n    const errorRegex = /#[A-Za-z0-9\\/]+[?!]?/;\n    return errorRegex.test(upperCased) && Object.prototype.hasOwnProperty.call(errorMapping, upperCased);\n}\nexport class CellContentParser {\n    constructor(config, dateHelper, numberLiteralsHelper) {\n        this.config = config;\n        this.dateHelper = dateHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n    }\n    currencyMatcher(token) {\n        for (const currency of this.config.currencySymbol) {\n            if (token.startsWith(currency)) {\n                return [currency, token.slice(currency.length)];\n            }\n            if (token.endsWith(currency)) {\n                return [currency, token.slice(0, token.length - currency.length)];\n            }\n        }\n        return undefined;\n    }\n    parse(content) {\n        if (content === undefined || content === null) {\n            return CellContent.Empty.getSingletonInstance();\n        }\n        else if (typeof content === 'number') {\n            if (isNumberOverflow(content)) {\n                return new CellContent.Error(ErrorType.NUM);\n            }\n            else {\n                return new CellContent.Number(content);\n            }\n        }\n        else if (typeof content === 'boolean') {\n            return new CellContent.Boolean(content);\n        }\n        else if (content instanceof Date) {\n            return new CellContent.Number(new DateNumber(this.dateHelper.dateToNumber({\n                day: content.getDate(),\n                month: content.getMonth() + 1,\n                year: content.getFullYear()\n            }), 'Date()'));\n        }\n        else if (typeof content === 'string') {\n            if (isBoolean(content)) {\n                return new CellContent.Boolean(content.toLowerCase() === 'true');\n            }\n            else if (isMatrix(content)) {\n                return new CellContent.MatrixFormula(content.substr(1, content.length - 2));\n            }\n            else if (isFormula(content)) {\n                return new CellContent.Formula(content);\n            }\n            else if (isError(content, this.config.errorMapping)) {\n                return new CellContent.Error(this.config.errorMapping[content.toUpperCase()]);\n            }\n            else {\n                let trimmedContent = content.trim();\n                let mode = 0;\n                let currency;\n                if (trimmedContent.endsWith('%')) {\n                    mode = 1;\n                    trimmedContent = trimmedContent.slice(0, trimmedContent.length - 1);\n                }\n                else {\n                    const res = this.currencyMatcher(trimmedContent);\n                    if (res !== undefined) {\n                        mode = 2;\n                        [currency, trimmedContent] = res;\n                    }\n                }\n                const val = this.numberLiteralsHelper.numericStringToMaybeNumber(trimmedContent);\n                if (val !== undefined) {\n                    let parseAsNum;\n                    if (mode === 1) {\n                        parseAsNum = new PercentNumber(val / 100);\n                    }\n                    else if (mode === 2) {\n                        parseAsNum = new CurrencyNumber(val, currency);\n                    }\n                    else {\n                        parseAsNum = val;\n                    }\n                    return new CellContent.Number(parseAsNum);\n                }\n                const parsedDateNumber = this.dateHelper.dateStringToDateNumber(trimmedContent);\n                if (parsedDateNumber !== undefined) {\n                    return new CellContent.Number(parsedDateNumber);\n                }\n                else {\n                    return new CellContent.String(content.startsWith('\\'') ? content.slice(1) : content);\n                }\n            }\n        }\n        else {\n            throw new UnableToParseError(content);\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport unorm from 'unorm';\nimport { CellError, CellValueTypeOrd, ErrorType, getCellValueType } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { collatorFromConfig } from '../StringHelper';\nimport { cloneNumber, CurrencyNumber, DateNumber, DateTimeNumber, EmptyValue, getRawValue, getTypeFormatOfExtendedNumber, isExtendedNumber, NumberType, PercentNumber, TimeNumber } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nconst COMPLEX_NUMBER_SYMBOL = 'i';\nconst complexParsingRegexp = /^\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij]))\\s*(([+-])\\s*([+-]?)\\s*(([\\d\\.,]+(e[+-]?\\d+)?)\\s*([ij]?)|([ij])))?$/;\nexport class ArithmeticHelper {\n    constructor(config, dateTimeHelper, numberLiteralsHelper) {\n        this.config = config;\n        this.dateTimeHelper = dateTimeHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n        this.lt = (left, right) => {\n            return this.compare(left, right) < 0;\n        };\n        this.leq = (left, right) => {\n            return this.compare(left, right) <= 0;\n        };\n        this.gt = (left, right) => {\n            return this.compare(left, right) > 0;\n        };\n        this.geq = (left, right) => {\n            return this.compare(left, right) >= 0;\n        };\n        this.eq = (left, right) => {\n            return this.compare(left, right) === 0;\n        };\n        this.neq = (left, right) => {\n            return this.compare(left, right) !== 0;\n        };\n        this.pow = (left, right) => {\n            return Math.pow(getRawValue(left), getRawValue(right));\n        };\n        this.addWithEpsilonRaw = (left, right) => {\n            const ret = left + right;\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\n                return 0;\n            }\n            else {\n                return ret;\n            }\n        };\n        this.addWithEpsilon = (left, right) => {\n            const typeOfResult = inferExtendedNumberTypeAdditive(left, right);\n            return this.ExtendedNumberFactory(this.addWithEpsilonRaw(getRawValue(left), getRawValue(right)), typeOfResult);\n        };\n        this.unaryMinus = (arg) => {\n            return cloneNumber(arg, -getRawValue(arg));\n        };\n        this.unaryPlus = (arg) => {\n            return arg;\n        };\n        this.unaryPercent = (arg) => {\n            return new PercentNumber(getRawValue(arg) / 100);\n        };\n        this.concat = (left, right) => {\n            return left.concat(right);\n        };\n        this.nonstrictadd = (left, right) => {\n            if (left instanceof CellError) {\n                return left;\n            }\n            else if (right instanceof CellError) {\n                return right;\n            }\n            else if (typeof left === 'number') {\n                if (typeof right === 'number') {\n                    return this.addWithEpsilonRaw(left, right);\n                }\n                else {\n                    return left;\n                }\n            }\n            else if (typeof right === 'number') {\n                return right;\n            }\n            else {\n                return 0;\n            }\n        };\n        /**\n         * Subtracts two numbers\n         *\n         * Implementation of subtracting which is used in interpreter.\n         *\n         * @param left - left operand of subtraction\n         * @param right - right operand of subtraction\n         * @param eps - precision of comparison\n         */\n        this.subtract = (leftArg, rightArg) => {\n            const typeOfResult = inferExtendedNumberTypeAdditive(leftArg, rightArg);\n            const left = getRawValue(leftArg);\n            const right = getRawValue(rightArg);\n            let ret = left - right;\n            if (Math.abs(ret) < this.actualEps * Math.abs(left)) {\n                ret = 0;\n            }\n            return this.ExtendedNumberFactory(ret, typeOfResult);\n        };\n        this.divide = (leftArg, rightArg) => {\n            const left = getRawValue(leftArg);\n            const right = getRawValue(rightArg);\n            if (right === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            else {\n                const typeOfResult = inferExtendedNumberTypeMultiplicative(leftArg, rightArg);\n                return this.ExtendedNumberFactory(left / right, typeOfResult);\n            }\n        };\n        this.multiply = (left, right) => {\n            const typeOfResult = inferExtendedNumberTypeMultiplicative(left, right);\n            return this.ExtendedNumberFactory(getRawValue(left) * getRawValue(right), typeOfResult);\n        };\n        this.manyToExactComplex = (args) => {\n            const ret = [];\n            for (const arg of args) {\n                if (arg instanceof CellError) {\n                    return arg;\n                }\n                else if (isExtendedNumber(arg) || typeof arg === 'string') {\n                    const coerced = this.coerceScalarToComplex(arg);\n                    if (!(coerced instanceof CellError)) {\n                        ret.push(coerced);\n                    }\n                }\n            }\n            return ret;\n        };\n        this.coerceNumbersExactRanges = (args) => this.manyToNumbers(args, this.manyToExactNumbers);\n        this.coerceNumbersCoerceRangesDropNulls = (args) => this.manyToNumbers(args, this.manyToCoercedNumbersDropNulls);\n        this.manyToExactNumbers = (args) => {\n            const ret = [];\n            for (const arg of args) {\n                if (arg instanceof CellError) {\n                    return arg;\n                }\n                else if (isExtendedNumber(arg)) {\n                    ret.push(getRawValue(arg));\n                }\n            }\n            return ret;\n        };\n        this.manyToOnlyNumbersDropNulls = (args) => {\n            const ret = [];\n            for (const arg of args) {\n                if (arg instanceof CellError) {\n                    return arg;\n                }\n                else if (arg === EmptyValue) {\n                    continue;\n                }\n                else if (isExtendedNumber(arg)) {\n                    ret.push(getRawValue(arg));\n                }\n                else {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n                }\n            }\n            return ret;\n        };\n        this.manyToCoercedNumbersDropNulls = (args) => {\n            const ret = [];\n            for (const arg of args) {\n                if (arg instanceof CellError) {\n                    return arg;\n                }\n                if (arg === EmptyValue) {\n                    continue;\n                }\n                const coerced = this.coerceScalarToNumberOrError(arg);\n                if (isExtendedNumber(coerced)) {\n                    ret.push(getRawValue(coerced));\n                }\n            }\n            return ret;\n        };\n        this.collator = collatorFromConfig(config);\n        this.actualEps = config.smartRounding ? config.precisionEpsilon : 0;\n    }\n    eqMatcherFunction(pattern) {\n        const regexp = this.buildRegex(pattern);\n        return (cellValue) => (typeof cellValue === 'string' && regexp.test(this.normalizeString(cellValue)));\n    }\n    neqMatcherFunction(pattern) {\n        const regexp = this.buildRegex(pattern);\n        return (cellValue) => {\n            return (!(typeof cellValue === 'string') || !regexp.test(this.normalizeString(cellValue)));\n        };\n    }\n    searchString(pattern, text) {\n        var _a;\n        const regexp = this.buildRegex(pattern, false);\n        const result = regexp.exec(text);\n        return (_a = result === null || result === void 0 ? void 0 : result.index) !== null && _a !== void 0 ? _a : -1;\n    }\n    requiresRegex(pattern) {\n        if (!this.config.useRegularExpressions && !this.config.useWildcards) {\n            return !this.config.matchWholeCell;\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const c = pattern.charAt(i);\n            if (isWildcard(c) || (this.config.useRegularExpressions && needsEscape(c))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    buildRegex(pattern, matchWholeCell = true) {\n        pattern = this.normalizeString(pattern);\n        let regexpStr;\n        let useWildcards = this.config.useWildcards;\n        let useRegularExpressions = this.config.useRegularExpressions;\n        if (useRegularExpressions) {\n            try {\n                RegExp(pattern);\n            }\n            catch (e) {\n                useRegularExpressions = false;\n                useWildcards = false;\n            }\n        }\n        if (useRegularExpressions) {\n            regexpStr = escapeNoCharacters(pattern, this.config.caseSensitive);\n        }\n        else if (useWildcards) {\n            regexpStr = escapeNonWildcards(pattern, this.config.caseSensitive);\n        }\n        else {\n            regexpStr = escapeAllCharacters(pattern, this.config.caseSensitive);\n        }\n        if (this.config.matchWholeCell && matchWholeCell) {\n            return RegExp('^(' + regexpStr + ')$');\n        }\n        else {\n            return RegExp(regexpStr);\n        }\n    }\n    normalizeString(str) {\n        if (!this.config.caseSensitive) {\n            str = str.toLowerCase();\n        }\n        if (!this.config.accentSensitive) {\n            str = normalizeString(str, 'nfd').replace(/[\\u0300-\\u036f]/g, '');\n        }\n        return str;\n    }\n    compare(left, right) {\n        if (typeof left === 'string' || typeof right === 'string') {\n            const leftTmp = typeof left === 'string' ? this.dateTimeHelper.dateStringToDateNumber(left) : left;\n            const rightTmp = typeof right === 'string' ? this.dateTimeHelper.dateStringToDateNumber(right) : right;\n            if (isExtendedNumber(leftTmp) && isExtendedNumber(rightTmp)) {\n                return this.floatCmp(leftTmp, rightTmp);\n            }\n        }\n        if (left === EmptyValue) {\n            left = coerceEmptyToValue(right);\n        }\n        else if (right === EmptyValue) {\n            right = coerceEmptyToValue(left);\n        }\n        if (typeof left === 'string' && typeof right === 'string') {\n            return this.stringCmp(left, right);\n        }\n        else if (typeof left === 'boolean' && typeof right === 'boolean') {\n            return numberCmp(coerceBooleanToNumber(left), coerceBooleanToNumber(right));\n        }\n        else if (isExtendedNumber(left) && isExtendedNumber(right)) {\n            return this.floatCmp(left, right);\n        }\n        else if (left === EmptyValue && right === EmptyValue) {\n            return 0;\n        }\n        else {\n            return numberCmp(CellValueTypeOrd(getCellValueType(left)), CellValueTypeOrd(getCellValueType(right)));\n        }\n    }\n    floatCmp(leftArg, rightArg) {\n        const left = getRawValue(leftArg);\n        const right = getRawValue(rightArg);\n        const mod = (1 + this.actualEps);\n        if ((right >= 0) && (left * mod >= right) && (left <= right * mod)) {\n            return 0;\n        }\n        else if ((right <= 0) && (left * mod <= right) && (left >= right * mod)) {\n            return 0;\n        }\n        else if (left > right) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n    stringCmp(left, right) {\n        return this.collator.compare(left, right);\n    }\n    coerceScalarToNumberOrError(arg) {\n        var _a;\n        if (arg instanceof CellError) {\n            return arg;\n        }\n        return (_a = this.coerceToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.NumberCoercion);\n    }\n    coerceToMaybeNumber(arg) {\n        var _a;\n        return (_a = this.coerceNonDateScalarToMaybeNumber(arg)) !== null && _a !== void 0 ? _a : (typeof arg === 'string' ? this.dateTimeHelper.dateStringToDateNumber(arg) : undefined);\n    }\n    coerceNonDateScalarToMaybeNumber(arg) {\n        if (arg === EmptyValue) {\n            return 0;\n        }\n        else if (typeof arg === 'string') {\n            if (arg === '') {\n                return 0;\n            }\n            return this.numberLiteralsHelper.numericStringToMaybeNumber(arg.trim());\n        }\n        else if (isExtendedNumber(arg)) {\n            return arg;\n        }\n        else if (typeof arg === 'boolean') {\n            return Number(arg);\n        }\n        else {\n            return undefined;\n        }\n    }\n    coerceComplexExactRanges(args) {\n        const vals = [];\n        for (const arg of args) {\n            if (arg instanceof SimpleRangeValue) {\n                vals.push(arg);\n            }\n            else if (arg !== EmptyValue) {\n                const coerced = this.coerceScalarToComplex(arg);\n                if (coerced instanceof CellError) {\n                    return coerced;\n                }\n                else {\n                    vals.push(coerced);\n                }\n            }\n        }\n        const expandedVals = [];\n        for (const val of vals) {\n            if (val instanceof SimpleRangeValue) {\n                const arr = this.manyToExactComplex(val.valuesFromTopLeftCorner());\n                if (arr instanceof CellError) {\n                    return arr;\n                }\n                else {\n                    expandedVals.push(...arr);\n                }\n            }\n            else {\n                expandedVals.push(val);\n            }\n        }\n        return expandedVals;\n    }\n    manyToNumbers(args, rangeFn) {\n        const vals = [];\n        for (const arg of args) {\n            if (arg instanceof SimpleRangeValue) {\n                vals.push(arg);\n            }\n            else {\n                const coerced = getRawValue(this.coerceScalarToNumberOrError(arg));\n                if (coerced instanceof CellError) {\n                    return coerced;\n                }\n                else {\n                    vals.push(coerced);\n                }\n            }\n        }\n        const expandedVals = [];\n        for (const val of vals) {\n            if (val instanceof SimpleRangeValue) {\n                const arr = rangeFn(val.valuesFromTopLeftCorner());\n                if (arr instanceof CellError) {\n                    return arr;\n                }\n                else {\n                    expandedVals.push(...arr);\n                }\n            }\n            else {\n                expandedVals.push(val);\n            }\n        }\n        return expandedVals;\n    }\n    coerceScalarToComplex(arg) {\n        if (arg instanceof CellError) {\n            return arg;\n        }\n        else if (arg === EmptyValue) {\n            return [0, 0];\n        }\n        else if (isExtendedNumber(arg)) {\n            return [getRawValue(arg), 0];\n        }\n        else if (typeof arg === 'string') {\n            return this.coerceStringToComplex(arg);\n        }\n        else {\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n        }\n    }\n    coerceStringToComplex(arg) {\n        const match = complexParsingRegexp.exec(arg);\n        if (match === null) {\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n        }\n        let val1;\n        if (match[6] !== undefined) {\n            val1 = (match[1] === '-' ? [0, -1] : [0, 1]);\n        }\n        else {\n            val1 = this.parseComplexToken(match[1] + match[3], match[5]);\n        }\n        if (val1 instanceof CellError) {\n            return val1;\n        }\n        if (match[8] === undefined) {\n            return val1;\n        }\n        let val2;\n        if (match[14] !== undefined) {\n            val2 = (match[9] === '-' ? [0, -1] : [0, 1]);\n        }\n        else {\n            val2 = this.parseComplexToken(match[9] + match[11], match[13]);\n        }\n        if (val2 instanceof CellError) {\n            return val2;\n        }\n        if ((match[5] !== '') || (match[13] === '')) {\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n        }\n        if (match[8] === '+') {\n            return [val1[0] + val2[0], val1[1] + val2[1]];\n        }\n        else {\n            return [val1[0] - val2[0], val1[1] - val2[1]];\n        }\n    }\n    parseComplexToken(arg, mod) {\n        const val = getRawValue(this.coerceNonDateScalarToMaybeNumber(arg));\n        if (val === undefined) {\n            return new CellError(ErrorType.NUM, ErrorMessage.ComplexNumberExpected);\n        }\n        if (mod === '') {\n            return [val, 0];\n        }\n        else {\n            return [0, val];\n        }\n    }\n    ExtendedNumberFactory(value, typeFormat) {\n        const { type, format } = typeFormat;\n        switch (type) {\n            case NumberType.NUMBER_RAW:\n                return value;\n            case NumberType.NUMBER_CURRENCY: {\n                return new CurrencyNumber(value, format !== null && format !== void 0 ? format : this.config.currencySymbol[0]);\n            }\n            case NumberType.NUMBER_DATE:\n                return new DateNumber(value, format);\n            case NumberType.NUMBER_DATETIME:\n                return new DateTimeNumber(value, format);\n            case NumberType.NUMBER_TIME:\n                return new TimeNumber(value, format);\n            case NumberType.NUMBER_PERCENT:\n                return new PercentNumber(value, format);\n        }\n    }\n}\nexport function coerceComplexToString([re, im], symb) {\n    if (!isFinite(re) || !isFinite(im)) {\n        return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n    }\n    symb = symb !== null && symb !== void 0 ? symb : COMPLEX_NUMBER_SYMBOL;\n    if (im === 0) {\n        return `${re}`;\n    }\n    const imStr = `${im === -1 || im === 1 ? '' : Math.abs(im)}${symb}`;\n    if (re === 0) {\n        return `${im < 0 ? '-' : ''}${imStr}`;\n    }\n    return `${re}${im < 0 ? '-' : '+'}${imStr}`;\n}\nexport function coerceToRange(arg) {\n    if (arg instanceof SimpleRangeValue) {\n        return arg;\n    }\n    else {\n        return SimpleRangeValue.fromScalar(arg);\n    }\n}\nexport function coerceToRangeNumbersOrError(arg) {\n    if ((arg instanceof SimpleRangeValue && arg.hasOnlyNumbers()) || arg instanceof CellError) {\n        return arg;\n    }\n    else if (isExtendedNumber(arg)) {\n        return SimpleRangeValue.fromScalar(arg);\n    }\n    else {\n        return null;\n    }\n}\nexport function coerceBooleanToNumber(arg) {\n    return Number(arg);\n}\nexport function coerceEmptyToValue(arg) {\n    if (typeof arg === 'string') {\n        return '';\n    }\n    else if (isExtendedNumber(arg)) {\n        return 0;\n    }\n    else if (typeof arg === 'boolean') {\n        return false;\n    }\n    else {\n        return EmptyValue;\n    }\n}\n/**\n * Coerce scalar value to boolean if possible, or error if value is an error\n *\n * @param arg\n */\nexport function coerceScalarToBoolean(arg) {\n    if (arg instanceof CellError || typeof arg === 'boolean') {\n        return arg;\n    }\n    else if (arg === EmptyValue) {\n        return false;\n    }\n    else if (isExtendedNumber(arg)) {\n        return getRawValue(arg) !== 0;\n    }\n    else {\n        const argUppered = arg.toUpperCase();\n        if (argUppered === 'TRUE') {\n            return true;\n        }\n        else if (argUppered === 'FALSE') {\n            return false;\n        }\n        else if (argUppered === '') {\n            return false;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nexport function coerceScalarToString(arg) {\n    if (arg instanceof CellError || typeof arg === 'string') {\n        return arg;\n    }\n    else if (arg === EmptyValue) {\n        return '';\n    }\n    else if (isExtendedNumber(arg)) {\n        return getRawValue(arg).toString();\n    }\n    else {\n        return arg ? 'TRUE' : 'FALSE';\n    }\n}\nexport function zeroIfEmpty(arg) {\n    return arg === EmptyValue ? 0 : arg;\n}\nexport function numberCmp(leftArg, rightArg) {\n    const left = getRawValue(leftArg);\n    const right = getRawValue(rightArg);\n    if (left > right) {\n        return 1;\n    }\n    else if (left < right) {\n        return -1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function isNumberOverflow(arg) {\n    return (isNaN(arg) || arg === Infinity || arg === -Infinity);\n}\nexport function fixNegativeZero(arg) {\n    if (arg === 0) {\n        return 0;\n    }\n    else {\n        return arg;\n    }\n}\nfunction isWildcard(c) {\n    return ['*', '?'].includes(c);\n}\nconst escapedCharacters = ['{', '}', '[', ']', '(', ')', '<', '>', '=', '.', '+', '-', ',', '\\\\', '$', '^', '!'];\nfunction needsEscape(c) {\n    return escapedCharacters.includes(c);\n}\nfunction escapeNonWildcards(pattern, caseSensitive) {\n    let str = '';\n    for (let i = 0; i < pattern.length; i++) {\n        const c = pattern.charAt(i);\n        if (c === '~') {\n            if (i == pattern.length - 1) {\n                str += '~';\n                continue;\n            }\n            const d = pattern.charAt(i + 1);\n            if (isWildcard(d) || needsEscape(d)) {\n                str += '\\\\' + d;\n                i++;\n            }\n            else {\n                str += d;\n                i++;\n            }\n        }\n        else if (isWildcard(c)) {\n            str += '.' + c;\n        }\n        else if (needsEscape(c)) {\n            str += '\\\\' + c;\n        }\n        else if (caseSensitive) {\n            str += c;\n        }\n        else {\n            str += c.toLowerCase();\n        }\n    }\n    return str;\n}\nfunction escapeAllCharacters(pattern, caseSensitive) {\n    let str = '';\n    for (let i = 0; i < pattern.length; i++) {\n        const c = pattern.charAt(i);\n        if (isWildcard(c) || needsEscape(c)) {\n            str += '\\\\' + c;\n        }\n        else if (caseSensitive) {\n            str += c;\n        }\n        else {\n            str += c.toLowerCase();\n        }\n    }\n    return str;\n}\nfunction escapeNoCharacters(pattern, caseSensitive) {\n    let str = '';\n    for (let i = 0; i < pattern.length; i++) {\n        const c = pattern.charAt(i);\n        if (isWildcard(c) || needsEscape(c)) {\n            str += c;\n        }\n        else if (caseSensitive) {\n            str += c;\n        }\n        else {\n            str += c.toLowerCase();\n        }\n    }\n    return str;\n}\nfunction inferExtendedNumberTypeAdditive(leftArg, rightArg) {\n    const { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\n    const { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\n    if (leftType === NumberType.NUMBER_RAW) {\n        return { type: rightType, format: rightFormat };\n    }\n    if (rightType === NumberType.NUMBER_RAW) {\n        return { type: leftType, format: leftFormat };\n    }\n    if ((leftType === NumberType.NUMBER_DATETIME || leftType === NumberType.NUMBER_DATE)\n        && (rightType === NumberType.NUMBER_DATETIME || rightType === NumberType.NUMBER_DATE)) {\n        return { type: NumberType.NUMBER_RAW };\n    }\n    if (leftType === NumberType.NUMBER_TIME) {\n        if (rightType === NumberType.NUMBER_DATE) {\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat + ' ' + leftFormat };\n        }\n        if (rightType === NumberType.NUMBER_DATETIME) {\n            return { type: NumberType.NUMBER_DATETIME, format: rightFormat };\n        }\n    }\n    if (rightType === NumberType.NUMBER_TIME) {\n        if (leftType === NumberType.NUMBER_DATE) {\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat + ' ' + rightFormat };\n        }\n        if (leftType === NumberType.NUMBER_DATETIME) {\n            return { type: NumberType.NUMBER_DATETIME, format: leftFormat };\n        }\n    }\n    return { type: leftType, format: leftFormat };\n}\nfunction inferExtendedNumberTypeMultiplicative(leftArg, rightArg) {\n    let { type: leftType, format: leftFormat } = getTypeFormatOfExtendedNumber(leftArg);\n    let { type: rightType, format: rightFormat } = getTypeFormatOfExtendedNumber(rightArg);\n    if (leftType === NumberType.NUMBER_PERCENT) {\n        leftType = NumberType.NUMBER_RAW;\n        leftFormat = undefined;\n    }\n    if (rightType === NumberType.NUMBER_PERCENT) {\n        rightType = NumberType.NUMBER_RAW;\n        rightFormat = undefined;\n    }\n    if (leftType === NumberType.NUMBER_RAW) {\n        return { type: rightType, format: rightFormat };\n    }\n    if (rightType === NumberType.NUMBER_RAW) {\n        return { type: leftType, format: leftFormat };\n    }\n    return { type: NumberType.NUMBER_RAW };\n}\nexport function forceNormalizeString(str) {\n    return normalizeString(str.toLowerCase(), 'nfd').replace(/[\\u0300-\\u036f]/g, '');\n}\nexport function normalizeString(str, form) {\n    return typeof str.normalize === 'function'\n        ? str.normalize(form.toUpperCase()) : unorm[form](str);\n}\n","(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      Object.defineProperty(String.prototype, \"normalize\", {\n         enumerable: false,\n         configurable: true,\n         writable: true,\n         value: function normalize (/*form*/) {\n            \n            var str = \"\" + this;\n            var form = arguments[0] === undefined ? \"NFC\" : arguments[0];\n\n            if (this === null || this === undefined) {\n               throw new TypeError(\"Cannot call method on \" + Object.prototype.toString.call(this));\n            }\n\n            if (form === \"NFC\") {\n               return unorm.nfc(str);\n            } else if (form === \"NFD\") {\n               return unorm.nfd(str);\n            } else if (form === \"NFKC\") {\n               return unorm.nfkc(str);\n            } else if (form === \"NFKD\") {\n               return unorm.nfkd(str);\n            } else {\n               throw new RangeError(\"Invalid normalization form: \" + form);\n            }\n         }\n      });\n\n      unorm.shimApplied = true;\n   }\n}(this));\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport function collatorFromConfig(config) {\n    const sensitivity = config.caseSensitive ? (config.accentSensitive ? 'variant' : 'case') : (config.accentSensitive ? 'accent' : 'base');\n    const caseFirst = config.caseFirst;\n    const ignorePunctuation = config.ignorePunctuation;\n    return new Intl.Collator(config.localeLang, { sensitivity, caseFirst, ignorePunctuation });\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\nimport { ClipboardCellType } from './ClipboardOperations';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies, filterDependenciesOutOfScope } from './absolutizeDependencies';\nimport { CellContent } from './CellContentParser';\nimport { ContentChanges } from './ContentChanges';\nimport { EmptyCellVertex, FormulaCellVertex, MatrixVertex, ParsingErrorVertex, SparseStrategy, ValueCellVertex } from './DependencyGraph';\nimport { AddColumnsTransformer } from './dependencyTransformers/AddColumnsTransformer';\nimport { AddRowsTransformer } from './dependencyTransformers/AddRowsTransformer';\nimport { MoveCellsTransformer } from './dependencyTransformers/MoveCellsTransformer';\nimport { RemoveColumnsTransformer } from './dependencyTransformers/RemoveColumnsTransformer';\nimport { RemoveRowsTransformer } from './dependencyTransformers/RemoveRowsTransformer';\nimport { RemoveSheetTransformer } from './dependencyTransformers/RemoveSheetTransformer';\nimport { InvalidArgumentsError, NamedExpressionDoesNotExistError, NoRelativeAddressesAllowedError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError } from './errors';\nimport { buildMatrixVertex } from './GraphBuilder';\nimport { doesContainRelativeReferences } from './NamedExpressions';\nimport { NamedExpressionDependency } from './parser';\nimport { findBoundaries } from './Sheet';\nimport { ColumnsSpan, RowsSpan } from './Span';\nimport { StatType } from './statistics';\nimport { CleanOutOfScopeDependenciesTransformer } from './dependencyTransformers/CleanOutOfScopeDependenciesTransformer';\nexport class RemoveRowsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeRemovedIndexes(this.indexes);\n    }\n    rowsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class AddRowsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeAddedIndexes(this.indexes);\n    }\n    rowsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => RowsSpan.fromNumberOfRows(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class AddColumnsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeAddedIndexes(this.indexes);\n    }\n    columnsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class RemoveColumnsCommand {\n    constructor(sheet, indexes) {\n        this.sheet = sheet;\n        this.indexes = indexes;\n    }\n    normalizedIndexes() {\n        return normalizeRemovedIndexes(this.indexes);\n    }\n    columnsSpans() {\n        return this.normalizedIndexes().map(normalizedIndex => ColumnsSpan.fromNumberOfColumns(this.sheet, normalizedIndex[0], normalizedIndex[1]));\n    }\n}\nexport class Operations {\n    constructor(dependencyGraph, columnSearch, cellContentParser, parser, stats, lazilyTransformingAstService, namedExpressions, config) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.cellContentParser = cellContentParser;\n        this.parser = parser;\n        this.stats = stats;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.namedExpressions = namedExpressions;\n        this.config = config;\n        this.changes = ContentChanges.empty();\n        this.allocateNamedExpressionAddressSpace();\n    }\n    removeRows(cmd) {\n        const rowsRemovals = [];\n        for (const rowsToRemove of cmd.rowsSpans()) {\n            const rowsRemoval = this.doRemoveRows(rowsToRemove);\n            if (rowsRemoval) {\n                rowsRemovals.push(rowsRemoval);\n            }\n        }\n        return rowsRemovals;\n    }\n    addRows(cmd) {\n        for (const addedRows of cmd.rowsSpans()) {\n            this.doAddRows(addedRows);\n        }\n    }\n    addColumns(cmd) {\n        for (const addedColumns of cmd.columnsSpans()) {\n            this.doAddColumns(addedColumns);\n        }\n    }\n    removeColumns(cmd) {\n        const columnsRemovals = [];\n        for (const columnsToRemove of cmd.columnsSpans()) {\n            const columnsRemoval = this.doRemoveColumns(columnsToRemove);\n            if (columnsRemoval) {\n                columnsRemovals.push(columnsRemoval);\n            }\n        }\n        return columnsRemovals;\n    }\n    removeSheet(sheetName) {\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        this.dependencyGraph.removeSheet(sheetId);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new RemoveSheetTransformer(sheetId);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        this.sheetMapping.removeSheet(sheetId);\n        this.columnSearch.removeSheet(sheetId);\n        const scopedNamedExpressions = this.namedExpressions.getAllNamedExpressionsForScope(sheetId).map((namedexpression) => this.removeNamedExpression(namedexpression.normalizeExpressionName(), sheetId));\n        return { version: version, scopedNamedExpressions };\n    }\n    clearSheet(sheetId) {\n        this.dependencyGraph.clearSheet(sheetId);\n        this.columnSearch.removeSheet(sheetId);\n    }\n    addSheet(name) {\n        const sheetId = this.sheetMapping.addSheet(name);\n        const sheet = [];\n        this.dependencyGraph.addressMapping.autoAddSheet(sheetId, sheet, findBoundaries(sheet));\n        return this.sheetMapping.fetchDisplayName(sheetId);\n    }\n    renameSheet(sheetId, newName) {\n        return this.sheetMapping.renameSheet(sheetId, newName);\n    }\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\n        const rowsToAdd = RowsSpan.fromNumberOfRows(sheet, targetRow, numberOfRows);\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\n        this.doAddRows(rowsToAdd);\n        if (targetRow < startRow) {\n            startRow += numberOfRows;\n        }\n        const startAddress = simpleCellAddress(sheet, 0, startRow);\n        const targetAddress = simpleCellAddress(sheet, 0, targetRow);\n        this.moveCells(startAddress, Number.POSITIVE_INFINITY, numberOfRows, targetAddress);\n        const rowsToRemove = RowsSpan.fromNumberOfRows(sheet, startRow, numberOfRows);\n        this.doRemoveRows(rowsToRemove);\n        return this.lazilyTransformingAstService.commitCombinedMode();\n    }\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\n        const columnsToAdd = ColumnsSpan.fromNumberOfColumns(sheet, targetColumn, numberOfColumns);\n        this.lazilyTransformingAstService.beginCombinedMode(sheet);\n        this.doAddColumns(columnsToAdd);\n        if (targetColumn < startColumn) {\n            startColumn += numberOfColumns;\n        }\n        const startAddress = simpleCellAddress(sheet, startColumn, 0);\n        const targetAddress = simpleCellAddress(sheet, targetColumn, 0);\n        this.moveCells(startAddress, numberOfColumns, Number.POSITIVE_INFINITY, targetAddress);\n        const columnsToRemove = ColumnsSpan.fromNumberOfColumns(sheet, startColumn, numberOfColumns);\n        this.doRemoveColumns(columnsToRemove);\n        return this.lazilyTransformingAstService.commitCombinedMode();\n    }\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        this.ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\n        this.dependencyGraph.breakNumericMatricesInRange(sourceRange);\n        this.dependencyGraph.breakNumericMatricesInRange(targetRange);\n        const toRight = destinationLeftCorner.col - sourceLeftCorner.col;\n        const toBottom = destinationLeftCorner.row - sourceLeftCorner.row;\n        const toSheet = destinationLeftCorner.sheet;\n        const currentDataAtTarget = this.getRangeClipboardCells(targetRange);\n        const valuesToRemove = this.dependencyGraph.rawValuesFromRange(targetRange);\n        this.columnSearch.removeValues(valuesToRemove);\n        const valuesToMove = this.dependencyGraph.rawValuesFromRange(sourceRange);\n        this.columnSearch.moveValues(valuesToMove, toRight, toBottom, toSheet);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new MoveCellsTransformer(sourceRange, toRight, toBottom, toSheet);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        this.dependencyGraph.moveCells(sourceRange, toRight, toBottom, toSheet);\n        const addedGlobalNamedExpressions = this.updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        return {\n            version: version,\n            overwrittenCellsData: currentDataAtTarget,\n            addedGlobalNamedExpressions: addedGlobalNamedExpressions\n        };\n    }\n    setRowOrder(sheetId, rowMapping) {\n        const buffer = [];\n        let oldContent = [];\n        for (const [source, target] of rowMapping) {\n            if (source !== target) {\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\n                this.dependencyGraph.breakNumericMatricesInRange(rowRange);\n                const row = this.getRangeClipboardCells(rowRange);\n                oldContent = oldContent.concat(row);\n                buffer.push(row.map(([{ sheet, col }, cell]) => [{ sheet, col, row: target }, cell]));\n            }\n        }\n        buffer.forEach(row => this.restoreClipboardCells(sheetId, row.values()));\n        return oldContent;\n    }\n    setColumnOrder(sheetId, columnMapping) {\n        const buffer = [];\n        let oldContent = [];\n        for (const [source, target] of columnMapping) {\n            if (source !== target) {\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\n                this.dependencyGraph.breakNumericMatricesInRange(rowRange);\n                const column = this.getRangeClipboardCells(rowRange);\n                oldContent = oldContent.concat(column);\n                buffer.push(column.map(([{ sheet, col, row }, cell]) => [{ sheet, col: target, row }, cell]));\n            }\n        }\n        buffer.forEach(column => this.restoreClipboardCells(sheetId, column.values()));\n        return oldContent;\n    }\n    addNamedExpression(expressionName, expression, sheetId, options) {\n        this.storeNamedExpressionInCell(this.namedExpressions.lookupNextAddress(expressionName, sheetId), expression);\n        const namedExpression = this.namedExpressions.addNamedExpression(expressionName, sheetId, options);\n        this.adjustNamedExpressionEdges(namedExpression, expressionName, sheetId);\n    }\n    restoreNamedExpression(namedExpression, content, sheetId) {\n        const expressionName = namedExpression.displayName;\n        this.restoreCell(namedExpression.address, content);\n        const restoredNamedExpression = this.namedExpressions.restoreNamedExpression(namedExpression, sheetId);\n        this.adjustNamedExpressionEdges(restoredNamedExpression, expressionName, sheetId);\n    }\n    changeNamedExpressionExpression(expressionName, newExpression, sheetId, options) {\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (!namedExpression) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n        const oldNamedExpression = namedExpression.copy();\n        namedExpression.options = options;\n        const content = this.getClipboardCell(namedExpression.address);\n        this.storeNamedExpressionInCell(namedExpression.address, newExpression);\n        return [oldNamedExpression, content];\n    }\n    removeNamedExpression(expressionName, sheetId) {\n        const namedExpression = this.namedExpressions.namedExpressionForScope(expressionName, sheetId);\n        if (!namedExpression) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n        this.namedExpressions.remove(namedExpression.displayName, sheetId);\n        const content = this.getClipboardCell(namedExpression.address);\n        if (sheetId !== undefined) {\n            const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\n            this.dependencyGraph.exchangeNode(namedExpression.address, globalNamedExpression.address);\n        }\n        else {\n            this.dependencyGraph.setCellEmpty(namedExpression.address);\n        }\n        return [\n            namedExpression,\n            content\n        ];\n    }\n    ensureItIsPossibleToMoveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        if (invalidSimpleCellAddress(sourceLeftCorner) ||\n            !((isPositiveInteger(width) && isPositiveInteger(height)) || isRowOrColumnRange(sourceLeftCorner, width, height)) ||\n            invalidSimpleCellAddress(destinationLeftCorner) ||\n            !this.sheetMapping.hasSheetWithId(sourceLeftCorner.sheet) ||\n            !this.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\n            throw new InvalidArgumentsError('a valid range of cells to move.');\n        }\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceLeftCorner, width, height);\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\n        if (targetRange.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n            throw new SheetSizeLimitExceededError();\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(sourceRange)) {\n            throw new SourceLocationHasMatrixError();\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(targetRange)) {\n            throw new TargetLocationHasMatrixError();\n        }\n    }\n    restoreClipboardCells(sourceSheetId, cells) {\n        const addedNamedExpressions = [];\n        for (const [address, clipboardCell] of cells) {\n            this.restoreCell(address, clipboardCell);\n            if (clipboardCell.type === ClipboardCellType.FORMULA) {\n                const { dependencies } = this.parser.fetchCachedResult(clipboardCell.hash);\n                addedNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceSheetId, address, dependencies));\n            }\n        }\n        return addedNamedExpressions;\n    }\n    restoreCell(address, clipboardCell) {\n        switch (clipboardCell.type) {\n            case ClipboardCellType.VALUE: {\n                this.setValueToCell(clipboardCell, address);\n                break;\n            }\n            case ClipboardCellType.FORMULA: {\n                this.setFormulaToCellFromCache(clipboardCell.hash, address);\n                break;\n            }\n            case ClipboardCellType.EMPTY: {\n                this.setCellEmpty(address);\n                break;\n            }\n            case ClipboardCellType.PARSING_ERROR: {\n                this.setParsingErrorToCell(clipboardCell.rawInput, clipboardCell.errors, address);\n                break;\n            }\n        }\n    }\n    /**\n     * Removes multiple rows from sheet. </br>\n     * Does nothing if rows are outside of effective sheet size.\n     *\n     * @param sheet - sheet id from which rows will be removed\n     * @param rowStart - number of the first row to be deleted\n     * @param rowEnd - number of the last row to be deleted\n     * */\n    doRemoveRows(rowsToRemove) {\n        if (this.rowEffectivelyNotInSheet(rowsToRemove.rowStart, rowsToRemove.sheet)) {\n            return;\n        }\n        const removedCells = [];\n        for (const [address] of this.dependencyGraph.entriesFromRowsSpan(rowsToRemove)) {\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\n        }\n        this.dependencyGraph.removeRows(rowsToRemove);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new RemoveRowsTransformer(rowsToRemove);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        return { version: version, removedCells, rowFrom: rowsToRemove.rowStart, rowCount: rowsToRemove.numberOfRows };\n    }\n    /**\n     * Removes multiple columns from sheet. </br>\n     * Does nothing if columns are outside of effective sheet size.\n     *\n     * @param sheet - sheet id from which columns will be removed\n     * @param columnStart - number of the first column to be deleted\n     * @param columnEnd - number of the last row to be deleted\n     */\n    doRemoveColumns(columnsToRemove) {\n        if (this.columnEffectivelyNotInSheet(columnsToRemove.columnStart, columnsToRemove.sheet)) {\n            return;\n        }\n        const removedCells = [];\n        for (const [address] of this.dependencyGraph.entriesFromColumnsSpan(columnsToRemove)) {\n            removedCells.push({ address, cellType: this.getClipboardCell(address) });\n        }\n        this.dependencyGraph.removeColumns(columnsToRemove);\n        this.columnSearch.removeColumns(columnsToRemove);\n        let version;\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new RemoveColumnsTransformer(columnsToRemove);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            version = this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n        return {\n            version: version,\n            removedCells,\n            columnFrom: columnsToRemove.columnStart,\n            columnCount: columnsToRemove.numberOfColumns\n        };\n    }\n    /**\n     * Add multiple rows to sheet. </br>\n     * Does nothing if rows are outside of effective sheet size.\n     *\n     * @param sheet - sheet id in which rows will be added\n     * @param row - row number above which the rows will be added\n     * @param numberOfRowsToAdd - number of rows to add\n     */\n    doAddRows(addedRows) {\n        if (this.rowEffectivelyNotInSheet(addedRows.rowStart, addedRows.sheet)) {\n            return;\n        }\n        this.dependencyGraph.addRows(addedRows);\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new AddRowsTransformer(addedRows);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n    }\n    /**\n     * Add multiple columns to sheet </br>\n     * Does nothing if columns are outside of effective sheet size\n     *\n     * @param sheet - sheet id in which columns will be added\n     * @param column - column number above which the columns will be added\n     * @param numberOfColumns - number of columns to add\n     */\n    doAddColumns(addedColumns) {\n        if (this.columnEffectivelyNotInSheet(addedColumns.columnStart, addedColumns.sheet)) {\n            return;\n        }\n        this.dependencyGraph.addColumns(addedColumns);\n        this.columnSearch.addColumns(addedColumns);\n        this.stats.measure(StatType.TRANSFORM_ASTS, () => {\n            const transformation = new AddColumnsTransformer(addedColumns);\n            transformation.performEagerTransformations(this.dependencyGraph, this.parser);\n            this.lazilyTransformingAstService.addTransformation(transformation);\n        });\n    }\n    getClipboardCell(address) {\n        const vertex = this.dependencyGraph.getCell(address);\n        if (vertex === null || vertex instanceof EmptyCellVertex) {\n            return { type: ClipboardCellType.EMPTY };\n        }\n        else if (vertex instanceof ValueCellVertex) {\n            return Object.assign({ type: ClipboardCellType.VALUE }, vertex.getValues());\n        }\n        else if (vertex instanceof MatrixVertex) {\n            return { type: ClipboardCellType.VALUE, parsedValue: vertex.getMatrixCellValue(address), rawValue: vertex.getMatrixCellRawValue(address) };\n        }\n        else if (vertex instanceof FormulaCellVertex) {\n            return {\n                type: ClipboardCellType.FORMULA,\n                hash: this.parser.computeHashFromAst(vertex.getFormula(this.lazilyTransformingAstService))\n            };\n        }\n        else if (vertex instanceof ParsingErrorVertex) {\n            return { type: ClipboardCellType.PARSING_ERROR, rawInput: vertex.rawInput, errors: vertex.errors };\n        }\n        throw Error('Trying to copy unsupported type');\n    }\n    getSheetClipboardCells(sheet) {\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n        const arr = new Array(sheetHeight);\n        for (let i = 0; i < sheetHeight; i++) {\n            arr[i] = new Array(sheetWidth);\n            for (let j = 0; j < sheetWidth; j++) {\n                const address = simpleCellAddress(sheet, j, i);\n                arr[i][j] = this.getClipboardCell(address);\n            }\n        }\n        return arr;\n    }\n    getRangeClipboardCells(range) {\n        const result = [];\n        for (const address of range.addresses(this.dependencyGraph)) {\n            result.push([address, this.getClipboardCell(address)]);\n        }\n        return result;\n    }\n    setCellContent(address, newCellContent) {\n        const parsedCellContent = this.cellContentParser.parse(newCellContent);\n        let vertex = this.dependencyGraph.getCell(address);\n        if (vertex instanceof MatrixVertex && !vertex.isFormula() && !(parsedCellContent instanceof CellContent.Number)) {\n            this.dependencyGraph.breakNumericMatrix(vertex);\n            vertex = this.dependencyGraph.getCell(address);\n        }\n        if (vertex instanceof MatrixVertex && !vertex.isFormula() && parsedCellContent instanceof CellContent.Number) {\n            const newValue = parsedCellContent.value;\n            const oldValue = this.dependencyGraph.getCellValue(address);\n            this.dependencyGraph.graph.markNodeAsSpecialRecentlyChanged(vertex);\n            vertex.setMatrixCellValue(address, getRawValue(newValue));\n            this.columnSearch.change(getRawValue(oldValue), getRawValue(newValue), address);\n            this.changes.addChange(newValue, address);\n        }\n        else if (!(vertex instanceof MatrixVertex) && parsedCellContent instanceof CellContent.MatrixFormula) {\n            const { ast, errors, dependencies } = this.parser.parse(parsedCellContent.formula, address);\n            if (errors.length > 0) {\n                this.dependencyGraph.setParsingErrorToCell(address, new ParsingErrorVertex(errors, parsedCellContent.formulaWithBraces()));\n            }\n            else {\n                const newVertex = buildMatrixVertex(ast, address);\n                if (newVertex instanceof ValueCellVertex) {\n                    throw Error('What if new matrix vertex is not properly constructed?');\n                }\n                this.dependencyGraph.addNewMatrixVertex(newVertex);\n                this.dependencyGraph.processCellDependencies(absolutizeDependencies(dependencies, address), newVertex);\n                this.dependencyGraph.graph.markNodeAsSpecialRecentlyChanged(newVertex);\n            }\n        }\n        else if (!(vertex instanceof MatrixVertex)) {\n            if (parsedCellContent instanceof CellContent.Formula) {\n                const { ast, errors, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.parse(parsedCellContent.formula, address);\n                if (errors.length > 0) {\n                    this.dependencyGraph.setParsingErrorToCell(address, new ParsingErrorVertex(errors, parsedCellContent.formula));\n                }\n                else {\n                    this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), hasVolatileFunction, hasStructuralChangeFunction);\n                }\n            }\n            else if (parsedCellContent instanceof CellContent.Empty) {\n                this.setCellEmpty(address);\n            }\n            else if (parsedCellContent instanceof CellContent.MatrixFormula) {\n                throw new Error('Cant happen');\n            }\n            else {\n                this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: newCellContent }, address);\n            }\n        }\n        else {\n            throw new Error('Illegal operation');\n        }\n    }\n    setSheetContent(sheetId, newSheetContent) {\n        this.clearSheet(sheetId);\n        for (let i = 0; i < newSheetContent.length; i++) {\n            for (let j = 0; j < newSheetContent[i].length; j++) {\n                const address = simpleCellAddress(sheetId, j, i);\n                this.setCellContent(address, newSheetContent[i][j]);\n            }\n        }\n    }\n    setValueToCell(value, address) {\n        const oldValue = this.dependencyGraph.getCellValue(address);\n        this.dependencyGraph.setValueToCell(address, value);\n        this.columnSearch.change(getRawValue(oldValue), getRawValue(value.parsedValue), address);\n        this.changes.addChange(value.parsedValue, address);\n    }\n    setCellEmpty(address) {\n        const oldValue = this.dependencyGraph.getCellValue(address);\n        this.columnSearch.remove(getRawValue(oldValue), address);\n        this.changes.addChange(EmptyValue, address);\n        this.dependencyGraph.setCellEmpty(address);\n    }\n    setFormulaToCellFromCache(formulaHash, address) {\n        const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = this.parser.fetchCachedResult(formulaHash);\n        const absoluteDependencies = absolutizeDependencies(dependencies, address);\n        const [cleanedAst] = new CleanOutOfScopeDependenciesTransformer(address.sheet).transformSingleAst(ast, address);\n        this.parser.rememberNewAst(cleanedAst);\n        const cleanedDependencies = filterDependenciesOutOfScope(absoluteDependencies);\n        this.dependencyGraph.setFormulaToCell(address, cleanedAst, cleanedDependencies, hasVolatileFunction, hasStructuralChangeFunction);\n    }\n    setParsingErrorToCell(rawInput, errors, address) {\n        this.dependencyGraph.setParsingErrorToCell(address, new ParsingErrorVertex(errors, rawInput));\n    }\n    /**\n     * Returns true if row number is outside of given sheet.\n     *\n     * @param row - row number\n     * @param sheet - sheet id number\n     */\n    rowEffectivelyNotInSheet(row, sheet) {\n        const height = this.dependencyGraph.addressMapping.getHeight(sheet);\n        return row >= height;\n    }\n    getAndClearContentChanges() {\n        const changes = this.changes;\n        this.changes = ContentChanges.empty();\n        return changes;\n    }\n    forceApplyPostponedTransformations() {\n        this.dependencyGraph.forceApplyPostponedTransformations();\n    }\n    get sheetMapping() {\n        return this.dependencyGraph.sheetMapping;\n    }\n    /**\n     * Returns true if row number is outside of given sheet.\n     *\n     * @param column - row number\n     * @param sheet - sheet id number\n     */\n    columnEffectivelyNotInSheet(column, sheet) {\n        const width = this.dependencyGraph.addressMapping.getWidth(sheet);\n        return column >= width;\n    }\n    adjustNamedExpressionEdges(namedExpression, expressionName, sheetId) {\n        if (sheetId === undefined) {\n            return;\n        }\n        const localVertex = this.dependencyGraph.fetchCellOrCreateEmpty(namedExpression.address);\n        const globalNamedExpression = this.namedExpressions.workbookNamedExpressionOrPlaceholder(expressionName);\n        const globalVertex = this.dependencyGraph.fetchCellOrCreateEmpty(globalNamedExpression.address);\n        for (const adjacentNode of this.dependencyGraph.graph.adjacentNodes(globalVertex)) {\n            if (adjacentNode instanceof FormulaCellVertex && adjacentNode.cellAddress.sheet === sheetId) {\n                const ast = adjacentNode.getFormula(this.lazilyTransformingAstService);\n                const formulaAddress = adjacentNode.getAddress(this.lazilyTransformingAstService);\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\n                for (const dependency of absolutizeDependencies(dependencies, formulaAddress)) {\n                    if (dependency instanceof NamedExpressionDependency && dependency.name.toLowerCase() === namedExpression.displayName.toLowerCase()) {\n                        this.dependencyGraph.graph.removeEdge(globalVertex, adjacentNode);\n                        this.dependencyGraph.graph.addEdge(localVertex, adjacentNode);\n                    }\n                }\n            }\n        }\n    }\n    storeNamedExpressionInCell(address, expression) {\n        const parsedCellContent = this.cellContentParser.parse(expression);\n        if (parsedCellContent instanceof CellContent.MatrixFormula) {\n            throw new Error('Matrix formulas are not supported');\n        }\n        else if (parsedCellContent instanceof CellContent.Formula) {\n            const parsingResult = this.parser.parse(parsedCellContent.formula, simpleCellAddress(-1, 0, 0));\n            if (doesContainRelativeReferences(parsingResult.ast)) {\n                throw new NoRelativeAddressesAllowedError();\n            }\n            const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\n            this.dependencyGraph.setFormulaToCell(address, ast, absolutizeDependencies(dependencies, address), hasVolatileFunction, hasStructuralChangeFunction);\n        }\n        else {\n            if (parsedCellContent instanceof CellContent.Empty) {\n                this.setCellEmpty(address);\n            }\n            else {\n                this.setValueToCell({ parsedValue: parsedCellContent.value, rawValue: expression }, address);\n            }\n        }\n    }\n    updateNamedExpressionsForMovedCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        if (sourceLeftCorner.sheet === destinationLeftCorner.sheet) {\n            return [];\n        }\n        const addedGlobalNamedExpressions = [];\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, width, height);\n        for (const formulaAddress of targetRange.addresses(this.dependencyGraph)) {\n            const vertex = this.addressMapping.fetchCell(formulaAddress);\n            if (vertex instanceof FormulaCellVertex && formulaAddress.sheet !== sourceLeftCorner.sheet) {\n                const ast = vertex.getFormula(this.lazilyTransformingAstService);\n                const { dependencies } = this.parser.fetchCachedResultForAst(ast);\n                addedGlobalNamedExpressions.push(...this.updateNamedExpressionsForTargetAddress(sourceLeftCorner.sheet, formulaAddress, dependencies));\n            }\n        }\n        return addedGlobalNamedExpressions;\n    }\n    updateNamedExpressionsForTargetAddress(sourceSheet, targetAddress, dependencies) {\n        if (sourceSheet === targetAddress.sheet) {\n            return [];\n        }\n        const addedGlobalNamedExpressions = [];\n        const vertex = this.addressMapping.fetchCell(targetAddress);\n        for (const namedExpressionDependency of absolutizeDependencies(dependencies, targetAddress)) {\n            if (!(namedExpressionDependency instanceof NamedExpressionDependency)) {\n                continue;\n            }\n            const expressionName = namedExpressionDependency.name;\n            const sourceVertex = this.dependencyGraph.fetchNamedExpressionVertex(expressionName, sourceSheet);\n            const namedExpressionInTargetScope = this.namedExpressions.isExpressionInScope(expressionName, targetAddress.sheet);\n            const targetScopeExpressionVertex = namedExpressionInTargetScope\n                ? this.dependencyGraph.fetchNamedExpressionVertex(expressionName, targetAddress.sheet)\n                : this.copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedGlobalNamedExpressions);\n            if (targetScopeExpressionVertex !== sourceVertex) {\n                this.dependencyGraph.graph.softRemoveEdge(sourceVertex, vertex);\n                this.dependencyGraph.graph.addEdge(targetScopeExpressionVertex, vertex);\n            }\n        }\n        return addedGlobalNamedExpressions;\n    }\n    allocateNamedExpressionAddressSpace() {\n        this.dependencyGraph.addressMapping.addSheet(-1, new SparseStrategy(0, 0));\n    }\n    copyOrFetchGlobalNamedExpressionVertex(expressionName, sourceVertex, addedNamedExpressions) {\n        let expression = this.namedExpressions.namedExpressionForScope(expressionName);\n        if (expression === undefined) {\n            expression = this.namedExpressions.addNamedExpression(expressionName);\n            addedNamedExpressions.push(expression.normalizeExpressionName());\n            if (sourceVertex instanceof FormulaCellVertex) {\n                const parsingResult = this.parser.fetchCachedResultForAst(sourceVertex.getFormula(this.lazilyTransformingAstService));\n                const { ast, hasVolatileFunction, hasStructuralChangeFunction, dependencies } = parsingResult;\n                this.dependencyGraph.setFormulaToCell(expression.address, ast, absolutizeDependencies(dependencies, expression.address), hasVolatileFunction, hasStructuralChangeFunction);\n            }\n            else if (sourceVertex instanceof EmptyCellVertex) {\n                this.setCellEmpty(expression.address);\n            }\n            else if (sourceVertex instanceof ValueCellVertex) {\n                this.setValueToCell(sourceVertex.getValues(), expression.address);\n            }\n        }\n        return this.dependencyGraph.fetchCellOrCreateEmpty(expression.address);\n    }\n    get addressMapping() {\n        return this.dependencyGraph.addressMapping;\n    }\n}\nexport function normalizeRemovedIndexes(indexes) {\n    if (indexes.length <= 1) {\n        return indexes;\n    }\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\n    /* merge overlapping and adjacent indexes */\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\n        const previous = acc[acc.length - 1];\n        const lastIndex = previous[0] + previous[1];\n        if (startIndex <= lastIndex) {\n            previous[1] += Math.max(0, amount - (lastIndex - startIndex));\n        }\n        else {\n            acc.push([startIndex, amount]);\n        }\n        return acc;\n    }, [sorted[0]]);\n    /* shift further indexes */\n    let shift = 0;\n    for (let i = 0; i < merged.length; ++i) {\n        merged[i][0] -= shift;\n        shift += merged[i][1];\n    }\n    return merged;\n}\nexport function normalizeAddedIndexes(indexes) {\n    if (indexes.length <= 1) {\n        return indexes;\n    }\n    const sorted = [...indexes].sort(([a], [b]) => a - b);\n    /* merge indexes with same start */\n    const merged = sorted.reduce((acc, [startIndex, amount]) => {\n        const previous = acc[acc.length - 1];\n        if (startIndex === previous[0]) {\n            previous[1] = Math.max(previous[1], amount);\n        }\n        else {\n            acc.push([startIndex, amount]);\n        }\n        return acc;\n    }, [sorted[0]]);\n    /* shift further indexes */\n    let shift = 0;\n    for (let i = 0; i < merged.length; ++i) {\n        merged[i][0] += shift;\n        shift += merged[i][1];\n    }\n    return merged;\n}\nfunction isPositiveInteger(x) {\n    return Number.isInteger(x) && x > 0;\n}\nfunction isRowOrColumnRange(leftCorner, width, height) {\n    return (leftCorner.row === 0 && isPositiveInteger(width) && height === Number.POSITIVE_INFINITY)\n        || (leftCorner.col === 0 && isPositiveInteger(height) && width === Number.POSITIVE_INFINITY);\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { InvalidArgumentsError, SheetSizeLimitExceededError } from './errors';\nvar ClipboardOperationType;\n(function (ClipboardOperationType) {\n    ClipboardOperationType[ClipboardOperationType[\"COPY\"] = 0] = \"COPY\";\n    ClipboardOperationType[ClipboardOperationType[\"CUT\"] = 1] = \"CUT\";\n})(ClipboardOperationType || (ClipboardOperationType = {}));\nexport var ClipboardCellType;\n(function (ClipboardCellType) {\n    ClipboardCellType[ClipboardCellType[\"VALUE\"] = 0] = \"VALUE\";\n    ClipboardCellType[ClipboardCellType[\"EMPTY\"] = 1] = \"EMPTY\";\n    ClipboardCellType[ClipboardCellType[\"FORMULA\"] = 2] = \"FORMULA\";\n    ClipboardCellType[ClipboardCellType[\"PARSING_ERROR\"] = 3] = \"PARSING_ERROR\";\n})(ClipboardCellType || (ClipboardCellType = {}));\nclass Clipboard {\n    constructor(sourceLeftCorner, width, height, type, content) {\n        this.sourceLeftCorner = sourceLeftCorner;\n        this.width = width;\n        this.height = height;\n        this.type = type;\n        this.content = content;\n    }\n    *getContent(leftCorner) {\n        if (this.content === undefined) {\n            return;\n        }\n        else {\n            for (let y = 0; y < this.height; ++y) {\n                for (let x = 0; x < this.width; ++x) {\n                    yield [simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y), this.content[y][x]];\n                }\n            }\n        }\n    }\n}\nexport class ClipboardOperations {\n    constructor(dependencyGraph, operations, parser, lazilyTransformingAstService, config) {\n        this.dependencyGraph = dependencyGraph;\n        this.operations = operations;\n        this.parser = parser;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.config = config;\n    }\n    cut(leftCorner, width, height) {\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.CUT);\n    }\n    copy(leftCorner, width, height) {\n        const content = [];\n        for (let y = 0; y < height; ++y) {\n            content[y] = [];\n            for (let x = 0; x < width; ++x) {\n                const clipboardCell = this.operations.getClipboardCell(simpleCellAddress(leftCorner.sheet, leftCorner.col + x, leftCorner.row + y));\n                content[y].push(clipboardCell);\n            }\n        }\n        this.clipboard = new Clipboard(leftCorner, width, height, ClipboardOperationType.COPY, content);\n    }\n    abortCut() {\n        if (this.clipboard && this.clipboard.type === ClipboardOperationType.CUT) {\n            this.clear();\n        }\n    }\n    clear() {\n        this.clipboard = undefined;\n    }\n    ensureItIsPossibleToCopyPaste(destinationLeftCorner) {\n        if (this.clipboard === undefined) {\n            return;\n        }\n        if (invalidSimpleCellAddress(destinationLeftCorner) ||\n            !this.dependencyGraph.sheetMapping.hasSheetWithId(destinationLeftCorner.sheet)) {\n            throw new InvalidArgumentsError('a valid target address.');\n        }\n        const targetRange = AbsoluteCellRange.spanFrom(destinationLeftCorner, this.clipboard.width, this.clipboard.height);\n        if (targetRange.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n            throw new SheetSizeLimitExceededError();\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(targetRange)) {\n            throw new Error('It is not possible to paste onto matrix');\n        }\n    }\n    isCutClipboard() {\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.CUT;\n    }\n    isCopyClipboard() {\n        return this.clipboard !== undefined && this.clipboard.type === ClipboardOperationType.COPY;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport class ContentChanges {\n    constructor() {\n        this.changes = [];\n    }\n    static empty() {\n        return new ContentChanges();\n    }\n    addAll(other) {\n        this.changes.push(...other.changes);\n        return this;\n    }\n    addMatrixChange(newValue, address) {\n        for (const [matrixValue, cellAddress] of newValue.generateValues(address)) {\n            this.addSingleCellValue(matrixValue, cellAddress);\n        }\n    }\n    addChange(newValue, address) {\n        this.addSingleCellValue(newValue, address);\n    }\n    add(...change) {\n        this.changes.push(...change);\n    }\n    exportChanges(exporter) {\n        const ret = [];\n        this.changes.forEach((e, i) => {\n            ret[i] = exporter.exportChange(this.changes[i]);\n        });\n        return ret;\n    }\n    getChanges() {\n        return this.changes;\n    }\n    isEmpty() {\n        return this.changes === [];\n    }\n    addSingleCellValue(value, address) {\n        this.add({\n            sheet: address.sheet,\n            col: address.col,\n            row: address.row,\n            value,\n        });\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class AddColumnsTransformer extends Transformer {\n    constructor(columnsSpan) {\n        super();\n        this.columnsSpan = columnsSpan;\n    }\n    get sheet() {\n        return this.columnsSpan.sheet;\n    }\n    isIrreversible() {\n        return false;\n    }\n    transformRowRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4 and 5\n        if ((absoluteDependencySheet !== this.columnsSpan.sheet)\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\n            return false;\n        }\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n        // Case 3\n        if ((absoluteDependencySheet === this.columnsSpan.sheet)\n            && (formulaAddress.sheet !== this.columnsSpan.sheet)) {\n            if (this.columnsSpan.columnStart <= absolutizedDependencyAddress.col) {\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n            }\n            else {\n                return false;\n            }\n        }\n        // Case 2\n        if ((formulaAddress.sheet === this.columnsSpan.sheet)\n            && (absoluteDependencySheet !== this.columnsSpan.sheet)) {\n            if (dependencyAddress.isColumnAbsolute()) {\n                return false;\n            }\n            if (formulaAddress.col < this.columnsSpan.columnStart) {\n                return false;\n            }\n            return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n        }\n        // Case 1\n        if (dependencyAddress.isColumnAbsolute()) {\n            if (dependencyAddress.col < this.columnsSpan.columnStart) { // Case Aa\n                return false;\n            }\n            else { // Case Ab\n                return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n            }\n        }\n        else {\n            const absolutizedDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n            if (absolutizedDependencyAddress.col < this.columnsSpan.columnStart) {\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Raa\n                    return false;\n                }\n                else { // Case Rab\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n                }\n            }\n            else {\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // Case Rba\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n                }\n                else { // Case Rbb\n                    return false;\n                }\n            }\n        }\n    }\n    fixNodeAddress(address) {\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\n            return Object.assign(Object.assign({}, address), { col: address.col + this.columnsSpan.numberOfColumns });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            return ErrorType.REF;\n        }\n        else if (newStart || newEnd) {\n            return [newStart || start, newEnd || end];\n        }\n        else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../Cell';\nimport { AstNodeType, buildCellErrorAst, CellAddress, } from '../parser';\nexport class Transformer {\n    performEagerTransformations(graph, parser) {\n        for (const node of graph.matrixFormulaNodes()) {\n            const [newAst, newAddress] = this.transformSingleAst(node.getFormula(), node.getAddress());\n            const cachedAst = parser.rememberNewAst(newAst);\n            node.setFormula(cachedAst);\n            node.setAddress(newAddress);\n        }\n    }\n    transformSingleAst(ast, address) {\n        const newAst = this.transformAst(ast, address);\n        const newAddress = this.fixNodeAddress(address);\n        return [newAst, newAddress];\n    }\n    transformAst(ast, address) {\n        switch (ast.type) {\n            case AstNodeType.CELL_REFERENCE: {\n                return this.transformCellReferenceAst(ast, address);\n            }\n            case AstNodeType.CELL_RANGE: {\n                return this.transformCellRangeAst(ast, address);\n            }\n            case AstNodeType.COLUMN_RANGE: {\n                return this.transformColumnRangeAst(ast, address);\n            }\n            case AstNodeType.ROW_RANGE: {\n                return this.transformRowRangeAst(ast, address);\n            }\n            case AstNodeType.EMPTY:\n            case AstNodeType.ERROR:\n            case AstNodeType.NUMBER:\n            case AstNodeType.NAMED_EXPRESSION:\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\n            case AstNodeType.STRING: {\n                return ast;\n            }\n            case AstNodeType.PERCENT_OP:\n            case AstNodeType.MINUS_UNARY_OP:\n            case AstNodeType.PLUS_UNARY_OP: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, value: this.transformAst(ast.value, address) });\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, procedureName: ast.procedureName, args: ast.args.map((arg) => this.transformAst(arg, address)) });\n            }\n            case AstNodeType.PARENTHESIS: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, expression: this.transformAst(ast.expression, address) });\n            }\n            default: {\n                return Object.assign(Object.assign({}, ast), { type: ast.type, left: this.transformAst(ast.left, address), right: this.transformAst(ast.right, address) });\n            }\n        }\n    }\n    transformCellReferenceAst(ast, formulaAddress) {\n        const newCellAddress = this.transformCellAddress(ast.reference, formulaAddress);\n        if (newCellAddress instanceof CellAddress) {\n            return Object.assign(Object.assign({}, ast), { reference: newCellAddress });\n        }\n        else if (newCellAddress === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n    transformCellRangeAst(ast, formulaAddress) {\n        const newRange = this.transformCellRange(ast.start, ast.end, formulaAddress);\n        if (Array.isArray(newRange)) {\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\n        }\n        else if (newRange === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n    transformColumnRangeAst(ast, formulaAddress) {\n        const newRange = this.transformColumnRange(ast.start, ast.end, formulaAddress);\n        if (Array.isArray(newRange)) {\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\n        }\n        else if (newRange === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n    transformRowRangeAst(ast, formulaAddress) {\n        const newRange = this.transformRowRange(ast.start, ast.end, formulaAddress);\n        if (Array.isArray(newRange)) {\n            return Object.assign(Object.assign({}, ast), { start: newRange[0], end: newRange[1] });\n        }\n        else if (newRange === ErrorType.REF) {\n            return buildCellErrorAst(new CellError(ErrorType.REF));\n        }\n        else {\n            return ast;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class AddRowsTransformer extends Transformer {\n    constructor(rowsSpan) {\n        super();\n        this.rowsSpan = rowsSpan;\n    }\n    get sheet() {\n        return this.rowsSpan.sheet;\n    }\n    isIrreversible() {\n        return false;\n    }\n    transformColumnRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4 and 5\n        if ((absoluteDependencySheet !== this.rowsSpan.sheet)\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\n            return false;\n        }\n        const absolutizedDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n        // Case 3\n        if ((absoluteDependencySheet === this.rowsSpan.sheet)\n            && (formulaAddress.sheet !== this.rowsSpan.sheet)) {\n            if (this.rowsSpan.rowStart <= absolutizedDependencyAddress.row) {\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n            }\n            else {\n                return false;\n            }\n        }\n        // Case 2\n        if ((formulaAddress.sheet === this.rowsSpan.sheet)\n            && (absoluteDependencySheet !== this.rowsSpan.sheet)) {\n            if (dependencyAddress.isRowAbsolute()) {\n                return false;\n            }\n            if (formulaAddress.row < this.rowsSpan.rowStart) {\n                return false;\n            }\n            return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n        }\n        // Case 1\n        if (dependencyAddress.isRowAbsolute()) {\n            if (dependencyAddress.row < this.rowsSpan.rowStart) { // Case Aa\n                return false;\n            }\n            else { // Case Ab\n                return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n            }\n        }\n        else {\n            if (absolutizedDependencyAddress.row < this.rowsSpan.rowStart) {\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Raa\n                    return false;\n                }\n                else { // Case Rab\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n                }\n            }\n            else {\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // Case Rba\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n                }\n                else { // Case Rbb\n                    return false;\n                }\n            }\n        }\n    }\n    fixNodeAddress(address) {\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n            return Object.assign(Object.assign({}, address), { row: address.row + this.rowsSpan.numberOfRows });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            return ErrorType.REF;\n        }\n        else if (newStart || newEnd) {\n            return [newStart || start, newEnd || end];\n        }\n        else {\n            return false;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { Transformer } from './Transformer';\nimport { CellAddress } from '../parser';\nimport { simpleCellAddress } from '../Cell';\nimport { RowAddress } from '../parser/RowAddress';\nexport class MoveCellsTransformer extends Transformer {\n    constructor(sourceRange, toRight, toBottom, toSheet) {\n        super();\n        this.sourceRange = sourceRange;\n        this.toRight = toRight;\n        this.toBottom = toBottom;\n        this.toSheet = toSheet;\n        this.dependentFormulaTransformer = new DependentFormulaTransformer(sourceRange, toRight, toBottom, toSheet);\n    }\n    isIrreversible() {\n        return true;\n    }\n    get sheet() {\n        return this.sourceRange.sheet;\n    }\n    transformSingleAst(ast, address) {\n        if (this.sourceRange.addressInRange(address)) {\n            const newAst = this.transformAst(ast, address);\n            return [newAst, this.fixNodeAddress(address)];\n        }\n        else {\n            return this.dependentFormulaTransformer.transformSingleAst(ast, address);\n        }\n    }\n    fixNodeAddress(address) {\n        return simpleCellAddress(this.toSheet, address.col + this.toRight, address.row + this.toBottom);\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        return this.transformAddress(dependencyAddress, formulaAddress);\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformAddress(dependencyAddress, formulaAddress) {\n        const sourceRange = this.sourceRange;\n        if (dependencyAddress instanceof CellAddress) {\n            const absoluteDependencyAddress = dependencyAddress.toSimpleCellAddress(formulaAddress);\n            if (sourceRange.addressInRange(absoluteDependencyAddress)) { // If dependency is internal, move only absolute dimensions\n                return dependencyAddress.shiftAbsoluteDimensions(this.toRight, this.toBottom);\n            }\n        }\n        return dependencyAddress.shiftRelativeDimensions(-this.toRight, -this.toBottom);\n    }\n    transformRange(start, end, formulaAddress) {\n        const sourceRange = this.sourceRange;\n        if (start instanceof CellAddress && end instanceof CellAddress) {\n            const absoluteStart = start.toSimpleCellAddress(formulaAddress);\n            const absoluteEnd = end.toSimpleCellAddress(formulaAddress);\n            if (sourceRange.addressInRange(absoluteStart) && sourceRange.addressInRange(absoluteEnd)) {\n                return [\n                    start.shiftAbsoluteDimensions(this.toRight, this.toBottom),\n                    end.shiftAbsoluteDimensions(this.toRight, this.toBottom)\n                ];\n            }\n        }\n        return [\n            start.shiftRelativeDimensions(-this.toRight, -this.toBottom),\n            end.shiftRelativeDimensions(-this.toRight, -this.toBottom)\n        ];\n    }\n}\nclass DependentFormulaTransformer extends Transformer {\n    constructor(sourceRange, toRight, toBottom, toSheet) {\n        super();\n        this.sourceRange = sourceRange;\n        this.toRight = toRight;\n        this.toBottom = toBottom;\n        this.toSheet = toSheet;\n    }\n    get sheet() {\n        return this.sourceRange.sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    fixNodeAddress(address) {\n        return address;\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        if (this.shouldMove(dependencyAddress, formulaAddress)) {\n            return dependencyAddress.moved(this.toSheet, this.toRight, this.toBottom);\n        }\n        return false;\n    }\n    shouldMove(dependencyAddress, formulaAddress) {\n        if (dependencyAddress instanceof CellAddress) {\n            return this.sourceRange.addressInRange(dependencyAddress.toSimpleCellAddress(formulaAddress));\n        }\n        else if (dependencyAddress instanceof RowAddress) {\n            return this.sourceRange.rowInRange(dependencyAddress.toSimpleRowAddress(formulaAddress)) && !this.sourceRange.isFinite();\n        }\n        else {\n            return this.sourceRange.columnInRange(dependencyAddress.toSimpleColumnAddress(formulaAddress)) && !this.sourceRange.isFinite();\n        }\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRange(start, end, formulaAddress) {\n        const newStart = this.transformCellAddress(start, formulaAddress);\n        const newEnd = this.transformCellAddress(end, formulaAddress);\n        if (newStart && newEnd) {\n            return [newStart, newEnd];\n        }\n        return false;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class RemoveColumnsTransformer extends Transformer {\n    constructor(columnsSpan) {\n        super();\n        this.columnsSpan = columnsSpan;\n    }\n    isIrreversible() {\n        return true;\n    }\n    get sheet() {\n        return this.columnsSpan.sheet;\n    }\n    transformRowRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\n            return false;\n        }\n        // Case 3 -- removed column in same sheet where dependency is but formula in different\n        if (this.columnsSpan.sheet !== formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\n            const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n            if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) { // 3.ARa\n                return false;\n            }\n            else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) { // 3.ARb\n                return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n            }\n        }\n        // Case 2 -- removed column in same sheet where formula but dependency in different sheet\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet !== absoluteDependencySheet) {\n            if (dependencyAddress.isColumnAbsolute()) { // 2.A\n                return false;\n            }\n            else {\n                if (formulaAddress.col < this.columnsSpan.columnStart) { // 2.Ra\n                    return false;\n                }\n                else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 2.Rb\n                    return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n                }\n            }\n        }\n        // Case 1 -- same sheet\n        if (this.columnsSpan.sheet === formulaAddress.sheet && this.columnsSpan.sheet === absoluteDependencySheet) {\n            if (dependencyAddress.isColumnAbsolute()) {\n                if (dependencyAddress.col < this.columnsSpan.columnStart) { // 1.Aa\n                    return false;\n                }\n                else if (dependencyAddress.col > this.columnsSpan.columnEnd) { // 1.Ab\n                    return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n                }\n            }\n            else {\n                const absoluteDependencyAddress = dependencyAddress.toSimpleColumnAddress(formulaAddress);\n                if (absoluteDependencyAddress.col < this.columnsSpan.columnStart) {\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Raa\n                        return false;\n                    }\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rab\n                        return dependencyAddress.shiftedByColumns(this.columnsSpan.numberOfColumns);\n                    }\n                }\n                else if (absoluteDependencyAddress.col > this.columnsSpan.columnEnd) {\n                    if (formulaAddress.col < this.columnsSpan.columnStart) { // 1.Rba\n                        return dependencyAddress.shiftedByColumns(-this.columnsSpan.numberOfColumns);\n                    }\n                    else if (formulaAddress.col > this.columnsSpan.columnEnd) { // 1.Rbb\n                        return false;\n                    }\n                }\n            }\n        }\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\n        return ErrorType.REF;\n    }\n    fixNodeAddress(address) {\n        if (this.columnsSpan.sheet === address.sheet && this.columnsSpan.columnStart <= address.col) {\n            return Object.assign(Object.assign({}, address), { col: address.col - this.columnsSpan.numberOfColumns });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const startSheet = absoluteSheetReference(start, formulaAddress);\n        let actualStart = start;\n        let actualEnd = end;\n        if (this.columnsSpan.sheet === startSheet) {\n            const startSCA = start.toSimpleColumnAddress(formulaAddress);\n            const endSCA = end.toSimpleColumnAddress(formulaAddress);\n            if (this.columnsSpan.columnStart <= startSCA.col && this.columnsSpan.columnEnd >= endSCA.col) {\n                return ErrorType.REF;\n            }\n            if (startSCA.col >= this.columnsSpan.columnStart && startSCA.col <= this.columnsSpan.columnEnd) {\n                actualStart = start.shiftedByColumns(this.columnsSpan.columnEnd - startSCA.col + 1);\n            }\n            if (endSCA.col >= this.columnsSpan.columnStart && endSCA.col <= this.columnsSpan.columnEnd) {\n                actualEnd = end.shiftedByColumns(-(endSCA.col - this.columnsSpan.columnStart + 1));\n            }\n        }\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\n        if (newStart === false && newEnd === false) {\n            return [actualStart, actualEnd];\n        }\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            throw Error('Cannot happen');\n        }\n        else {\n            return [newStart || actualStart, newEnd || actualEnd];\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absoluteSheetReference, ErrorType } from '../Cell';\nimport { Transformer } from './Transformer';\nexport class RemoveRowsTransformer extends Transformer {\n    constructor(rowsSpan) {\n        super();\n        this.rowsSpan = rowsSpan;\n    }\n    get sheet() {\n        return this.rowsSpan.sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    transformColumnRangeAst(ast, _formulaAddress) {\n        return ast;\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        const absoluteDependencySheet = absoluteSheetReference(dependencyAddress, formulaAddress);\n        // Case 4\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n            return false;\n        }\n        // Case 3 -- removed row in same sheet where dependency is but formula in different\n        if (this.rowsSpan.sheet !== formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n            const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n            if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) { // 3.ARa\n                return false;\n            }\n            else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) { // 3.ARb\n                return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n            }\n        }\n        // Case 2 -- removed row in same sheet where formula but dependency in different sheet\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet !== absoluteDependencySheet) {\n            if (dependencyAddress.isRowAbsolute()) { // 2.A\n                return false;\n            }\n            else {\n                if (formulaAddress.row < this.rowsSpan.rowStart) { // 2.Ra\n                    return false;\n                }\n                else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 2.Rb\n                    return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n                }\n            }\n        }\n        // Case 1 -- same sheet\n        if (this.rowsSpan.sheet === formulaAddress.sheet && this.rowsSpan.sheet === absoluteDependencySheet) {\n            if (dependencyAddress.isRowAbsolute()) {\n                if (dependencyAddress.row < this.rowsSpan.rowStart) { // 1.Aa\n                    return false;\n                }\n                else if (dependencyAddress.row > this.rowsSpan.rowEnd) { // 1.Ab\n                    return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n                }\n            }\n            else {\n                const absoluteDependencyAddress = dependencyAddress.toSimpleRowAddress(formulaAddress);\n                if (absoluteDependencyAddress.row < this.rowsSpan.rowStart) {\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Raa\n                        return false;\n                    }\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rab\n                        return dependencyAddress.shiftedByRows(this.rowsSpan.numberOfRows);\n                    }\n                }\n                else if (absoluteDependencyAddress.row > this.rowsSpan.rowEnd) {\n                    if (formulaAddress.row < this.rowsSpan.rowStart) { // 1.Rba\n                        return dependencyAddress.shiftedByRows(-this.rowsSpan.numberOfRows);\n                    }\n                    else if (formulaAddress.row > this.rowsSpan.rowEnd) { // 1.Rbb\n                        return false;\n                    }\n                }\n            }\n        }\n        // 1.Ac, 1.Rca, 1.Rcb, 3.Ac, 3.Rca, 3.Rcb\n        return ErrorType.REF;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return this.transformRange(start, end, formulaAddress);\n    }\n    transformColumnRange(_start, _end, _formulaAddress) {\n        throw Error('Not implemented');\n    }\n    fixNodeAddress(address) {\n        if (this.rowsSpan.sheet === address.sheet && this.rowsSpan.rowStart <= address.row) {\n            return Object.assign(Object.assign({}, address), { row: address.row - this.rowsSpan.numberOfRows });\n        }\n        else {\n            return address;\n        }\n    }\n    transformRange(start, end, formulaAddress) {\n        const startSheet = absoluteSheetReference(start, formulaAddress);\n        let actualStart = start;\n        let actualEnd = end;\n        if (this.rowsSpan.sheet === startSheet) {\n            const startSCA = start.toSimpleRowAddress(formulaAddress);\n            const endSCA = end.toSimpleRowAddress(formulaAddress);\n            if (this.rowsSpan.rowStart <= startSCA.row && this.rowsSpan.rowEnd >= endSCA.row) {\n                return ErrorType.REF;\n            }\n            if (startSCA.row >= this.rowsSpan.rowStart && startSCA.row <= this.rowsSpan.rowEnd) {\n                actualStart = start.shiftedByRows(this.rowsSpan.rowEnd - startSCA.row + 1);\n            }\n            if (endSCA.row >= this.rowsSpan.rowStart && endSCA.row <= this.rowsSpan.rowEnd) {\n                actualEnd = end.shiftedByRows(-(endSCA.row - this.rowsSpan.rowStart + 1));\n            }\n        }\n        const newStart = this.transformCellAddress(actualStart, formulaAddress);\n        const newEnd = this.transformCellAddress(actualEnd, formulaAddress);\n        if (newStart === false && newEnd === false) {\n            return [actualStart, actualEnd];\n        }\n        else if (newStart === ErrorType.REF || newEnd === ErrorType.REF) {\n            throw Error('Cannot happen');\n        }\n        else {\n            return [newStart || actualStart, newEnd || actualEnd];\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { Transformer } from './Transformer';\nimport { ErrorType } from '../Cell';\nexport class RemoveSheetTransformer extends Transformer {\n    constructor(sheet) {\n        super();\n        this.sheet = sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    performEagerTransformations(graph, _parser) {\n        for (const node of graph.matrixFormulaNodes()) {\n            const [newAst] = this.transformSingleAst(node.getFormula(), node.getAddress());\n            node.setFormula(newAst);\n        }\n    }\n    fixNodeAddress(address) {\n        return address;\n    }\n    transformCellAddress(dependencyAddress, _formulaAddress) {\n        return this.transformAddress(dependencyAddress);\n    }\n    transformCellRange(start, _end, _formulaAddress) {\n        return this.transformAddress(start);\n    }\n    transformColumnRange(start, _end, _formulaAddress) {\n        return this.transformAddress(start);\n    }\n    transformRowRange(start, _end, _formulaAddress) {\n        return this.transformAddress(start);\n    }\n    transformAddress(address) {\n        if (address.sheet === this.sheet) {\n            return ErrorType.REF;\n        }\n        return false;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { getRawValue } from './interpreter/InterpreterValue';\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex, ValueCellVertex } from './DependencyGraph';\nimport { GraphBuilderMatrixHeuristic } from './GraphBuilderMatrixHeuristic';\nimport { checkMatrixSize } from './Matrix';\nimport { StatType } from './statistics';\n/**\n * Service building the graph and mappings.\n */\nexport class GraphBuilder {\n    /**\n     * Configures the building service.\n     *\n     * @param graph - graph instance in which we want to add vertices and edges\n     * @param addressMapping - mapping from addresses to vertices\n     * @param rangeMapping - mapping from ranges to range vertices\n     * @param stats - dependency tracking building performance\n     * @param config - configuration of the sheet\n     */\n    constructor(dependencyGraph, columnSearch, parser, cellContentParser, config, stats) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.parser = parser;\n        this.cellContentParser = cellContentParser;\n        this.config = config;\n        this.stats = stats;\n        if (this.config.matrixDetection) {\n            this.buildStrategy = new MatrixDetectionStrategy(this.dependencyGraph, this.columnSearch, this.parser, this.stats, config.matrixDetectionThreshold, this.cellContentParser);\n        }\n        else {\n            this.buildStrategy = new SimpleStrategy(this.dependencyGraph, this.columnSearch, this.parser, this.stats, this.cellContentParser);\n        }\n    }\n    /**\n     * Builds graph.\n     *\n     * @param sheet - two-dimensional array representation of sheet\n     */\n    buildGraph(sheets) {\n        const dependencies = this.buildStrategy.run(sheets);\n        this.processDependencies(dependencies);\n    }\n    processDependencies(dependencies) {\n        dependencies.forEach((cellDependencies, endVertex) => {\n            this.dependencyGraph.processCellDependencies(cellDependencies, endVertex);\n        });\n    }\n}\nexport class SimpleStrategy {\n    constructor(dependencyGraph, columnIndex, parser, stats, cellContentParser) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnIndex = columnIndex;\n        this.parser = parser;\n        this.stats = stats;\n        this.cellContentParser = cellContentParser;\n    }\n    run(sheets) {\n        const dependencies = new Map();\n        for (const sheetName in sheets) {\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\n            const sheet = sheets[sheetName];\n            for (let i = 0; i < sheet.length; ++i) {\n                const row = sheet[i];\n                for (let j = 0; j < row.length; ++j) {\n                    const cellContent = row[j];\n                    const address = simpleCellAddress(sheetId, j, i);\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\n                    if (parsedCellContent instanceof CellContent.MatrixFormula) {\n                        if (this.dependencyGraph.existsVertex(address)) {\n                            continue;\n                        }\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formulaWithBraces());\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = buildMatrixVertex(parseResult.ast, address);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addMatrixVertex(address, vertex);\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Formula) {\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addVertex(address, vertex);\n                            if (parseResult.hasVolatileFunction) {\n                                this.dependencyGraph.markAsVolatile(vertex);\n                            }\n                            if (parseResult.hasStructuralChangeFunction) {\n                                this.dependencyGraph.markAsDependentOnStructureChange(vertex);\n                            }\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Empty) {\n                        /* we don't care about empty cells here */\n                    }\n                    else {\n                        const vertex = new ValueCellVertex(parsedCellContent.value, cellContent);\n                        this.columnIndex.add(getRawValue(parsedCellContent.value), address);\n                        this.dependencyGraph.addVertex(address, vertex);\n                    }\n                }\n            }\n        }\n        return dependencies;\n    }\n}\nexport class MatrixDetectionStrategy {\n    constructor(dependencyGraph, columnSearch, parser, stats, threshold, cellContentParser) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.parser = parser;\n        this.stats = stats;\n        this.threshold = threshold;\n        this.cellContentParser = cellContentParser;\n    }\n    run(sheets) {\n        const dependencies = new Map();\n        const matrixHeuristic = new GraphBuilderMatrixHeuristic(this.dependencyGraph, this.columnSearch, this.threshold, this.cellContentParser);\n        for (const sheetName in sheets) {\n            const sheetId = this.dependencyGraph.getSheetId(sheetName);\n            const sheet = sheets[sheetName];\n            matrixHeuristic.addSheet(sheetId, {\n                width: this.dependencyGraph.getSheetWidth(sheetId),\n                height: this.dependencyGraph.getSheetHeight(sheetId),\n            });\n            for (let i = 0; i < sheet.length; ++i) {\n                const row = sheet[i];\n                for (let j = 0; j < row.length; ++j) {\n                    const cellContent = row[j];\n                    const address = simpleCellAddress(sheetId, j, i);\n                    const parsedCellContent = this.cellContentParser.parse(cellContent);\n                    if (parsedCellContent instanceof CellContent.MatrixFormula) {\n                        if (this.dependencyGraph.existsVertex(address)) {\n                            continue;\n                        }\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formulaWithBraces());\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = buildMatrixVertex(parseResult.ast, address);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addMatrixVertex(address, vertex);\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Formula) {\n                        const parseResult = this.stats.measure(StatType.PARSER, () => this.parser.parse(parsedCellContent.formula, address));\n                        if (parseResult.errors.length > 0) {\n                            const vertex = new ParsingErrorVertex(parseResult.errors, parsedCellContent.formula);\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                        else {\n                            const vertex = new FormulaCellVertex(parseResult.ast, address, 0);\n                            dependencies.set(vertex, absolutizeDependencies(parseResult.dependencies, address));\n                            this.dependencyGraph.addVertex(address, vertex);\n                        }\n                    }\n                    else if (parsedCellContent instanceof CellContent.Empty) {\n                        /* we don't care about empty cells here */\n                    }\n                    else if (parsedCellContent instanceof CellContent.Number) {\n                        matrixHeuristic.add(address);\n                    }\n                    else {\n                        const vertex = new ValueCellVertex(parsedCellContent.value, cellContent);\n                        this.columnSearch.add(parsedCellContent.value, address);\n                        this.dependencyGraph.addVertex(address, vertex);\n                    }\n                }\n            }\n        }\n        this.stats.start(StatType.MATRIX_DETECTION);\n        const notMatrices = matrixHeuristic.run(sheets);\n        for (let i = notMatrices.length - 1; i >= 0; --i) {\n            const elem = notMatrices[i];\n            elem.cells.reverse();\n            for (const address of elem.cells) {\n                const value = sheets[this.dependencyGraph.getSheetName(address.sheet)][address.row][address.col];\n                const vertex = new ValueCellVertex(Number(value), value);\n                this.columnSearch.add(Number(value), address);\n                this.dependencyGraph.addVertex(address, vertex);\n            }\n        }\n        this.stats.end(StatType.MATRIX_DETECTION);\n        return dependencies;\n    }\n}\nexport function buildMatrixVertex(ast, formulaAddress) {\n    const size = checkMatrixSize(ast, formulaAddress);\n    if (size instanceof CellError) {\n        return new ValueCellVertex(size, undefined);\n    }\n    return new MatrixVertex(formulaAddress, size.width, size.height, ast);\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { simpleCellAddress } from './Cell';\nimport { CellContent } from './CellContentParser';\nimport { MatrixVertex } from './DependencyGraph';\nimport { Matrix, MatrixSize } from './Matrix';\nexport class Array2d {\n    constructor(size) {\n        this._size = size;\n        this.array = new Array(size.height);\n        for (let y = 0; y < size.height; ++y) {\n            this.array[y] = new Array(size.width);\n        }\n    }\n    static fromArray(input) {\n        const size = new MatrixSize(input[0].length, input.length);\n        const array = new Array2d(size);\n        for (let i = 0; i < size.height; ++i) {\n            for (let j = 0; j < size.width; ++j) {\n                array.set(j, i, input[i][j]);\n            }\n        }\n        return array;\n    }\n    set(x, y, value) {\n        this.array[y][x] = value;\n    }\n    get(x, y) {\n        const row = this.array[y];\n        if (!row) {\n            return null;\n        }\n        return row[x] || null;\n    }\n    size() {\n        return this._size;\n    }\n}\nexport class GraphBuilderMatrixHeuristic {\n    constructor(dependencyGraph, columnSearch, threshold, cellContentParser) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.threshold = threshold;\n        this.cellContentParser = cellContentParser;\n        this.mapping = new Map();\n    }\n    addSheet(id, size) {\n        this.mapping.set(id, new Array2d(size));\n    }\n    add(cellAddress) {\n        if (!this.mapping.has(cellAddress.sheet)) {\n            throw Error(`Sheet with id: ${cellAddress.sheet} does not exists`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.mapping.get(cellAddress.sheet).set(cellAddress.col, cellAddress.row, true);\n    }\n    run(sheets) {\n        const notMatrices = [];\n        const scanResult = this.findMatrices();\n        scanResult.forEach((elem) => {\n            if (!elem.isMatrix || elem.range.size() < this.threshold) {\n                notMatrices.push(elem);\n                return;\n            }\n            const possibleMatrix = elem.range;\n            const matrixVertex = MatrixVertex.fromRange(possibleMatrix);\n            const sheet = sheets[this.dependencyGraph.getSheetName(possibleMatrix.start.sheet)];\n            const matrix = this.matrixFromPlainValues(possibleMatrix, sheet);\n            matrixVertex.setCellValue(matrix);\n            this.dependencyGraph.addMatrixVertex(matrixVertex.getAddress(), matrixVertex);\n            this.columnSearch.add(matrix, matrixVertex.getAddress());\n        });\n        this.mapping.clear();\n        return notMatrices;\n    }\n    matrixFromPlainValues(range, sheet) {\n        const values = new Array(range.height());\n        for (let i = 0; i < range.height(); ++i) {\n            values[i] = new Array(range.width());\n        }\n        for (const address of range.addresses(this.dependencyGraph)) {\n            const cellContent = sheet[address.row][address.col];\n            const parsedCellContent = this.cellContentParser.parse(cellContent);\n            if (parsedCellContent instanceof CellContent.Number) {\n                values[address.row - range.start.row][address.col - range.start.col] = parsedCellContent.value;\n            }\n            else {\n                throw new Error('Range contains not numeric values');\n            }\n        }\n        return new Matrix(values);\n    }\n    findMatrices() {\n        const result = [];\n        this.mapping.forEach((m, sheet) => {\n            for (const possibleMatrix of findMatrices(sheet, m)) {\n                result.push(possibleMatrix);\n            }\n        });\n        return result;\n    }\n}\nexport function findMatrices(sheet, input) {\n    const size = input.size();\n    const result = new Map();\n    const colours = new Array2d(size);\n    let colour = 0;\n    for (let y = size.height - 1; y >= 0; --y) {\n        for (let x = size.width - 1; x >= 0; --x) {\n            const value = input.get(x, y);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [right, rightColour] = [input.get(x + 1, y), colours.get(x + 1, y)];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [bottom, bottomColour] = [input.get(x, y + 1), colours.get(x, y + 1)];\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const [diag, diagColour] = [input.get(x + 1, y + 1), colours.get(x + 1, y + 1)];\n            if (!value) {\n                colours.set(x, y, 0);\n                if (rightColour === bottomColour) {\n                    // 0 1\n                    // 1 *\n                    if (result.has(rightColour)) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        result.get(rightColour).isMatrix = false;\n                    }\n                }\n            }\n            else if (value !== right && rightColour === bottomColour) {\n                // 1 2\n                // 2 *\n                colours.set(x, y, ++colour);\n                result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                if (result.has(rightColour)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    result.get(rightColour).isMatrix = false;\n                }\n            }\n            else if (value !== diag) {\n                if (right === value && right === bottom) {\n                    // 1 1\n                    // 1 0\n                    if (result.has(rightColour)) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        result.get(rightColour).isMatrix = false;\n                    }\n                    if (result.has(bottomColour)) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        result.get(bottomColour).isMatrix = false;\n                    }\n                    colours.set(x, y, ++colour);\n                    result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                }\n                else if (right !== value && bottom === value) {\n                    // 1 0\n                    // 1 0\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    if (result.has(bottomColour) && result.get(bottomColour).isMatrix) {\n                        colours.set(x, y, bottomColour);\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        const old = result.get(bottomColour);\n                        old.cells.push(simpleCellAddress(sheet, x, y));\n                        result.set(bottomColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n                    }\n                    else {\n                        colours.set(x, y, ++colour);\n                        result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                    }\n                }\n                else if (right === value && bottom !== value) {\n                    // 1 1\n                    // 0 0\n                    colours.set(x, y, rightColour);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    const old = result.get(rightColour);\n                    old.cells.push(simpleCellAddress(sheet, x, y));\n                    result.set(rightColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n                }\n                else {\n                    colours.set(x, y, ++colour);\n                    result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n                }\n            }\n            else if (value === diag && diagColour === rightColour && diagColour === bottomColour) {\n                // 1 1\n                // 1 1\n                colours.set(x, y, rightColour);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const old = result.get(rightColour);\n                old.cells.push(simpleCellAddress(sheet, x, y));\n                result.set(rightColour, possibleMatrix(old.range.withStart(simpleCellAddress(sheet, x, y)), true, old.cells));\n            }\n            else if (value === diag) {\n                colours.set(x, y, ++colour);\n                result.set(colour, possibleMatrix(AbsoluteCellRange.fromCoordinates(sheet, x, y, x, y), true, [simpleCellAddress(sheet, x, y)]));\n            }\n        }\n    }\n    return result.values();\n}\nfunction possibleMatrix(range, isMatrix, cells) {\n    return {\n        isMatrix,\n        range,\n        cells,\n    };\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { AstNodeType } from './parser';\nexport class InternalNamedExpression {\n    constructor(displayName, address, added, options) {\n        this.displayName = displayName;\n        this.address = address;\n        this.added = added;\n        this.options = options;\n    }\n    normalizeExpressionName() {\n        return this.displayName.toLowerCase();\n    }\n    copy() {\n        return new InternalNamedExpression(this.displayName, this.address, this.added, this.options);\n    }\n}\nclass WorkbookStore {\n    constructor() {\n        this.mapping = new Map();\n    }\n    has(expressionName) {\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\n    }\n    isNameAvailable(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        const namedExpression = this.mapping.get(normalizedExpressionName);\n        return !(namedExpression && namedExpression.added);\n    }\n    add(namedExpression) {\n        this.mapping.set(namedExpression.normalizeExpressionName(), namedExpression);\n    }\n    get(expressionName) {\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\n    }\n    getExisting(expressionName) {\n        const namedExpression = this.mapping.get(this.normalizeExpressionName(expressionName));\n        if (namedExpression && namedExpression.added) {\n            return namedExpression;\n        }\n        else {\n            return undefined;\n        }\n    }\n    remove(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        const namedExpression = this.mapping.get(normalizedExpressionName);\n        if (namedExpression) {\n            namedExpression.added = false;\n        }\n    }\n    getAllNamedExpressions() {\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\n    }\n    normalizeExpressionName(expressionName) {\n        return expressionName.toLowerCase();\n    }\n}\nclass WorksheetStore {\n    constructor() {\n        this.mapping = new Map();\n    }\n    add(namedExpression) {\n        this.mapping.set(this.normalizeExpressionName(namedExpression.displayName), namedExpression);\n    }\n    get(expressionName) {\n        return this.mapping.get(this.normalizeExpressionName(expressionName));\n    }\n    has(expressionName) {\n        return this.mapping.has(this.normalizeExpressionName(expressionName));\n    }\n    getAllNamedExpressions() {\n        return Array.from(this.mapping.values()).filter((ne) => ne.added);\n    }\n    normalizeExpressionName(expressionName) {\n        return expressionName.toLowerCase();\n    }\n    isNameAvailable(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        return !this.mapping.has(normalizedExpressionName);\n    }\n    remove(expressionName) {\n        const normalizedExpressionName = this.normalizeExpressionName(expressionName);\n        const namedExpression = this.mapping.get(normalizedExpressionName);\n        if (namedExpression) {\n            this.mapping.delete(normalizedExpressionName);\n        }\n    }\n}\nexport class NamedExpressions {\n    constructor() {\n        this.nextNamedExpressionRow = 0;\n        this.workbookStore = new WorkbookStore();\n        this.worksheetStores = new Map();\n        this.addressCache = new Map();\n    }\n    isNameAvailable(expressionName, sheetId) {\n        var _a, _b;\n        if (sheetId === undefined) {\n            return this.workbookStore.isNameAvailable(expressionName);\n        }\n        else {\n            return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.isNameAvailable(expressionName)) !== null && _b !== void 0 ? _b : true;\n        }\n    }\n    namedExpressionInAddress(row) {\n        const namedExpression = this.addressCache.get(row);\n        if (namedExpression && namedExpression.added) {\n            return namedExpression;\n        }\n        else {\n            return undefined;\n        }\n    }\n    namedExpressionForScope(expressionName, sheetId) {\n        var _a;\n        if (sheetId === undefined) {\n            return this.workbookStore.getExisting(expressionName);\n        }\n        else {\n            return (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName);\n        }\n    }\n    nearestNamedExpression(expressionName, sheetId) {\n        var _a, _b;\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.get(expressionName)) !== null && _b !== void 0 ? _b : this.workbookStore.getExisting(expressionName);\n    }\n    isExpressionInScope(expressionName, sheetId) {\n        var _a, _b;\n        return (_b = (_a = this.worksheetStore(sheetId)) === null || _a === void 0 ? void 0 : _a.has(expressionName)) !== null && _b !== void 0 ? _b : false;\n    }\n    isNameValid(expressionName) {\n        if (/^[A-Za-z]+[0-9]+$/.test(expressionName)) {\n            return false;\n        }\n        return /^[A-Za-z\\u00C0-\\u02AF_][A-Za-z0-9\\u00C0-\\u02AF._]*$/.test(expressionName);\n    }\n    addNamedExpression(expressionName, sheetId, options) {\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\n        let namedExpression = store.get(expressionName);\n        if (namedExpression) {\n            namedExpression.added = true;\n            namedExpression.displayName = expressionName;\n            namedExpression.options = options;\n        }\n        else {\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), true, options);\n            store.add(namedExpression);\n        }\n        this.addressCache.set(namedExpression.address.row, namedExpression);\n        return namedExpression;\n    }\n    restoreNamedExpression(namedExpression, sheetId) {\n        const store = sheetId === undefined ? this.workbookStore : this.worksheetStoreOrCreate(sheetId);\n        namedExpression.added = true;\n        store.add(namedExpression);\n        this.addressCache.set(namedExpression.address.row, namedExpression);\n        return namedExpression;\n    }\n    worksheetStoreOrCreate(sheetId) {\n        let store = this.worksheetStores.get(sheetId);\n        if (!store) {\n            store = new WorksheetStore();\n            this.worksheetStores.set(sheetId, store);\n        }\n        return store;\n    }\n    worksheetStore(sheetId) {\n        return this.worksheetStores.get(sheetId);\n    }\n    namedExpressionOrPlaceholder(expressionName, sheetId) {\n        var _a;\n        return (_a = this.worksheetStoreOrCreate(sheetId).get(expressionName)) !== null && _a !== void 0 ? _a : this.workbookNamedExpressionOrPlaceholder(expressionName);\n    }\n    workbookNamedExpressionOrPlaceholder(expressionName) {\n        let namedExpression = this.workbookStore.get(expressionName);\n        if (namedExpression === undefined) {\n            namedExpression = new InternalNamedExpression(expressionName, this.nextAddress(), false);\n            this.workbookStore.add(namedExpression);\n        }\n        return namedExpression;\n    }\n    remove(expressionName, sheetId) {\n        let store;\n        if (sheetId === undefined) {\n            store = this.workbookStore;\n        }\n        else {\n            store = this.worksheetStore(sheetId);\n        }\n        const namedExpression = store === null || store === void 0 ? void 0 : store.get(expressionName);\n        if (store === undefined || namedExpression === undefined || !namedExpression.added) {\n            throw 'Named expression does not exist';\n        }\n        store.remove(expressionName);\n        if (store instanceof WorksheetStore && store.mapping.size === 0) {\n            this.worksheetStores.delete(sheetId);\n        }\n        this.addressCache.delete(namedExpression.address.row);\n    }\n    getAllNamedExpressionsNamesInScope(sheetId) {\n        return this.getAllNamedExpressions().filter(({ scope }) => scope === sheetId).map((ne) => ne.expression.displayName);\n    }\n    getAllNamedExpressionsNames() {\n        return this.getAllNamedExpressions().map((ne) => ne.expression.displayName);\n    }\n    getAllNamedExpressions() {\n        const storedNamedExpressions = [];\n        this.workbookStore.getAllNamedExpressions().forEach(expr => {\n            storedNamedExpressions.push({\n                expression: expr,\n                scope: undefined\n            });\n        });\n        this.worksheetStores.forEach((store, sheetNum) => {\n            store.getAllNamedExpressions().forEach(expr => {\n                storedNamedExpressions.push({\n                    expression: expr,\n                    scope: sheetNum\n                });\n            });\n        });\n        return storedNamedExpressions;\n    }\n    getAllNamedExpressionsForScope(scope) {\n        var _a, _b;\n        if (scope === undefined) {\n            return this.workbookStore.getAllNamedExpressions();\n        }\n        else {\n            return (_b = (_a = this.worksheetStores.get(scope)) === null || _a === void 0 ? void 0 : _a.getAllNamedExpressions()) !== null && _b !== void 0 ? _b : [];\n        }\n    }\n    nextAddress() {\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow++);\n    }\n    lookupNextAddress(expressionName, sheetId) {\n        if (sheetId === undefined) {\n            const namedExpression = this.workbookStore.get(expressionName);\n            if (namedExpression) {\n                return namedExpression.address;\n            }\n        }\n        return simpleCellAddress(NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS, 0, this.nextNamedExpressionRow);\n    }\n}\nNamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS = -1;\nexport const doesContainRelativeReferences = (ast) => {\n    switch (ast.type) {\n        case AstNodeType.EMPTY:\n        case AstNodeType.NUMBER:\n        case AstNodeType.STRING:\n        case AstNodeType.ERROR:\n        case AstNodeType.ERROR_WITH_RAW_INPUT:\n            return false;\n        case AstNodeType.CELL_REFERENCE:\n            return !ast.reference.isAbsolute();\n        case AstNodeType.CELL_RANGE:\n        case AstNodeType.COLUMN_RANGE:\n        case AstNodeType.ROW_RANGE:\n            return !ast.start.isAbsolute();\n        case AstNodeType.NAMED_EXPRESSION:\n            return false;\n        case AstNodeType.PERCENT_OP:\n        case AstNodeType.PLUS_UNARY_OP:\n        case AstNodeType.MINUS_UNARY_OP: {\n            return doesContainRelativeReferences(ast.value);\n        }\n        case AstNodeType.CONCATENATE_OP:\n        case AstNodeType.EQUALS_OP:\n        case AstNodeType.NOT_EQUAL_OP:\n        case AstNodeType.LESS_THAN_OP:\n        case AstNodeType.GREATER_THAN_OP:\n        case AstNodeType.LESS_THAN_OR_EQUAL_OP:\n        case AstNodeType.GREATER_THAN_OR_EQUAL_OP:\n        case AstNodeType.MINUS_OP:\n        case AstNodeType.PLUS_OP:\n        case AstNodeType.TIMES_OP:\n        case AstNodeType.DIV_OP:\n        case AstNodeType.POWER_OP:\n            return doesContainRelativeReferences(ast.left) || doesContainRelativeReferences(ast.right);\n        case AstNodeType.PARENTHESIS:\n            return doesContainRelativeReferences(ast.expression);\n        case AstNodeType.FUNCTION_CALL: {\n            return ast.args.some((arg) => doesContainRelativeReferences(arg));\n        }\n    }\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { InvalidArgumentsError } from './errors';\nexport function validateAsSheet(sheet) {\n    if (!Array.isArray(sheet)) {\n        throw new InvalidArgumentsError('an array of arrays.');\n    }\n    for (let i = 0; i < sheet.length; i++) {\n        if (!Array.isArray(sheet[i])) {\n            throw new InvalidArgumentsError('an array of arrays.');\n        }\n    }\n}\n/**\n * Returns actual width, height and fill ratio of a sheet\n *\n * @param sheet - two-dimmensional array sheet representation\n */\nexport function findBoundaries(sheet) {\n    let width = 0;\n    let height = 0;\n    let cellsCount = 0;\n    for (let currentRow = 0; currentRow < sheet.length; currentRow++) {\n        let currentRowWidth = 0;\n        for (let currentCol = 0; currentCol < sheet[currentRow].length; currentCol++) {\n            const currentValue = sheet[currentRow][currentCol];\n            if (currentValue === undefined || currentValue === null) {\n                continue;\n            }\n            currentRowWidth = currentCol + 1;\n            ++cellsCount;\n        }\n        width = Math.max(width, currentRowWidth);\n        if (currentRowWidth > 0) {\n            height = currentRow + 1;\n        }\n    }\n    const sheetSize = width * height;\n    return {\n        height: height,\n        width: width,\n        fill: sheetSize === 0 ? 0 : cellsCount / sheetSize,\n    };\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { Transformer } from './Transformer';\nimport { ErrorType } from '../Cell';\nexport class CleanOutOfScopeDependenciesTransformer extends Transformer {\n    constructor(sheet) {\n        super();\n        this.sheet = sheet;\n    }\n    isIrreversible() {\n        return true;\n    }\n    fixNodeAddress(address) {\n        return address;\n    }\n    transformCellAddress(dependencyAddress, formulaAddress) {\n        return dependencyAddress.isInvalid(formulaAddress) ? ErrorType.REF : false;\n    }\n    transformCellRange(start, end, formulaAddress) {\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n    }\n    transformColumnRange(start, end, formulaAddress) {\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n    }\n    transformRowRange(start, end, formulaAddress) {\n        return start.isInvalid(formulaAddress) || end.isInvalid(formulaAddress) ? ErrorType.REF : false;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { TinyEmitter } from 'tiny-emitter';\nexport var Events;\n(function (Events) {\n    Events[\"SheetAdded\"] = \"sheetAdded\";\n    Events[\"SheetRemoved\"] = \"sheetRemoved\";\n    Events[\"SheetRenamed\"] = \"sheetRenamed\";\n    Events[\"NamedExpressionAdded\"] = \"namedExpressionAdded\";\n    Events[\"NamedExpressionRemoved\"] = \"namedExpressionRemoved\";\n    Events[\"ValuesUpdated\"] = \"valuesUpdated\";\n    Events[\"EvaluationSuspended\"] = \"evaluationSuspended\";\n    Events[\"EvaluationResumed\"] = \"evaluationResumed\";\n})(Events || (Events = {}));\nexport class Emitter extends TinyEmitter {\n    emit(event, ...args) {\n        super.emit(event, ...args);\n        return this;\n    }\n}\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { Exporter } from './Exporter';\nimport { LazilyTransformingAstService } from './LazilyTransformingAstService';\nimport { CellContentParser } from './CellContentParser';\nimport { buildColumnSearchStrategy } from './Lookup/SearchStrategy';\nimport { Config } from './Config';\nimport { DateTimeHelper } from './DateTimeHelper';\nimport { CrudOperations } from './CrudOperations';\nimport { DependencyGraph } from './DependencyGraph';\nimport { Evaluator } from './Evaluator';\nimport { GraphBuilder } from './GraphBuilder';\nimport { UIElement } from './i18n';\nimport { NamedExpressions } from './NamedExpressions';\nimport { NumberLiteralHelper } from './NumberLiteralHelper';\nimport { buildLexerConfig, ParserWithCaching, Unparser } from './parser';\nimport { Serialization } from './Serialization';\nimport { EmptyStatistics, Statistics, StatType } from './statistics';\nimport { SheetSizeLimitExceededError } from './errors';\nimport { findBoundaries, validateAsSheet } from './Sheet';\nimport { FunctionRegistry } from './interpreter/FunctionRegistry';\nexport class BuildEngineFactory {\n    static buildEngine(config, sheets = {}, stats = config.useStats ? new Statistics() : new EmptyStatistics()) {\n        stats.start(StatType.BUILD_ENGINE_TOTAL);\n        const namedExpressions = new NamedExpressions();\n        const functionRegistry = new FunctionRegistry(config);\n        const lazilyTransformingAstService = new LazilyTransformingAstService(stats);\n        const dependencyGraph = DependencyGraph.buildEmpty(lazilyTransformingAstService, config, functionRegistry, namedExpressions, stats);\n        const columnSearch = buildColumnSearchStrategy(dependencyGraph, config, stats);\n        const sheetMapping = dependencyGraph.sheetMapping;\n        const addressMapping = dependencyGraph.addressMapping;\n        for (const sheetName in sheets) {\n            if (Object.prototype.hasOwnProperty.call(sheets, sheetName)) {\n                const sheet = sheets[sheetName];\n                validateAsSheet(sheet);\n                const boundaries = findBoundaries(sheet);\n                if (boundaries.height > config.maxRows || boundaries.width > config.maxColumns) {\n                    throw new SheetSizeLimitExceededError();\n                }\n                const sheetId = sheetMapping.addSheet(sheetName);\n                addressMapping.autoAddSheet(sheetId, sheet, boundaries);\n            }\n        }\n        const parser = new ParserWithCaching(config, functionRegistry, sheetMapping.get);\n        const unparser = new Unparser(config, buildLexerConfig(config), sheetMapping.fetchDisplayName, namedExpressions);\n        const dateHelper = new DateTimeHelper(config);\n        const numberLiteralHelper = new NumberLiteralHelper(config);\n        const cellContentParser = new CellContentParser(config, dateHelper, numberLiteralHelper);\n        const crudOperations = new CrudOperations(config, stats, dependencyGraph, columnSearch, parser, cellContentParser, lazilyTransformingAstService, namedExpressions);\n        stats.measure(StatType.GRAPH_BUILD, () => {\n            const graphBuilder = new GraphBuilder(dependencyGraph, columnSearch, parser, cellContentParser, config, stats);\n            graphBuilder.buildGraph(sheets);\n        });\n        lazilyTransformingAstService.undoRedo = crudOperations.undoRedo;\n        lazilyTransformingAstService.parser = parser;\n        const exporter = new Exporter(config, namedExpressions, sheetMapping.fetchDisplayName);\n        const serialization = new Serialization(dependencyGraph, unparser, config, exporter);\n        const evaluator = new Evaluator(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralHelper, functionRegistry, namedExpressions, serialization);\n        evaluator.run();\n        stats.end(StatType.BUILD_ENGINE_TOTAL);\n        return {\n            config,\n            stats,\n            dependencyGraph,\n            columnSearch,\n            parser,\n            unparser,\n            cellContentParser,\n            evaluator,\n            lazilyTransformingAstService,\n            crudOperations,\n            exporter,\n            namedExpressions,\n            serialization,\n            functionRegistry,\n        };\n    }\n    static buildFromSheets(sheets, configInput) {\n        const config = new Config(configInput);\n        return this.buildEngine(config, sheets);\n    }\n    static buildFromSheet(sheet, configInput) {\n        const config = new Config(configInput);\n        const newsheetprefix = config.translationPackage.getUITranslation(UIElement.NEW_SHEET_PREFIX) + '1';\n        return this.buildEngine(config, { [newsheetprefix]: sheet });\n    }\n    static buildEmpty(configInput) {\n        return this.buildEngine(new Config(configInput));\n    }\n    static rebuildWithConfig(config, sheets, stats) {\n        return this.buildEngine(config, sheets, stats);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType, simpleCellAddress } from './Cell';\nimport { DetailedCellError, } from './CellValue';\nimport { ErrorMessage } from './error-message';\nimport { EmptyValue, getRawValue, isExtendedNumber, } from './interpreter/InterpreterValue';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\nimport { NamedExpressions } from './NamedExpressions';\nimport { simpleCellAddressToString } from './parser/addressRepresentationConverters';\n/**\n * A list of cells which values changed after the operation, their absolute addresses and new values.\n */\nexport class ExportedCellChange {\n    constructor(address, newValue) {\n        this.address = address;\n        this.newValue = newValue;\n    }\n    get col() {\n        return this.address.col;\n    }\n    get row() {\n        return this.address.row;\n    }\n    get sheet() {\n        return this.address.sheet;\n    }\n    get value() {\n        return this.newValue;\n    }\n}\nexport class ExportedNamedExpressionChange {\n    constructor(name, newValue) {\n        this.name = name;\n        this.newValue = newValue;\n    }\n}\nexport class Exporter {\n    constructor(config, namedExpressions, sheetIndexMapping) {\n        this.config = config;\n        this.namedExpressions = namedExpressions;\n        this.sheetIndexMapping = sheetIndexMapping;\n    }\n    exportChange(change) {\n        if (change.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n            const namedExpression = this.namedExpressions.namedExpressionInAddress(change.row);\n            if (!namedExpression) {\n                throw 'Missing named expression';\n            }\n            return new ExportedNamedExpressionChange(namedExpression.displayName, this.exportValue(change.value));\n        }\n        else {\n            return new ExportedCellChange(simpleCellAddress(change.sheet, change.col, change.row), this.exportValue(change.value));\n        }\n    }\n    exportValue(value) {\n        if (value instanceof SimpleRangeValue) {\n            return this.detailedError(new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected));\n        }\n        else if (this.config.smartRounding && isExtendedNumber(value)) {\n            return this.cellValueRounding(getRawValue(value));\n        }\n        else if (value instanceof CellError) {\n            return this.detailedError(value);\n        }\n        else if (value === EmptyValue) {\n            return null;\n        }\n        else {\n            return getRawValue(value);\n        }\n    }\n    detailedError(error) {\n        var _a;\n        let address = undefined;\n        const originAddress = error.address;\n        if (originAddress !== undefined) {\n            if (originAddress.sheet === NamedExpressions.SHEET_FOR_WORKBOOK_EXPRESSIONS) {\n                address = (_a = this.namedExpressions.namedExpressionInAddress(originAddress.row)) === null || _a === void 0 ? void 0 : _a.displayName;\n            }\n            else {\n                address = simpleCellAddressToString(this.sheetIndexMapping, originAddress, -1);\n            }\n        }\n        return new DetailedCellError(error, this.config.translationPackage.getErrorTranslation(error.type), address);\n    }\n    cellValueRounding(value) {\n        if (value === 0) {\n            return value;\n        }\n        const magnitudeMultiplierExponent = Math.floor(Math.log10(Math.abs(value)));\n        const placesMultiplier = Math.pow(10, this.config.precisionRounding - magnitudeMultiplierExponent);\n        if (value < 0) {\n            return -Math.round(-value * placesMultiplier) / placesMultiplier;\n        }\n        else {\n            return Math.round(value * placesMultiplier) / placesMultiplier;\n        }\n    }\n}\n","var $ = require('../internals/export');\n\nvar log = Math.log;\nvar LOG10E = Math.LOG10E;\n\n// `Math.log10` method\n// https://tc39.es/ecma262/#sec-math.log10\n$({ target: 'Math', stat: true }, {\n  log10: function log10(x) {\n    return log(x) * LOG10E;\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { StatType } from './statistics';\nimport { CombinedTransformer } from './dependencyTransformers/CombinedTransformer';\nexport class LazilyTransformingAstService {\n    constructor(stats) {\n        this.stats = stats;\n        this.transformations = [];\n    }\n    version() {\n        return this.transformations.length;\n    }\n    addTransformation(transformation) {\n        if (this.combinedTransformer !== undefined) {\n            this.combinedTransformer.add(transformation);\n        }\n        else {\n            this.transformations.push(transformation);\n        }\n        return this.version();\n    }\n    beginCombinedMode(sheet) {\n        this.combinedTransformer = new CombinedTransformer(sheet);\n    }\n    commitCombinedMode() {\n        if (this.combinedTransformer === undefined) {\n            throw 'Combined mode wasn\\'t started';\n        }\n        this.transformations.push(this.combinedTransformer);\n        this.combinedTransformer = undefined;\n        return this.version();\n    }\n    applyTransformations(ast, address, version) {\n        this.stats.start(StatType.TRANSFORM_ASTS_POSTPONED);\n        for (let v = version; v < this.transformations.length; v++) {\n            const transformation = this.transformations[v];\n            if (transformation.isIrreversible()) {\n                this.undoRedo.storeDataForVersion(v, address, this.parser.computeHashFromAst(ast));\n                this.parser.rememberNewAst(ast);\n            }\n            const [newAst, newAddress] = transformation.transformSingleAst(ast, address);\n            ast = newAst;\n            address = newAddress;\n        }\n        const cachedAst = this.parser.rememberNewAst(ast);\n        this.stats.end(StatType.TRANSFORM_ASTS_POSTPONED);\n        return [cachedAst, address, this.transformations.length];\n    }\n    *getTransformationsFrom(version, filter) {\n        for (let v = version; v < this.transformations.length; v++) {\n            const transformation = this.transformations[v];\n            if (!filter || filter(transformation)) {\n                yield transformation;\n            }\n        }\n    }\n    destroy() {\n        this.parser = undefined;\n        this.transformations = [];\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport class CombinedTransformer {\n    constructor(sheet) {\n        this.sheet = sheet;\n        this.transformations = [];\n    }\n    add(transformation) {\n        this.transformations.push(transformation);\n    }\n    performEagerTransformations(graph, parser) {\n        this.transformations.forEach(transformation => transformation.performEagerTransformations(graph, parser));\n    }\n    transformSingleAst(ast, address) {\n        let [transformedAst, transformedAddress] = [ast, address];\n        this.transformations.forEach(transformation => {\n            [transformedAst, transformedAddress] = transformation.transformSingleAst(transformedAst, transformedAddress);\n        });\n        return [transformedAst, transformedAddress];\n    }\n    isIrreversible() {\n        return true;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\nimport { ColumnIndex } from './ColumnIndex';\nexport function buildColumnSearchStrategy(dependencyGraph, config, statistics) {\n    if (config.useColumnIndex) {\n        return new ColumnIndex(dependencyGraph, config, statistics);\n    }\n    else {\n        return new ColumnBinarySearch(dependencyGraph, config);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\nimport { rangeLowerBound } from '../interpreter/binarySearch';\nimport { getRawValue } from '../interpreter/InterpreterValue';\nimport { AdvancedFind } from './AdvancedFind';\nexport class ColumnBinarySearch extends AdvancedFind {\n    constructor(dependencyGraph, config) {\n        super(dependencyGraph);\n        this.dependencyGraph = dependencyGraph;\n        this.config = config;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars \n    add(value, address) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    remove(value, address) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    change(oldValue, newValue, address) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addColumns(columnsSpan) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeColumns(columnsSpan) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeSheet(sheetId) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    moveValues(sourceRange, toRight, toBottom, toSheet) { }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    removeValues(range) { }\n    destroy() { }\n    find(key, range, sorted) {\n        if (typeof key === 'string') {\n            key = forceNormalizeString(key);\n        }\n        if (range.height() < this.config.binarySearchThreshold || !sorted) {\n            const values = this.dependencyGraph.computeListOfValuesInRange(range).map(getRawValue).map(arg => (typeof arg === 'string') ? forceNormalizeString(arg) : arg);\n            const index = values.indexOf(key);\n            return index < 0 ? index : index + range.start.row;\n        }\n        else {\n            return rangeLowerBound(range, key, this.dependencyGraph, 'row');\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, simpleCellAddress } from '../Cell';\nimport { EmptyValue, getRawValue } from './InterpreterValue';\n/*\n* If key exists returns first index of key element in range of sorted values\n* Otherwise returns first index of greatest element smaller than key\n* assuming sorted values in range\n* */\nexport function rangeLowerBound(range, key, dependencyGraph, coordinate) {\n    //IMPORTANT: this function does not normalize input strings\n    let end;\n    if (coordinate === 'col') {\n        end = range.effectiveEndColumn(dependencyGraph);\n    }\n    else {\n        end = range.effectiveEndRow(dependencyGraph);\n    }\n    const start = range.start[coordinate];\n    let centerValueFn;\n    if (coordinate === 'row') {\n        centerValueFn = (center) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, range.start.col, center)));\n    }\n    else {\n        centerValueFn = (center) => getRawValue(dependencyGraph.getCellValue(simpleCellAddress(range.sheet, center, range.start.row)));\n    }\n    return lowerBound(centerValueFn, key, start, end);\n}\n/*\n* If key exists returns first index of key element\n* Otherwise returns first index of greatest element smaller than key\n* assuming sorted values\n* */\nexport function lowerBound(value, key, start, end) {\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        const cmp = compare(key, value(center));\n        if (cmp > 0) {\n            start = center + 1;\n        }\n        else if (cmp < 0) {\n            end = center - 1;\n        }\n        else if (start != center) {\n            end = center;\n        }\n        else {\n            return center;\n        }\n    }\n    return end;\n}\n/*\n* numbers < strings < false < true\n* */\nexport function compare(left, right) {\n    if (typeof left === typeof right) {\n        if (left === EmptyValue) {\n            return 0;\n        }\n        return (left < right ? -1 : (left > right ? 1 : 0));\n    }\n    if (left === EmptyValue) {\n        return -1;\n    }\n    if (right === EmptyValue) {\n        return 1;\n    }\n    if (right instanceof CellError) {\n        return -1;\n    }\n    if (typeof left === 'number' && typeof right === 'string') {\n        return -1;\n    }\n    if (typeof left === 'number' && typeof right === 'boolean') {\n        return -1;\n    }\n    if (typeof left === 'string' && typeof right === 'number') {\n        return 1;\n    }\n    if (typeof left === 'string' && typeof right === 'boolean') {\n        return -1;\n    }\n    return 1;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { getRawValue } from '../interpreter/InterpreterValue';\nexport class AdvancedFind {\n    constructor(dependencyGraph) {\n        this.dependencyGraph = dependencyGraph;\n    }\n    advancedFind(keyMatcher, range) {\n        const values = this.dependencyGraph.computeListOfValuesInRange(range);\n        for (let i = 0; i < values.length; i++) {\n            if (keyMatcher(getRawValue(values[i]))) {\n                return i + range.start.col;\n            }\n        }\n        return -1;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, movedSimpleCellAddress } from '../Cell';\nimport { AddRowsTransformer } from '../dependencyTransformers/AddRowsTransformer';\nimport { RemoveRowsTransformer } from '../dependencyTransformers/RemoveRowsTransformer';\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\nimport { SimpleRangeValue } from '../interpreter/SimpleRangeValue';\nimport { Matrix } from '../Matrix';\nimport { StatType } from '../statistics';\nimport { ColumnBinarySearch } from './ColumnBinarySearch';\nexport class ColumnIndex {\n    constructor(dependencyGraph, config, stats) {\n        this.dependencyGraph = dependencyGraph;\n        this.config = config;\n        this.stats = stats;\n        this.index = new Map();\n        this.transformingService = this.dependencyGraph.lazilyTransformingAstService;\n        this.binarySearchStrategy = new ColumnBinarySearch(dependencyGraph, config);\n    }\n    add(value, address) {\n        if (value instanceof Matrix) {\n            for (const [matrixValue, cellAddress] of value.generateValues(address)) {\n                this.addSingleCellValue(matrixValue, cellAddress);\n            }\n        }\n        else if (!(value instanceof CellError || value instanceof SimpleRangeValue)) {\n            this.addSingleCellValue(value, address);\n        }\n    }\n    remove(value, address) {\n        if (!value) {\n            return;\n        }\n        if (value instanceof Matrix) {\n            for (const [matrixValue, cellAddress] of value.generateValues(address)) {\n                this.removeSingleValue(matrixValue, cellAddress);\n            }\n        }\n        else {\n            this.removeSingleValue(value, address);\n        }\n    }\n    change(oldValue, newValue, address) {\n        if (oldValue === newValue) {\n            return;\n        }\n        this.remove(oldValue, address);\n        this.add(newValue, address);\n    }\n    moveValues(sourceRange, toRight, toBottom, toSheet) {\n        for (const [value, address] of sourceRange) {\n            const targetAddress = movedSimpleCellAddress(address, toSheet, toRight, toBottom);\n            this.remove(value, address);\n            this.add(value, targetAddress);\n        }\n    }\n    removeValues(range) {\n        for (const [value, address] of range) {\n            this.remove(value, address);\n        }\n    }\n    find(key, range, sorted) {\n        this.ensureRecentData(range.sheet, range.start.col, key);\n        const columnMap = this.getColumnMap(range.sheet, range.start.col);\n        if (!columnMap) {\n            return -1;\n        }\n        if (typeof key === 'string') {\n            key = forceNormalizeString(key);\n        }\n        const valueIndex = columnMap.get(key);\n        if (!valueIndex) {\n            return this.binarySearchStrategy.find(key, range, sorted);\n        }\n        const index = upperBound(valueIndex.index, range.start.row);\n        const rowNumber = valueIndex.index[index];\n        return rowNumber <= range.end.row ? rowNumber : this.binarySearchStrategy.find(key, range, sorted);\n    }\n    advancedFind(keyMatcher, range) {\n        return this.binarySearchStrategy.advancedFind(keyMatcher, range);\n    }\n    addColumns(columnsSpan) {\n        const sheetIndex = this.index.get(columnsSpan.sheet);\n        if (!sheetIndex) {\n            return;\n        }\n        sheetIndex.splice(columnsSpan.columnStart, 0, ...Array(columnsSpan.numberOfColumns));\n    }\n    removeColumns(columnsSpan) {\n        const sheetIndex = this.index.get(columnsSpan.sheet);\n        if (!sheetIndex) {\n            return;\n        }\n        sheetIndex.splice(columnsSpan.columnStart, columnsSpan.numberOfColumns);\n    }\n    removeSheet(sheetId) {\n        this.index.delete(sheetId);\n    }\n    getColumnMap(sheet, col) {\n        if (!this.index.has(sheet)) {\n            this.index.set(sheet, []);\n        }\n        const sheetMap = this.index.get(sheet); // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        let columnMap = sheetMap[col];\n        if (!columnMap) {\n            columnMap = new Map();\n            sheetMap[col] = columnMap;\n        }\n        return columnMap;\n    }\n    getValueIndex(sheet, col, value) {\n        const columnMap = this.getColumnMap(sheet, col);\n        let index = this.getColumnMap(sheet, col).get(value);\n        if (!index) {\n            index = {\n                version: this.transformingService.version(),\n                index: [],\n            };\n            columnMap.set(value, index);\n        }\n        return index;\n    }\n    ensureRecentData(sheet, col, value) {\n        const valueIndex = this.getValueIndex(sheet, col, value);\n        const actualVersion = this.transformingService.version();\n        if (valueIndex.version === actualVersion) {\n            return;\n        }\n        const relevantTransformations = this.transformingService.getTransformationsFrom(valueIndex.version, (transformation) => {\n            return transformation.sheet === sheet && (transformation instanceof AddRowsTransformer || transformation instanceof RemoveRowsTransformer);\n        });\n        for (const transformation of relevantTransformations) {\n            if (transformation instanceof AddRowsTransformer) {\n                this.addRows(col, transformation.rowsSpan, value);\n            }\n            else if (transformation instanceof RemoveRowsTransformer) {\n                this.removeRows(col, transformation.rowsSpan, value);\n            }\n        }\n        valueIndex.version = actualVersion;\n    }\n    destroy() {\n        this.index.clear();\n    }\n    addSingleCellValue(value, address) {\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\n            this.ensureRecentData(address.sheet, address.col, value);\n            if (typeof value === 'string') {\n                value = forceNormalizeString(value);\n            }\n            const valueIndex = this.getValueIndex(address.sheet, address.col, value);\n            this.addValue(valueIndex, address.row);\n        });\n    }\n    removeSingleValue(value, address) {\n        this.stats.measure(StatType.BUILD_COLUMN_INDEX, () => {\n            this.ensureRecentData(address.sheet, address.col, value);\n            const columnMap = this.getColumnMap(address.sheet, address.col);\n            if (typeof value === 'string') {\n                value = forceNormalizeString(value);\n            }\n            const valueIndex = columnMap.get(value);\n            if (!valueIndex) {\n                return;\n            }\n            const index = upperBound(valueIndex.index, address.row);\n            valueIndex.index.splice(index, 1);\n            if (valueIndex.index.length === 0) {\n                columnMap.delete(value);\n            }\n            if (columnMap.size === 0) {\n                delete this.index.get(address.sheet)[address.col]; // eslint-disable-line @typescript-eslint/no-non-null-assertion\n            }\n        });\n    }\n    addRows(col, rowsSpan, value) {\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\n        this.shiftRows(valueIndex, rowsSpan.rowStart, rowsSpan.numberOfRows);\n    }\n    removeRows(col, rowsSpan, value) {\n        const valueIndex = this.getValueIndex(rowsSpan.sheet, col, value);\n        this.removeRowsFromValues(valueIndex, rowsSpan);\n        this.shiftRows(valueIndex, rowsSpan.rowEnd + 1, -rowsSpan.numberOfRows);\n    }\n    addValue(valueIndex, rowNumber) {\n        const rowIndex = lowerBound(valueIndex.index, rowNumber);\n        const value = valueIndex.index[rowIndex];\n        if (value === rowNumber) {\n            /* do not add same row twice */\n            return;\n        }\n        if (rowIndex === valueIndex.index.length - 1) {\n            valueIndex.index.push(rowNumber);\n        }\n        else {\n            valueIndex.index.splice(rowIndex + 1, 0, rowNumber);\n        }\n    }\n    removeRowsFromValues(rows, rowsSpan) {\n        const start = upperBound(rows.index, rowsSpan.rowStart);\n        const end = lowerBound(rows.index, rowsSpan.rowEnd);\n        if (rows.index[start] <= rowsSpan.rowEnd) {\n            rows.index.splice(start, end - start + 1);\n        }\n    }\n    shiftRows(rows, afterRow, numberOfRows) {\n        const index = upperBound(rows.index, afterRow);\n        for (let i = index; i < rows.index.length; ++i) {\n            rows.index[i] += numberOfRows;\n        }\n    }\n}\n/*\n* If key exists returns index of key\n* Otherwise returns index of smallest element greater than key\n* assuming sorted array and no repetitions\n* */\nexport function upperBound(values, key) {\n    let start = 0;\n    let end = values.length - 1;\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        if (key > values[center]) {\n            start = center + 1;\n        }\n        else if (key < values[center]) {\n            end = center - 1;\n        }\n        else {\n            return center;\n        }\n    }\n    return start;\n}\n/*\n* If key exists returns index of key\n* Otherwise returns index of greatest element smaller than key\n* assuming sorted array and no repetitions\n* */\nexport function lowerBound(values, key) {\n    let start = 0;\n    let end = values.length - 1;\n    while (start <= end) {\n        const center = Math.floor((start + end) / 2);\n        if (key > values[center]) {\n            start = center + 1;\n        }\n        else if (key < values[center]) {\n            end = center - 1;\n        }\n        else {\n            return center;\n        }\n    }\n    return end;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { invalidSimpleCellAddress, simpleCellAddress } from './Cell';\nimport { CellContent, isMatrix } from './CellContentParser';\nimport { ClipboardOperations } from './ClipboardOperations';\nimport { AddColumnsCommand, AddRowsCommand, Operations, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\nimport { doesContainRelativeReferences } from './NamedExpressions';\nimport { InvalidAddressError, InvalidArgumentsError, MatrixFormulasNotSupportedError, NamedExpressionDoesNotExistError, NamedExpressionNameIsAlreadyTakenError, NamedExpressionNameIsInvalidError, NoOperationToRedoError, NoOperationToUndoError, NoRelativeAddressesAllowedError, NoSheetWithIdError, NoSheetWithNameError, NothingToPasteError, SheetNameAlreadyTakenError, SheetSizeLimitExceededError, SourceLocationHasMatrixError, TargetLocationHasMatrixError } from './errors';\nimport { ColumnsSpan, RowsSpan } from './Span';\nimport { AddColumnsUndoEntry, AddNamedExpressionUndoEntry, AddRowsUndoEntry, AddSheetUndoEntry, ChangeNamedExpressionUndoEntry, ClearSheetUndoEntry, MoveCellsUndoEntry, MoveColumnsUndoEntry, MoveRowsUndoEntry, PasteUndoEntry, RemoveColumnsUndoEntry, RemoveNamedExpressionUndoEntry, RemoveRowsUndoEntry, RemoveSheetUndoEntry, RenameSheetUndoEntry, SetCellContentsUndoEntry, SetColumnOrderUndoEntry, SetRowOrderUndoEntry, SetSheetContentUndoEntry, UndoRedo } from './UndoRedo';\nimport { findBoundaries, validateAsSheet } from './Sheet';\nexport class CrudOperations {\n    constructor(\n    /** Engine config */\n    config, \n    /** Statistics module for benchmarking */\n    stats, \n    /** Dependency graph storing sheets structure */\n    dependencyGraph, \n    /** Column search strategy used by VLOOKUP plugin */\n    columnSearch, \n    /** Parser with caching */\n    parser, \n    /** Raw cell input parser */\n    cellContentParser, \n    /** Service handling postponed CRUD transformations */\n    lazilyTransformingAstService, \n    /** Storage for named expressions */\n    namedExpressions) {\n        this.config = config;\n        this.stats = stats;\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.parser = parser;\n        this.cellContentParser = cellContentParser;\n        this.lazilyTransformingAstService = lazilyTransformingAstService;\n        this.namedExpressions = namedExpressions;\n        this.operations = new Operations(this.dependencyGraph, this.columnSearch, this.cellContentParser, this.parser, this.stats, this.lazilyTransformingAstService, this.namedExpressions, this.config);\n        this.clipboardOperations = new ClipboardOperations(this.dependencyGraph, this.operations, this.parser, this.lazilyTransformingAstService, this.config);\n        this.undoRedo = new UndoRedo(this.config, this.operations);\n    }\n    addRows(sheet, ...indexes) {\n        const addRowsCommand = new AddRowsCommand(sheet, indexes);\n        this.ensureItIsPossibleToAddRows(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.operations.addRows(addRowsCommand);\n        this.undoRedo.saveOperation(new AddRowsUndoEntry(addRowsCommand));\n    }\n    removeRows(sheet, ...indexes) {\n        const removeRowsCommand = new RemoveRowsCommand(sheet, indexes);\n        this.ensureItIsPossibleToRemoveRows(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const rowsRemovals = this.operations.removeRows(removeRowsCommand);\n        this.undoRedo.saveOperation(new RemoveRowsUndoEntry(removeRowsCommand, rowsRemovals));\n    }\n    addColumns(sheet, ...indexes) {\n        const addColumnsCommand = new AddColumnsCommand(sheet, indexes);\n        this.ensureItIsPossibleToAddColumns(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.operations.addColumns(addColumnsCommand);\n        this.undoRedo.saveOperation(new AddColumnsUndoEntry(addColumnsCommand));\n    }\n    removeColumns(sheet, ...indexes) {\n        const removeColumnsCommand = new RemoveColumnsCommand(sheet, indexes);\n        this.ensureItIsPossibleToRemoveColumns(sheet, ...indexes);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const columnsRemovals = this.operations.removeColumns(removeColumnsCommand);\n        this.undoRedo.saveOperation(new RemoveColumnsUndoEntry(removeColumnsCommand, columnsRemovals));\n    }\n    moveCells(sourceLeftCorner, width, height, destinationLeftCorner) {\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const { version, overwrittenCellsData, addedGlobalNamedExpressions } = this.operations.moveCells(sourceLeftCorner, width, height, destinationLeftCorner);\n        this.undoRedo.saveOperation(new MoveCellsUndoEntry(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version));\n    }\n    moveRows(sheet, startRow, numberOfRows, targetRow) {\n        this.ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const version = this.operations.moveRows(sheet, startRow, numberOfRows, targetRow);\n        this.undoRedo.saveOperation(new MoveRowsUndoEntry(sheet, startRow, numberOfRows, targetRow, version));\n    }\n    moveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\n        this.ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn);\n        this.undoRedo.clearRedoStack();\n        const version = this.operations.moveColumns(sheet, startColumn, numberOfColumns, targetColumn);\n        this.undoRedo.saveOperation(new MoveColumnsUndoEntry(sheet, startColumn, numberOfColumns, targetColumn, version));\n    }\n    cut(sourceLeftCorner, width, height) {\n        this.clipboardOperations.cut(sourceLeftCorner, width, height);\n    }\n    ensureItIsPossibleToCopy(sourceLeftCorner, width, height) {\n        if (!isPositiveInteger(width)) {\n            throw new InvalidArgumentsError('width to be positive integer.');\n        }\n        if (!isPositiveInteger(height)) {\n            throw new InvalidArgumentsError('height to be positive integer.');\n        }\n    }\n    copy(sourceLeftCorner, width, height) {\n        this.ensureItIsPossibleToCopy(sourceLeftCorner, width, height);\n        this.clipboardOperations.copy(sourceLeftCorner, width, height);\n    }\n    paste(targetLeftCorner) {\n        const clipboard = this.clipboardOperations.clipboard;\n        if (clipboard === undefined) {\n            throw new NothingToPasteError();\n        }\n        else if (this.clipboardOperations.isCutClipboard()) {\n            this.moveCells(clipboard.sourceLeftCorner, clipboard.width, clipboard.height, targetLeftCorner);\n        }\n        else if (this.clipboardOperations.isCopyClipboard()) {\n            this.clipboardOperations.ensureItIsPossibleToCopyPaste(targetLeftCorner);\n            const targetRange = AbsoluteCellRange.spanFrom(targetLeftCorner, clipboard.width, clipboard.height);\n            const oldContent = this.operations.getRangeClipboardCells(targetRange);\n            this.undoRedo.clearRedoStack();\n            this.dependencyGraph.breakNumericMatricesInRange(targetRange);\n            const addedGlobalNamedExpressions = this.operations.restoreClipboardCells(clipboard.sourceLeftCorner.sheet, clipboard.getContent(targetLeftCorner));\n            this.undoRedo.saveOperation(new PasteUndoEntry(targetLeftCorner, oldContent, clipboard.content, addedGlobalNamedExpressions));\n        }\n    }\n    beginUndoRedoBatchMode() {\n        this.undoRedo.beginBatchMode();\n    }\n    commitUndoRedoBatchMode() {\n        this.undoRedo.commitBatchMode();\n    }\n    isClipboardEmpty() {\n        return this.clipboardOperations.clipboard === undefined;\n    }\n    clearClipboard() {\n        this.clipboardOperations.clear();\n    }\n    addSheet(name) {\n        if (name) {\n            this.ensureItIsPossibleToAddSheet(name);\n        }\n        this.undoRedo.clearRedoStack();\n        const addedSheetName = this.operations.addSheet(name);\n        this.undoRedo.saveOperation(new AddSheetUndoEntry(addedSheetName));\n        return addedSheetName;\n    }\n    removeSheet(sheetName) {\n        this.ensureSheetExists(sheetName);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        const originalName = this.sheetMapping.fetchDisplayName(sheetId);\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\n        const { version, scopedNamedExpressions } = this.operations.removeSheet(sheetName);\n        this.undoRedo.saveOperation(new RemoveSheetUndoEntry(originalName, sheetId, oldSheetContent, scopedNamedExpressions, version));\n    }\n    renameSheet(sheetId, newName) {\n        this.ensureItIsPossibleToRenameSheet(sheetId, newName);\n        const oldName = this.operations.renameSheet(sheetId, newName);\n        if (oldName !== undefined) {\n            this.undoRedo.clearRedoStack();\n            this.undoRedo.saveOperation(new RenameSheetUndoEntry(sheetId, oldName, newName));\n        }\n        return oldName;\n    }\n    clearSheet(sheetName) {\n        this.ensureSheetExists(sheetName);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\n        this.operations.clearSheet(sheetId);\n        this.undoRedo.saveOperation(new ClearSheetUndoEntry(sheetId, oldSheetContent));\n    }\n    setCellContents(topLeftCornerAddress, cellContents) {\n        if (!(cellContents instanceof Array)) {\n            cellContents = [[cellContents]];\n        }\n        else {\n            for (let i = 0; i < cellContents.length; i++) {\n                if (!(cellContents[i] instanceof Array)) {\n                    throw new InvalidArgumentsError('an array of arrays or a raw cell value.');\n                }\n                for (let j = 0; j < cellContents[i].length; j++) {\n                    if (isMatrix(cellContents[i][j])) {\n                        throw new Error('Cant change matrices in batch operation');\n                    }\n                }\n            }\n        }\n        this.ensureItIsPossibleToChangeCellContents(topLeftCornerAddress, cellContents);\n        this.undoRedo.clearRedoStack();\n        const modifiedCellContents = [];\n        for (let i = 0; i < cellContents.length; i++) {\n            for (let j = 0; j < cellContents[i].length; j++) {\n                const address = {\n                    sheet: topLeftCornerAddress.sheet,\n                    row: topLeftCornerAddress.row + i,\n                    col: topLeftCornerAddress.col + j,\n                };\n                this.clipboardOperations.abortCut();\n                const oldContent = this.operations.getClipboardCell(address);\n                this.operations.setCellContent(address, cellContents[i][j]);\n                modifiedCellContents.push({ address, newContent: cellContents[i][j], oldContent });\n            }\n        }\n        this.undoRedo.saveOperation(new SetCellContentsUndoEntry(modifiedCellContents));\n    }\n    setSheetContent(sheetName, values) {\n        this.ensureSheetExists(sheetName);\n        const sheetId = this.sheetMapping.fetch(sheetName);\n        this.ensureItIsPossibleToChangeSheetContents(sheetId, values);\n        validateAsSheet(values);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const oldSheetContent = this.operations.getSheetClipboardCells(sheetId);\n        this.operations.setSheetContent(sheetId, values);\n        this.undoRedo.saveOperation(new SetSheetContentUndoEntry(sheetId, oldSheetContent, values));\n    }\n    setRowOrder(sheetId, rowMapping) {\n        this.validateSwapRowIndexes(sheetId, rowMapping);\n        this.testRowOrderForMatrices(sheetId, rowMapping);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const oldContent = this.operations.setRowOrder(sheetId, rowMapping);\n        this.undoRedo.saveOperation(new SetRowOrderUndoEntry(sheetId, rowMapping, oldContent));\n    }\n    validateSwapRowIndexes(sheetId, rowMapping) {\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        this.validateRowOrColumnMapping(sheetId, rowMapping, 'row');\n    }\n    testColumnOrderForMatrices(sheetId, columnMapping) {\n        for (const [source, target] of columnMapping) {\n            if (source !== target) {\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: source, row: 0 }, 1, Infinity);\n                if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(rowRange)) {\n                    throw new SourceLocationHasMatrixError();\n                }\n            }\n        }\n    }\n    setColumnOrder(sheetId, columnMapping) {\n        this.validateSwapColumnIndexes(sheetId, columnMapping);\n        this.testColumnOrderForMatrices(sheetId, columnMapping);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        const oldContent = this.operations.setColumnOrder(sheetId, columnMapping);\n        this.undoRedo.saveOperation(new SetColumnOrderUndoEntry(sheetId, columnMapping, oldContent));\n    }\n    validateSwapColumnIndexes(sheetId, columnMapping) {\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        this.validateRowOrColumnMapping(sheetId, columnMapping, 'column');\n    }\n    testRowOrderForMatrices(sheetId, rowMapping) {\n        for (const [source, target] of rowMapping) {\n            if (source !== target) {\n                const rowRange = AbsoluteCellRange.spanFrom({ sheet: sheetId, col: 0, row: source }, Infinity, 1);\n                if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(rowRange)) {\n                    throw new SourceLocationHasMatrixError();\n                }\n            }\n        }\n    }\n    mappingFromOrder(sheetId, newOrder, rowOrColumn) {\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\n        if (newOrder.length !== limit) {\n            throw new InvalidArgumentsError(`number of ${rowOrColumn}s provided to be sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\n        }\n        const ret = [];\n        for (let i = 0; i < limit; i++) {\n            if (newOrder[i] !== i) {\n                ret.push([i, newOrder[i]]);\n            }\n        }\n        return ret;\n    }\n    validateRowOrColumnMapping(sheetId, rowMapping, rowOrColumn) {\n        const limit = rowOrColumn === 'row' ? this.dependencyGraph.getSheetHeight(sheetId) : this.dependencyGraph.getSheetWidth(sheetId);\n        const sources = rowMapping.map(([a, _]) => a).sort((a, b) => a - b);\n        const targets = rowMapping.map(([_, b]) => b).sort((a, b) => a - b);\n        for (let i = 0; i < sources.length; i++) {\n            if (!isNonnegativeInteger(sources[i]) || sources[i] >= limit) {\n                throw new InvalidArgumentsError(`${rowOrColumn} numbers to be nonnegative integers and less than sheet ${rowOrColumn === 'row' ? 'height' : 'width'}.`);\n            }\n            if (sources[i] === sources[i + 1]) {\n                throw new InvalidArgumentsError(`source ${rowOrColumn} numbers to be unique.`);\n            }\n            if (sources[i] !== targets[i]) {\n                throw new InvalidArgumentsError(`target ${rowOrColumn} numbers to be permutation of source ${rowOrColumn} numbers.`);\n            }\n        }\n    }\n    undo() {\n        if (this.undoRedo.isUndoStackEmpty()) {\n            throw new NoOperationToUndoError();\n        }\n        this.clipboardOperations.abortCut();\n        this.undoRedo.undo();\n    }\n    redo() {\n        if (this.undoRedo.isRedoStackEmpty()) {\n            throw new NoOperationToRedoError();\n        }\n        this.clipboardOperations.abortCut();\n        this.undoRedo.redo();\n    }\n    addNamedExpression(expressionName, expression, sheetScope, options) {\n        const sheetId = this.scopeId(sheetScope);\n        this.ensureNamedExpressionNameIsValid(expressionName, sheetId);\n        this.operations.addNamedExpression(expressionName, expression, sheetId, options);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.undoRedo.saveOperation(new AddNamedExpressionUndoEntry(expressionName, expression, sheetId, options));\n    }\n    changeNamedExpressionExpression(expressionName, sheetScope, newExpression, options) {\n        const sheetId = this.scopeId(sheetScope);\n        const [oldNamedExpression, content] = this.operations.changeNamedExpressionExpression(expressionName, newExpression, sheetId, options);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.undoRedo.saveOperation(new ChangeNamedExpressionUndoEntry(oldNamedExpression, newExpression, content, sheetId, options));\n    }\n    removeNamedExpression(expressionName, sheetScope) {\n        const sheetId = this.scopeId(sheetScope);\n        const [namedExpression, content] = this.operations.removeNamedExpression(expressionName, sheetId);\n        this.undoRedo.clearRedoStack();\n        this.clipboardOperations.abortCut();\n        this.undoRedo.saveOperation(new RemoveNamedExpressionUndoEntry(namedExpression, content, sheetId));\n        return namedExpression;\n    }\n    ensureItIsPossibleToAddNamedExpression(expressionName, expression, sheetScope) {\n        const scopeId = this.scopeId(sheetScope);\n        this.ensureNamedExpressionNameIsValid(expressionName, scopeId);\n        this.ensureNamedExpressionIsValid(expression);\n    }\n    ensureItIsPossibleToChangeNamedExpression(expressionName, expression, sheetScope) {\n        const scopeId = this.scopeId(sheetScope);\n        if (this.namedExpressions.namedExpressionForScope(expressionName, scopeId) === undefined) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n        this.ensureNamedExpressionIsValid(expression);\n    }\n    isItPossibleToRemoveNamedExpression(expressionName, sheetScope) {\n        const scopeId = this.scopeId(sheetScope);\n        if (this.namedExpressions.namedExpressionForScope(expressionName, scopeId) === undefined) {\n            throw new NamedExpressionDoesNotExistError(expressionName);\n        }\n    }\n    ensureItIsPossibleToAddRows(sheet, ...indexes) {\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\n            throw new NoSheetWithIdError(sheet);\n        }\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const newRowsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\n        if (sheetHeight + newRowsCount > this.config.maxRows) {\n            throw new SheetSizeLimitExceededError();\n        }\n        for (const [row, numberOfRowsToAdd] of indexes) {\n            if (!isNonnegativeInteger(row) || !isPositiveInteger(numberOfRowsToAdd)) {\n                throw new InvalidArgumentsError('row number to be nonnegative and number of rows to add to be positive.');\n            }\n            if (isPositiveInteger(row)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInRow(sheet, row - 1)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInRow(sheet, row)) {\n                throw new TargetLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToRemoveRows(sheet, ...indexes) {\n        for (const [rowStart, numberOfRows] of indexes) {\n            const rowEnd = rowStart + numberOfRows - 1;\n            if (!isNonnegativeInteger(rowStart) || !isNonnegativeInteger(rowEnd)) {\n                throw new InvalidArgumentsError('starting and ending row to be nonnegative.');\n            }\n            if (rowEnd < rowStart) {\n                throw new InvalidArgumentsError('starting row to be smaller than the ending row.');\n            }\n            const rowsToRemove = RowsSpan.fromRowStartAndEnd(sheet, rowStart, rowEnd);\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\n                throw new NoSheetWithIdError(sheet);\n            }\n            if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRows(rowsToRemove)) {\n                throw new SourceLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToAddColumns(sheet, ...indexes) {\n        if (!this.sheetMapping.hasSheetWithId(sheet)) {\n            throw new NoSheetWithIdError(sheet);\n        }\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n        const newColumnsCount = indexes.map(index => index[1]).reduce((a, b) => a + b, 0);\n        if (sheetWidth + newColumnsCount > this.config.maxColumns) {\n            throw new SheetSizeLimitExceededError();\n        }\n        for (const [column, numberOfColumnsToAdd] of indexes) {\n            if (!isNonnegativeInteger(column) || !isPositiveInteger(numberOfColumnsToAdd)) {\n                throw new InvalidArgumentsError('column number to be nonnegative and number of columns to add to be positive.');\n            }\n            if (isPositiveInteger(column)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInColumn(sheet, column - 1)\n                && this.dependencyGraph.matrixMapping.isFormulaMatrixInColumn(sheet, column)) {\n                throw new TargetLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToRemoveColumns(sheet, ...indexes) {\n        for (const [columnStart, numberOfColumns] of indexes) {\n            const columnEnd = columnStart + numberOfColumns - 1;\n            if (!isNonnegativeInteger(columnStart) || !isNonnegativeInteger(columnEnd)) {\n                throw new InvalidArgumentsError('starting and ending column to be nonnegative.');\n            }\n            if (columnEnd < columnStart) {\n                throw new InvalidArgumentsError('starting column to be smaller than the ending column.');\n            }\n            const columnsToRemove = ColumnsSpan.fromColumnStartAndEnd(sheet, columnStart, columnEnd);\n            if (!this.sheetMapping.hasSheetWithId(sheet)) {\n                throw new NoSheetWithIdError(sheet);\n            }\n            if (this.dependencyGraph.matrixMapping.isFormulaMatrixInColumns(columnsToRemove)) {\n                throw new SourceLocationHasMatrixError();\n            }\n        }\n    }\n    ensureItIsPossibleToMoveRows(sheet, startRow, numberOfRows, targetRow) {\n        this.ensureItIsPossibleToAddRows(sheet, [targetRow, numberOfRows]);\n        const sourceStart = simpleCellAddress(sheet, 0, startRow);\n        const targetStart = simpleCellAddress(sheet, 0, targetRow);\n        if (!this.sheetMapping.hasSheetWithId(sheet)\n            || invalidSimpleCellAddress(sourceStart)\n            || invalidSimpleCellAddress(targetStart)\n            || !isPositiveInteger(numberOfRows)\n            || (targetRow <= startRow + numberOfRows && targetRow >= startRow)) {\n            throw new InvalidArgumentsError('a valid range of rows to move.');\n        }\n        const width = this.dependencyGraph.getSheetWidth(sheet);\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, width, numberOfRows);\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(sourceRange)) {\n            throw new SourceLocationHasMatrixError();\n        }\n    }\n    ensureItIsPossibleToMoveColumns(sheet, startColumn, numberOfColumns, targetColumn) {\n        this.ensureItIsPossibleToAddColumns(sheet, [targetColumn, numberOfColumns]);\n        const sourceStart = simpleCellAddress(sheet, startColumn, 0);\n        const targetStart = simpleCellAddress(sheet, targetColumn, 0);\n        if (!this.sheetMapping.hasSheetWithId(sheet)\n            || invalidSimpleCellAddress(sourceStart)\n            || invalidSimpleCellAddress(targetStart)\n            || !isPositiveInteger(numberOfColumns)\n            || (targetColumn <= startColumn + numberOfColumns && targetColumn >= startColumn)) {\n            throw new InvalidArgumentsError('a valid range of columns to move.');\n        }\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const sourceRange = AbsoluteCellRange.spanFrom(sourceStart, numberOfColumns, sheetHeight);\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixInRange(sourceRange)) {\n            throw new SourceLocationHasMatrixError();\n        }\n    }\n    ensureItIsPossibleToAddSheet(name) {\n        if (this.sheetMapping.hasSheetWithName(name)) {\n            throw new SheetNameAlreadyTakenError(name);\n        }\n    }\n    ensureItIsPossibleToRenameSheet(sheetId, name) {\n        if (!this.sheetMapping.hasSheetWithId(sheetId)) {\n            throw new NoSheetWithIdError(sheetId);\n        }\n        const existingSheetId = this.sheetMapping.get(name);\n        if (existingSheetId !== undefined && existingSheetId !== sheetId) {\n            throw new SheetNameAlreadyTakenError(name);\n        }\n    }\n    ensureItIsPossibleToChangeContent(address) {\n        if (invalidSimpleCellAddress(address)) {\n            throw new InvalidAddressError(address);\n        }\n        if (!this.sheetMapping.hasSheetWithId(address.sheet)) {\n            throw new NoSheetWithIdError(address.sheet);\n        }\n        if (this.dependencyGraph.matrixMapping.isFormulaMatrixAtAddress(address)) {\n            throw new SourceLocationHasMatrixError();\n        }\n    }\n    ensureItIsPossibleToChangeCellContents(inputAddress, content) {\n        const boundaries = findBoundaries(content);\n        const targetRange = AbsoluteCellRange.spanFrom(inputAddress, boundaries.width, boundaries.height);\n        this.ensureRangeInSizeLimits(targetRange);\n        for (const address of targetRange.addresses(this.dependencyGraph)) {\n            this.ensureItIsPossibleToChangeContent(address);\n        }\n    }\n    ensureItIsPossibleToChangeSheetContents(sheetId, content) {\n        const boundaries = findBoundaries(content);\n        const targetRange = AbsoluteCellRange.spanFrom(simpleCellAddress(sheetId, 0, 0), boundaries.width, boundaries.height);\n        this.ensureRangeInSizeLimits(targetRange);\n    }\n    ensureRangeInSizeLimits(range) {\n        if (range.exceedsSheetSizeLimits(this.config.maxColumns, this.config.maxRows)) {\n            throw new SheetSizeLimitExceededError();\n        }\n    }\n    isThereSomethingToUndo() {\n        return !this.undoRedo.isUndoStackEmpty();\n    }\n    isThereSomethingToRedo() {\n        return !this.undoRedo.isRedoStackEmpty();\n    }\n    getAndClearContentChanges() {\n        return this.operations.getAndClearContentChanges();\n    }\n    ensureSheetExists(sheetName) {\n        if (!this.sheetMapping.hasSheetWithName(sheetName)) {\n            throw new NoSheetWithNameError(sheetName);\n        }\n    }\n    scopeId(sheetName) {\n        if (sheetName !== undefined) {\n            this.ensureSheetExists(sheetName);\n            return this.sheetMapping.fetch(sheetName);\n        }\n        return undefined;\n    }\n    get sheetMapping() {\n        return this.dependencyGraph.sheetMapping;\n    }\n    ensureNamedExpressionNameIsValid(expressionName, sheetId) {\n        if (!this.namedExpressions.isNameValid(expressionName)) {\n            throw new NamedExpressionNameIsInvalidError(expressionName);\n        }\n        if (!this.namedExpressions.isNameAvailable(expressionName, sheetId)) {\n            throw new NamedExpressionNameIsAlreadyTakenError(expressionName);\n        }\n    }\n    ensureNamedExpressionIsValid(expression) {\n        const parsedExpression = this.cellContentParser.parse(expression);\n        if (parsedExpression instanceof CellContent.MatrixFormula) {\n            throw new MatrixFormulasNotSupportedError();\n        }\n        else if (parsedExpression instanceof CellContent.Formula) {\n            const parsingResult = this.parser.parse(parsedExpression.formula, simpleCellAddress(-1, 0, 0));\n            if (doesContainRelativeReferences(parsingResult.ast)) {\n                throw new NoRelativeAddressesAllowedError();\n            }\n        }\n    }\n}\nfunction isPositiveInteger(x) {\n    return Number.isInteger(x) && x > 0;\n}\nfunction isNonnegativeInteger(x) {\n    return Number.isInteger(x) && x >= 0;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { AddColumnsCommand, AddRowsCommand, RemoveColumnsCommand, RemoveRowsCommand } from './Operations';\nexport class BaseUndoEntry {\n}\nexport class RemoveRowsUndoEntry extends BaseUndoEntry {\n    constructor(command, rowsRemovals) {\n        super();\n        this.command = command;\n        this.rowsRemovals = rowsRemovals;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoRemoveRows(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoRemoveRows(this);\n    }\n}\nexport class MoveCellsUndoEntry extends BaseUndoEntry {\n    constructor(sourceLeftCorner, width, height, destinationLeftCorner, overwrittenCellsData, addedGlobalNamedExpressions, version) {\n        super();\n        this.sourceLeftCorner = sourceLeftCorner;\n        this.width = width;\n        this.height = height;\n        this.destinationLeftCorner = destinationLeftCorner;\n        this.overwrittenCellsData = overwrittenCellsData;\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n        this.version = version;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoMoveCells(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoMoveCells(this);\n    }\n}\nexport class AddRowsUndoEntry extends BaseUndoEntry {\n    constructor(command) {\n        super();\n        this.command = command;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoAddRows(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoAddRows(this);\n    }\n}\nexport class SetRowOrderUndoEntry extends BaseUndoEntry {\n    constructor(sheetId, rowMapping, oldContent) {\n        super();\n        this.sheetId = sheetId;\n        this.rowMapping = rowMapping;\n        this.oldContent = oldContent;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoSetRowOrder(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoSetRowOrder(this);\n    }\n}\nexport class SetColumnOrderUndoEntry extends BaseUndoEntry {\n    constructor(sheetId, columnMapping, oldContent) {\n        super();\n        this.sheetId = sheetId;\n        this.columnMapping = columnMapping;\n        this.oldContent = oldContent;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoSetColumnOrder(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoSetColumnOrder(this);\n    }\n}\nexport class SetSheetContentUndoEntry extends BaseUndoEntry {\n    constructor(sheetId, oldSheetContent, newSheetContent) {\n        super();\n        this.sheetId = sheetId;\n        this.oldSheetContent = oldSheetContent;\n        this.newSheetContent = newSheetContent;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoSetSheetContent(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoSetSheetContent(this);\n    }\n}\nexport class MoveRowsUndoEntry extends BaseUndoEntry {\n    constructor(sheet, startRow, numberOfRows, targetRow, version) {\n        super();\n        this.sheet = sheet;\n        this.startRow = startRow;\n        this.numberOfRows = numberOfRows;\n        this.targetRow = targetRow;\n        this.version = version;\n        this.undoStart = this.startRow < this.targetRow ? this.targetRow - this.numberOfRows : this.targetRow;\n        this.undoEnd = this.startRow > this.targetRow ? this.startRow + this.numberOfRows : this.startRow;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoMoveRows(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoMoveRows(this);\n    }\n}\nexport class MoveColumnsUndoEntry extends BaseUndoEntry {\n    constructor(sheet, startColumn, numberOfColumns, targetColumn, version) {\n        super();\n        this.sheet = sheet;\n        this.startColumn = startColumn;\n        this.numberOfColumns = numberOfColumns;\n        this.targetColumn = targetColumn;\n        this.version = version;\n        this.undoStart = this.startColumn < this.targetColumn ? this.targetColumn - this.numberOfColumns : this.targetColumn;\n        this.undoEnd = this.startColumn > this.targetColumn ? this.startColumn + this.numberOfColumns : this.startColumn;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoMoveColumns(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoMoveColumns(this);\n    }\n}\nexport class AddColumnsUndoEntry extends BaseUndoEntry {\n    constructor(command) {\n        super();\n        this.command = command;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoAddColumns(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoAddColumns(this);\n    }\n}\nexport class RemoveColumnsUndoEntry extends BaseUndoEntry {\n    constructor(command, columnsRemovals) {\n        super();\n        this.command = command;\n        this.columnsRemovals = columnsRemovals;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoRemoveColumns(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoRemoveColumns(this);\n    }\n}\nexport class AddSheetUndoEntry extends BaseUndoEntry {\n    constructor(sheetName) {\n        super();\n        this.sheetName = sheetName;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoAddSheet(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoAddSheet(this);\n    }\n}\nexport class RemoveSheetUndoEntry extends BaseUndoEntry {\n    constructor(sheetName, sheetId, oldSheetContent, scopedNamedExpressions, version) {\n        super();\n        this.sheetName = sheetName;\n        this.sheetId = sheetId;\n        this.oldSheetContent = oldSheetContent;\n        this.scopedNamedExpressions = scopedNamedExpressions;\n        this.version = version;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoRemoveSheet(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoRemoveSheet(this);\n    }\n}\nexport class RenameSheetUndoEntry extends BaseUndoEntry {\n    constructor(sheetId, oldName, newName) {\n        super();\n        this.sheetId = sheetId;\n        this.oldName = oldName;\n        this.newName = newName;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoRenameSheet(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoRenameSheet(this);\n    }\n}\nexport class ClearSheetUndoEntry extends BaseUndoEntry {\n    constructor(sheetId, oldSheetContent) {\n        super();\n        this.sheetId = sheetId;\n        this.oldSheetContent = oldSheetContent;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoClearSheet(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoClearSheet(this);\n    }\n}\nexport class SetCellContentsUndoEntry extends BaseUndoEntry {\n    constructor(cellContents) {\n        super();\n        this.cellContents = cellContents;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoSetCellContents(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoSetCellContents(this);\n    }\n}\nexport class PasteUndoEntry extends BaseUndoEntry {\n    constructor(targetLeftCorner, oldContent, newContent, addedGlobalNamedExpressions) {\n        super();\n        this.targetLeftCorner = targetLeftCorner;\n        this.oldContent = oldContent;\n        this.newContent = newContent;\n        this.addedGlobalNamedExpressions = addedGlobalNamedExpressions;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoPaste(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoPaste(this);\n    }\n}\nexport class AddNamedExpressionUndoEntry extends BaseUndoEntry {\n    constructor(name, newContent, scope, options) {\n        super();\n        this.name = name;\n        this.newContent = newContent;\n        this.scope = scope;\n        this.options = options;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoAddNamedExpression(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoAddNamedExpression(this);\n    }\n}\nexport class RemoveNamedExpressionUndoEntry extends BaseUndoEntry {\n    constructor(namedExpression, content, scope) {\n        super();\n        this.namedExpression = namedExpression;\n        this.content = content;\n        this.scope = scope;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoRemoveNamedExpression(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoRemoveNamedExpression(this);\n    }\n}\nexport class ChangeNamedExpressionUndoEntry extends BaseUndoEntry {\n    constructor(namedExpression, newContent, oldContent, scope, options) {\n        super();\n        this.namedExpression = namedExpression;\n        this.newContent = newContent;\n        this.oldContent = oldContent;\n        this.scope = scope;\n        this.options = options;\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoChangeNamedExpression(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoChangeNamedExpression(this);\n    }\n}\nexport class BatchUndoEntry extends BaseUndoEntry {\n    constructor() {\n        super(...arguments);\n        this.operations = [];\n    }\n    add(operation) {\n        this.operations.push(operation);\n    }\n    *reversedOperations() {\n        for (let i = this.operations.length - 1; i >= 0; i--) {\n            yield this.operations[i];\n        }\n    }\n    doUndo(undoRedo) {\n        undoRedo.undoBatch(this);\n    }\n    doRedo(undoRedo) {\n        undoRedo.redoBatch(this);\n    }\n}\nexport class UndoRedo {\n    constructor(config, operations) {\n        this.operations = operations;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.oldData = new Map();\n        this.undoLimit = config.undoLimit;\n    }\n    saveOperation(operation) {\n        if (this.batchUndoEntry !== undefined) {\n            this.batchUndoEntry.add(operation);\n        }\n        else {\n            this.addUndoEntry(operation);\n        }\n    }\n    beginBatchMode() {\n        this.batchUndoEntry = new BatchUndoEntry();\n    }\n    addUndoEntry(operation) {\n        this.undoStack.push(operation);\n        this.undoStack.splice(0, Math.max(0, this.undoStack.length - this.undoLimit));\n    }\n    commitBatchMode() {\n        if (this.batchUndoEntry === undefined) {\n            throw 'Batch mode wasn\\'t started';\n        }\n        this.addUndoEntry(this.batchUndoEntry);\n        this.batchUndoEntry = undefined;\n    }\n    storeDataForVersion(version, address, astHash) {\n        if (!this.oldData.has(version)) {\n            this.oldData.set(version, []);\n        }\n        const currentOldData = this.oldData.get(version);\n        currentOldData.push([address, astHash]);\n    }\n    clearRedoStack() {\n        this.redoStack = [];\n    }\n    clearUndoStack() {\n        this.undoStack = [];\n    }\n    isUndoStackEmpty() {\n        return this.undoStack.length === 0;\n    }\n    isRedoStackEmpty() {\n        return this.redoStack.length === 0;\n    }\n    undo() {\n        const operation = this.undoStack.pop();\n        if (!operation) {\n            throw 'Attempted to undo without operation on stack';\n        }\n        this.undoEntry(operation);\n        this.redoStack.push(operation);\n    }\n    undoEntry(operation) {\n        operation.doUndo(this);\n    }\n    undoBatch(batchOperation) {\n        for (const operation of batchOperation.reversedOperations()) {\n            this.undoEntry(operation);\n        }\n    }\n    undoRemoveRows(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        const { command: { sheet }, rowsRemovals } = operation;\n        for (let i = rowsRemovals.length - 1; i >= 0; --i) {\n            const rowsRemoval = rowsRemovals[i];\n            this.operations.addRows(new AddRowsCommand(sheet, [[rowsRemoval.rowFrom, rowsRemoval.rowCount]]));\n            for (const { address, cellType } of rowsRemoval.removedCells) {\n                this.operations.restoreCell(address, cellType);\n            }\n            this.restoreOldDataFromVersion(rowsRemoval.version - 1);\n        }\n    }\n    undoRemoveColumns(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        const { command: { sheet }, columnsRemovals } = operation;\n        for (let i = columnsRemovals.length - 1; i >= 0; --i) {\n            const columnsRemoval = columnsRemovals[i];\n            this.operations.addColumns(new AddColumnsCommand(sheet, [[columnsRemoval.columnFrom, columnsRemoval.columnCount]]));\n            for (const { address, cellType } of columnsRemoval.removedCells) {\n                this.operations.restoreCell(address, cellType);\n            }\n            this.restoreOldDataFromVersion(columnsRemoval.version - 1);\n        }\n    }\n    undoAddRows(operation) {\n        const addedRowsSpans = operation.command.rowsSpans();\n        for (let i = addedRowsSpans.length - 1; i >= 0; --i) {\n            const addedRows = addedRowsSpans[i];\n            this.operations.removeRows(new RemoveRowsCommand(operation.command.sheet, [[addedRows.rowStart, addedRows.numberOfRows]]));\n        }\n    }\n    undoAddColumns(operation) {\n        const addedColumnsSpans = operation.command.columnsSpans();\n        for (let i = addedColumnsSpans.length - 1; i >= 0; --i) {\n            const addedColumns = addedColumnsSpans[i];\n            this.operations.removeColumns(new RemoveColumnsCommand(operation.command.sheet, [[addedColumns.columnStart, addedColumns.numberOfColumns]]));\n        }\n    }\n    undoSetCellContents(operation) {\n        for (const cellContentData of operation.cellContents) {\n            this.operations.restoreCell(cellContentData.address, cellContentData.oldContent);\n        }\n    }\n    undoPaste(operation) {\n        this.restoreOperationOldContent(operation.oldContent);\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\n            this.operations.removeNamedExpression(namedExpression);\n        }\n    }\n    undoMoveRows(operation) {\n        const { sheet } = operation;\n        this.operations.moveRows(sheet, operation.undoStart, operation.numberOfRows, operation.undoEnd);\n        this.restoreOldDataFromVersion(operation.version - 1);\n    }\n    undoMoveColumns(operation) {\n        const { sheet } = operation;\n        this.operations.moveColumns(sheet, operation.undoStart, operation.numberOfColumns, operation.undoEnd);\n        this.restoreOldDataFromVersion(operation.version - 1);\n    }\n    undoMoveCells(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        this.operations.moveCells(operation.destinationLeftCorner, operation.width, operation.height, operation.sourceLeftCorner);\n        this.restoreOperationOldContent(operation.overwrittenCellsData);\n        this.restoreOldDataFromVersion(operation.version - 1);\n        for (const namedExpression of operation.addedGlobalNamedExpressions) {\n            this.operations.removeNamedExpression(namedExpression);\n        }\n    }\n    undoAddSheet(operation) {\n        const { sheetName } = operation;\n        this.operations.removeSheet(sheetName);\n    }\n    undoRemoveSheet(operation) {\n        this.operations.forceApplyPostponedTransformations();\n        const { oldSheetContent, sheetId } = operation;\n        this.operations.addSheet(operation.sheetName);\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n            const row = oldSheetContent[rowIndex];\n            for (let col = 0; col < row.length; col++) {\n                const cellType = row[col];\n                const address = simpleCellAddress(sheetId, col, rowIndex);\n                this.operations.restoreCell(address, cellType);\n            }\n        }\n        for (const [namedexpression, content] of operation.scopedNamedExpressions) {\n            this.operations.restoreNamedExpression(namedexpression, content, sheetId);\n        }\n        this.restoreOldDataFromVersion(operation.version - 1);\n    }\n    undoRenameSheet(operation) {\n        this.operations.renameSheet(operation.sheetId, operation.oldName);\n    }\n    undoClearSheet(operation) {\n        const { oldSheetContent, sheetId } = operation;\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n            const row = oldSheetContent[rowIndex];\n            for (let col = 0; col < row.length; col++) {\n                const cellType = row[col];\n                const address = simpleCellAddress(sheetId, col, rowIndex);\n                this.operations.restoreCell(address, cellType);\n            }\n        }\n    }\n    undoSetSheetContent(operation) {\n        const { oldSheetContent, sheetId } = operation;\n        this.operations.clearSheet(sheetId);\n        for (let rowIndex = 0; rowIndex < oldSheetContent.length; rowIndex++) {\n            const row = oldSheetContent[rowIndex];\n            for (let col = 0; col < row.length; col++) {\n                const cellType = row[col];\n                const address = simpleCellAddress(sheetId, col, rowIndex);\n                this.operations.restoreCell(address, cellType);\n            }\n        }\n    }\n    undoAddNamedExpression(operation) {\n        this.operations.removeNamedExpression(operation.name, operation.scope);\n    }\n    undoRemoveNamedExpression(operation) {\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.content, operation.scope);\n    }\n    undoChangeNamedExpression(operation) {\n        this.operations.restoreNamedExpression(operation.namedExpression, operation.oldContent, operation.scope);\n    }\n    undoSetRowOrder(operation) {\n        this.restoreOperationOldContent(operation.oldContent);\n    }\n    undoSetColumnOrder(operation) {\n        this.restoreOperationOldContent(operation.oldContent);\n    }\n    restoreOperationOldContent(oldContent) {\n        for (const [address, clipboardCell] of oldContent) {\n            this.operations.restoreCell(address, clipboardCell);\n        }\n    }\n    redo() {\n        const operation = this.redoStack.pop();\n        if (!operation) {\n            throw 'Attempted to redo without operation on stack';\n        }\n        this.redoEntry(operation);\n        this.undoStack.push(operation);\n    }\n    redoEntry(operation) {\n        operation.doRedo(this);\n    }\n    redoBatch(batchOperation) {\n        for (const operation of batchOperation.operations) {\n            this.redoEntry(operation);\n        }\n    }\n    redoRemoveRows(operation) {\n        this.operations.removeRows(operation.command);\n    }\n    redoMoveCells(operation) {\n        this.operations.moveCells(operation.sourceLeftCorner, operation.width, operation.height, operation.destinationLeftCorner);\n    }\n    redoRemoveColumns(operation) {\n        this.operations.removeColumns(operation.command);\n    }\n    redoPaste(operation) {\n        const { targetLeftCorner, newContent } = operation;\n        const height = newContent.length;\n        const width = newContent[0].length;\n        for (let y = 0; y < height; ++y) {\n            for (let x = 0; x < width; ++x) {\n                const address = simpleCellAddress(targetLeftCorner.sheet, targetLeftCorner.col + x, targetLeftCorner.row + y);\n                this.operations.restoreCell(address, newContent[y][x]);\n            }\n        }\n    }\n    redoSetCellContents(operation) {\n        for (const cellContentData of operation.cellContents) {\n            this.operations.setCellContent(cellContentData.address, cellContentData.newContent);\n        }\n    }\n    redoAddRows(operation) {\n        this.operations.addRows(operation.command);\n    }\n    redoAddColumns(operation) {\n        this.operations.addColumns(operation.command);\n    }\n    redoRemoveSheet(operation) {\n        this.operations.removeSheet(operation.sheetName);\n    }\n    redoAddSheet(operation) {\n        this.operations.addSheet(operation.sheetName);\n    }\n    redoRenameSheet(operation) {\n        this.operations.renameSheet(operation.sheetId, operation.newName);\n    }\n    redoMoveRows(operation) {\n        this.operations.moveRows(operation.sheet, operation.startRow, operation.numberOfRows, operation.targetRow);\n    }\n    redoMoveColumns(operation) {\n        this.operations.moveColumns(operation.sheet, operation.startColumn, operation.numberOfColumns, operation.targetColumn);\n    }\n    redoClearSheet(operation) {\n        this.operations.clearSheet(operation.sheetId);\n    }\n    redoSetSheetContent(operation) {\n        const { sheetId, newSheetContent } = operation;\n        this.operations.setSheetContent(sheetId, newSheetContent);\n    }\n    redoAddNamedExpression(operation) {\n        this.operations.addNamedExpression(operation.name, operation.newContent, operation.scope, operation.options);\n    }\n    redoRemoveNamedExpression(operation) {\n        this.operations.removeNamedExpression(operation.namedExpression.displayName, operation.scope);\n    }\n    redoChangeNamedExpression(operation) {\n        this.operations.changeNamedExpressionExpression(operation.namedExpression.displayName, operation.newContent, operation.scope, operation.options);\n    }\n    redoSetRowOrder(operation) {\n        this.operations.setRowOrder(operation.sheetId, operation.rowMapping);\n    }\n    redoSetColumnOrder(operation) {\n        this.operations.setColumnOrder(operation.sheetId, operation.columnMapping);\n    }\n    restoreOldDataFromVersion(version) {\n        const oldDataToRestore = this.oldData.get(version) || [];\n        for (const entryToRestore of oldDataToRestore) {\n            const [address, hash] = entryToRestore;\n            this.operations.setFormulaToCellFromCache(hash, address);\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from './AbsoluteCellRange';\nimport { absolutizeDependencies } from './absolutizeDependencies';\nimport { CellError, ErrorType } from './Cell';\nimport { SimpleRangeValue } from './interpreter/SimpleRangeValue';\nimport { ContentChanges } from './ContentChanges';\nimport { FormulaCellVertex, MatrixVertex, RangeVertex } from './DependencyGraph';\nimport { ErrorMessage } from './error-message';\nimport { Interpreter } from './interpreter/Interpreter';\nimport { EmptyValue, getRawValue } from './interpreter/InterpreterValue';\nimport { Matrix } from './Matrix';\nimport { StatType } from './statistics';\nexport class Evaluator {\n    constructor(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions, serialization) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.config = config;\n        this.stats = stats;\n        this.dateHelper = dateHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n        this.functionRegistry = functionRegistry;\n        this.namedExpressions = namedExpressions;\n        this.serialization = serialization;\n        this.interpreter = new Interpreter(this.dependencyGraph, this.columnSearch, this.config, this.stats, this.dateHelper, this.numberLiteralsHelper, this.functionRegistry, this.namedExpressions, this.serialization);\n    }\n    run() {\n        this.stats.start(StatType.TOP_SORT);\n        const { sorted, cycled } = this.dependencyGraph.topSortWithScc();\n        this.stats.end(StatType.TOP_SORT);\n        this.stats.measure(StatType.EVALUATION, () => {\n            this.recomputeFormulas(cycled, sorted);\n        });\n    }\n    partialRun(vertices) {\n        const changes = new ContentChanges();\n        this.stats.measure(StatType.EVALUATION, () => {\n            this.dependencyGraph.graph.getTopSortedWithSccSubgraphFrom(vertices, (vertex) => {\n                if (vertex instanceof FormulaCellVertex) {\n                    const address = vertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\n                    const formula = vertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n                    const newCellValue = this.evaluateAstToCellValue(formula, address);\n                    vertex.setCellValue(newCellValue);\n                    if (newCellValue !== currentValue) {\n                        changes.addChange(newCellValue, address);\n                        this.columnSearch.change(getRawValue(currentValue), getRawValue(newCellValue), address);\n                        return true;\n                    }\n                    return false;\n                }\n                else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                    const address = vertex.getAddress();\n                    const formula = vertex.getFormula();\n                    const currentValue = vertex.isComputed() ? vertex.getCellValue() : null;\n                    const newCellValue = this.evaluateAstToRangeValue(formula, address);\n                    if (newCellValue instanceof SimpleRangeValue) {\n                        const newCellMatrix = new Matrix(newCellValue.rawNumbers());\n                        vertex.setCellValue(newCellMatrix);\n                        changes.addMatrixChange(newCellMatrix, address);\n                        this.columnSearch.change(currentValue, newCellMatrix, address);\n                    }\n                    else {\n                        vertex.setErrorValue(newCellValue);\n                        changes.addChange(newCellValue, address);\n                        this.columnSearch.change(currentValue, newCellValue, address);\n                    }\n                    return true;\n                }\n                else if (vertex instanceof RangeVertex) {\n                    vertex.clearCache();\n                    return true;\n                }\n                else {\n                    return true;\n                }\n            }, (vertex) => {\n                if (vertex instanceof RangeVertex) {\n                    vertex.clearCache();\n                }\n                else if (vertex instanceof FormulaCellVertex) {\n                    const address = vertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\n                    this.columnSearch.remove(getRawValue(vertex.valueOrNull()), address);\n                    const error = new CellError(ErrorType.CYCLE, undefined, vertex.address);\n                    vertex.setCellValue(error);\n                    changes.addChange(error, vertex.address);\n                }\n            });\n        });\n        return changes;\n    }\n    destroy() {\n        this.interpreter.destroy();\n    }\n    runAndForget(ast, address, dependencies) {\n        const tmpRanges = [];\n        for (const dep of absolutizeDependencies(dependencies, address)) {\n            if (dep instanceof AbsoluteCellRange) {\n                const range = dep;\n                if (this.dependencyGraph.getRange(range.start, range.end) === undefined) {\n                    const rangeVertex = new RangeVertex(range);\n                    this.dependencyGraph.rangeMapping.setRange(rangeVertex);\n                    tmpRanges.push(rangeVertex);\n                }\n            }\n        }\n        const ret = this.evaluateAstToCellValue(ast, address);\n        tmpRanges.forEach((rangeVertex) => {\n            this.dependencyGraph.rangeMapping.removeRange(rangeVertex);\n        });\n        return ret;\n    }\n    /**\n     * Recalculates formulas in the topological sort order\n     */\n    recomputeFormulas(cycled, sorted) {\n        cycled.forEach((vertex) => {\n            if (vertex instanceof FormulaCellVertex) {\n                vertex.setCellValue(new CellError(ErrorType.CYCLE, undefined, vertex.address));\n            }\n        });\n        sorted.forEach((vertex) => {\n            if (vertex instanceof FormulaCellVertex) {\n                const address = vertex.getAddress(this.dependencyGraph.lazilyTransformingAstService);\n                const formula = vertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n                const newCellValue = this.evaluateAstToCellValue(formula, address);\n                vertex.setCellValue(newCellValue);\n                this.columnSearch.add(getRawValue(newCellValue), address);\n            }\n            else if (vertex instanceof MatrixVertex && vertex.isFormula()) {\n                const address = vertex.getAddress();\n                const formula = vertex.getFormula();\n                const newCellValue = this.evaluateAstToRangeValue(formula, address);\n                if (newCellValue instanceof SimpleRangeValue) {\n                    const newCellMatrix = new Matrix(newCellValue.rawNumbers());\n                    vertex.setCellValue(newCellMatrix);\n                    this.columnSearch.add(newCellMatrix, address);\n                }\n                else {\n                    vertex.setErrorValue(newCellValue);\n                    this.columnSearch.add(newCellValue, address);\n                }\n            }\n            else if (vertex instanceof RangeVertex) {\n                vertex.clearCache();\n            }\n        });\n    }\n    evaluateAstToCellValue(ast, formulaAddress) {\n        const interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n        if (interpreterValue instanceof SimpleRangeValue) {\n            return interpreterValue;\n        }\n        else if (interpreterValue === EmptyValue && this.config.evaluateNullToZero) {\n            return 0;\n        }\n        else {\n            return interpreterValue;\n        }\n    }\n    evaluateAstToRangeValue(ast, formulaAddress) {\n        const interpreterValue = this.interpreter.evaluateAst(ast, formulaAddress);\n        if (interpreterValue instanceof CellError) {\n            return interpreterValue;\n        }\n        else if (interpreterValue instanceof SimpleRangeValue && interpreterValue.hasOnlyNumbers()) {\n            return interpreterValue;\n        }\n        else {\n            return new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange, AbsoluteColumnRange, AbsoluteRowRange } from '../AbsoluteCellRange';\nimport { CellError, ErrorType, invalidSimpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { Matrix, NotComputedMatrix } from '../Matrix';\n// noinspection TypeScriptPreferShortImport\nimport { AstNodeType } from '../parser/Ast';\nimport { ArithmeticHelper, coerceScalarToString, fixNegativeZero, isNumberOverflow } from './ArithmeticHelper';\nimport { CriterionBuilder } from './Criterion';\nimport { FunctionRegistry } from './FunctionRegistry';\nimport { cloneNumber, EmptyValue, getRawValue, isExtendedNumber, } from './InterpreterValue';\nimport { SimpleRangeValue } from './SimpleRangeValue';\nexport class Interpreter {\n    constructor(dependencyGraph, columnSearch, config, stats, dateHelper, numberLiteralsHelper, functionRegistry, namedExpressions, serialization) {\n        this.dependencyGraph = dependencyGraph;\n        this.columnSearch = columnSearch;\n        this.config = config;\n        this.stats = stats;\n        this.dateHelper = dateHelper;\n        this.numberLiteralsHelper = numberLiteralsHelper;\n        this.functionRegistry = functionRegistry;\n        this.namedExpressions = namedExpressions;\n        this.serialization = serialization;\n        this.functionRegistry.initializePlugins(this);\n        this.arithmeticHelper = new ArithmeticHelper(config, dateHelper, numberLiteralsHelper);\n        this.criterionBuilder = new CriterionBuilder(config);\n    }\n    evaluateAst(ast, formulaAddress) {\n        let val = this.evaluateAstWithoutPostprocessing(ast, formulaAddress);\n        if (isExtendedNumber(val)) {\n            if (isNumberOverflow(getRawValue(val))) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n            }\n            else {\n                val = cloneNumber(val, fixNegativeZero(getRawValue(val)));\n            }\n        }\n        return wrapperForAddress(val, formulaAddress);\n    }\n    /**\n     * Calculates cell value from formula abstract syntax tree\n     *\n     * @param formula - abstract syntax tree of formula\n     * @param formulaAddress - address of the cell in which formula is located\n     */\n    evaluateAstWithoutPostprocessing(ast, formulaAddress) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        switch (ast.type) {\n            case AstNodeType.EMPTY: {\n                return EmptyValue;\n            }\n            case AstNodeType.CELL_REFERENCE: {\n                const address = ast.reference.toSimpleCellAddress(formulaAddress);\n                if (invalidSimpleCellAddress(address)) {\n                    return new CellError(ErrorType.REF, ErrorMessage.BadRef);\n                }\n                return this.dependencyGraph.getCellValue(address);\n            }\n            case AstNodeType.NUMBER:\n            case AstNodeType.STRING: {\n                return ast.value;\n            }\n            case AstNodeType.CONCATENATE_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_a = passErrors(leftResult, rightResult)) !== null && _a !== void 0 ? _a : wrapperBinary(this.arithmeticHelper.concat, coerceScalarToString(leftResult), coerceScalarToString(rightResult));\n            }\n            case AstNodeType.EQUALS_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_b = passErrors(leftResult, rightResult)) !== null && _b !== void 0 ? _b : this.arithmeticHelper.eq(leftResult, rightResult);\n            }\n            case AstNodeType.NOT_EQUAL_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_c = passErrors(leftResult, rightResult)) !== null && _c !== void 0 ? _c : this.arithmeticHelper.neq(leftResult, rightResult);\n            }\n            case AstNodeType.GREATER_THAN_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_d = passErrors(leftResult, rightResult)) !== null && _d !== void 0 ? _d : this.arithmeticHelper.gt(leftResult, rightResult);\n            }\n            case AstNodeType.LESS_THAN_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_e = passErrors(leftResult, rightResult)) !== null && _e !== void 0 ? _e : this.arithmeticHelper.lt(leftResult, rightResult);\n            }\n            case AstNodeType.GREATER_THAN_OR_EQUAL_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_f = passErrors(leftResult, rightResult)) !== null && _f !== void 0 ? _f : this.arithmeticHelper.geq(leftResult, rightResult);\n            }\n            case AstNodeType.LESS_THAN_OR_EQUAL_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_g = passErrors(leftResult, rightResult)) !== null && _g !== void 0 ? _g : this.arithmeticHelper.leq(leftResult, rightResult);\n            }\n            case AstNodeType.PLUS_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_h = passErrors(leftResult, rightResult)) !== null && _h !== void 0 ? _h : wrapperBinary(this.arithmeticHelper.addWithEpsilon, this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.MINUS_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_j = passErrors(leftResult, rightResult)) !== null && _j !== void 0 ? _j : wrapperBinary(this.arithmeticHelper.subtract, this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.TIMES_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_k = passErrors(leftResult, rightResult)) !== null && _k !== void 0 ? _k : wrapperBinary(this.arithmeticHelper.multiply, this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.POWER_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_l = passErrors(leftResult, rightResult)) !== null && _l !== void 0 ? _l : wrapperBinary(this.arithmeticHelper.pow, this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.DIV_OP: {\n                const leftResult = this.evaluateAst(ast.left, formulaAddress);\n                const rightResult = this.evaluateAst(ast.right, formulaAddress);\n                return (_m = passErrors(leftResult, rightResult)) !== null && _m !== void 0 ? _m : wrapperBinary(this.arithmeticHelper.divide, this.arithmeticHelper.coerceScalarToNumberOrError(leftResult), this.arithmeticHelper.coerceScalarToNumberOrError(rightResult));\n            }\n            case AstNodeType.PLUS_UNARY_OP: {\n                const result = this.evaluateAst(ast.value, formulaAddress);\n                if (result instanceof SimpleRangeValue) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n                }\n                else if (isExtendedNumber(result)) {\n                    return this.arithmeticHelper.unaryPlus(result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case AstNodeType.MINUS_UNARY_OP: {\n                const result = this.evaluateAst(ast.value, formulaAddress);\n                if (result instanceof SimpleRangeValue) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n                }\n                else {\n                    return wrapperUnary(this.arithmeticHelper.unaryMinus, this.arithmeticHelper.coerceScalarToNumberOrError(result));\n                }\n            }\n            case AstNodeType.PERCENT_OP: {\n                const result = this.evaluateAst(ast.value, formulaAddress);\n                if (result instanceof SimpleRangeValue) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n                }\n                else {\n                    return wrapperUnary(this.arithmeticHelper.unaryPercent, this.arithmeticHelper.coerceScalarToNumberOrError(result));\n                }\n            }\n            case AstNodeType.FUNCTION_CALL: {\n                if (this.config.licenseKeyValidityState !== \"valid\" /* VALID */ && !FunctionRegistry.functionIsProtected(ast.procedureName)) {\n                    return new CellError(ErrorType.LIC, ErrorMessage.LicenseKey(this.config.licenseKeyValidityState));\n                }\n                const pluginEntry = this.functionRegistry.getFunction(ast.procedureName);\n                if (pluginEntry && this.config.translationPackage.isFunctionTranslated(ast.procedureName)) {\n                    const [pluginFunction, pluginInstance] = pluginEntry;\n                    return pluginInstance[pluginFunction](ast, formulaAddress);\n                }\n                else {\n                    return new CellError(ErrorType.NAME, ErrorMessage.FunctionName(ast.procedureName));\n                }\n            }\n            case AstNodeType.NAMED_EXPRESSION: {\n                const namedExpression = this.namedExpressions.nearestNamedExpression(ast.expressionName, formulaAddress.sheet);\n                if (namedExpression) {\n                    return this.dependencyGraph.getCellValue(namedExpression.address);\n                }\n                else {\n                    return new CellError(ErrorType.NAME, ErrorMessage.NamedExpressionName(ast.expressionName));\n                }\n            }\n            case AstNodeType.CELL_RANGE: {\n                if (!this.rangeSpansOneSheet(ast)) {\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n                }\n                const range = AbsoluteCellRange.fromCellRange(ast, formulaAddress);\n                const matrixVertex = this.dependencyGraph.getMatrix(range);\n                if (matrixVertex) {\n                    const matrix = matrixVertex.matrix;\n                    if (matrix instanceof NotComputedMatrix) {\n                        throw new Error('Matrix should be already computed');\n                    }\n                    else if (matrix instanceof CellError) {\n                        return matrix;\n                    }\n                    else if (matrix instanceof Matrix) {\n                        return SimpleRangeValue.onlyNumbersDataWithRange(matrix.raw(), matrix.size, range);\n                    }\n                    else {\n                        throw new Error('Unknown matrix');\n                    }\n                }\n                else {\n                    return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n                }\n            }\n            case AstNodeType.COLUMN_RANGE: {\n                if (!this.rangeSpansOneSheet(ast)) {\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n                }\n                const range = AbsoluteColumnRange.fromColumnRange(ast, formulaAddress);\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n            case AstNodeType.ROW_RANGE: {\n                if (!this.rangeSpansOneSheet(ast)) {\n                    return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n                }\n                const range = AbsoluteRowRange.fromRowRange(ast, formulaAddress);\n                return SimpleRangeValue.onlyRange(range, this.dependencyGraph);\n            }\n            case AstNodeType.PARENTHESIS: {\n                return this.evaluateAst(ast.expression, formulaAddress);\n            }\n            case AstNodeType.ERROR_WITH_RAW_INPUT:\n            case AstNodeType.ERROR: {\n                return ast.error;\n            }\n        }\n    }\n    getGpuInstance() {\n        const mode = this.config.gpuMode;\n        const gpujs = this.config.gpujs;\n        if (gpujs === undefined) {\n            throw Error('Cannot instantiate GPU.js. Constructor not provided.');\n        }\n        if (!this.gpu) {\n            this.gpu = new gpujs({ mode });\n        }\n        return this.gpu;\n    }\n    destroy() {\n        if (this.gpu) {\n            this.gpu.destroy();\n        }\n    }\n    rangeSpansOneSheet(ast) {\n        return ast.start.sheet === ast.end.sheet;\n    }\n}\nfunction passErrors(left, right) {\n    if (left instanceof CellError) {\n        return left;\n    }\n    else if (left instanceof SimpleRangeValue) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n    }\n    else if (right instanceof CellError) {\n        return right;\n    }\n    else if (right instanceof SimpleRangeValue) {\n        return new CellError(ErrorType.VALUE, ErrorMessage.ScalarExpected);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction wrapperUnary(op, a) {\n    if (a instanceof CellError) {\n        return a;\n    }\n    else {\n        return op(a);\n    }\n}\nfunction wrapperBinary(op, a, b) {\n    if (a instanceof CellError) {\n        return a;\n    }\n    else if (b instanceof CellError) {\n        return b;\n    }\n    else {\n        return op(a, b);\n    }\n}\nfunction wrapperForAddress(val, adr) {\n    if (val instanceof CellError) {\n        return val.attachAddress(adr);\n    }\n    return val;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { EmptyValue, getRawValue } from './InterpreterValue';\nexport var CriterionType;\n(function (CriterionType) {\n    CriterionType[\"GREATER_THAN\"] = \"GREATER_THAN\";\n    CriterionType[\"GREATER_THAN_OR_EQUAL\"] = \"GREATER_THAN_OR_EQUAL\";\n    CriterionType[\"LESS_THAN\"] = \"LESS_THAN\";\n    CriterionType[\"LESS_THAN_OR_EQUAL\"] = \"LESS_THAN_OR_EQUAL\";\n    CriterionType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\n    CriterionType[\"EQUAL\"] = \"EQUAL\";\n})(CriterionType || (CriterionType = {}));\nexport const buildCriterion = (operator, value) => ({ operator, value });\nexport class CriterionBuilder {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this.trueString = (_b = (_a = config.translationPackage.getMaybeFunctionTranslation('TRUE')) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : 'true';\n        this.falseString = (_d = (_c = config.translationPackage.getMaybeFunctionTranslation('FALSE')) === null || _c === void 0 ? void 0 : _c.toLowerCase()) !== null && _d !== void 0 ? _d : 'false';\n    }\n    fromCellValue(raw, arithmeticHelper) {\n        if (typeof raw !== 'string' && typeof raw !== 'boolean' && typeof raw !== 'number') {\n            return undefined;\n        }\n        const criterion = this.parseCriterion(raw, arithmeticHelper);\n        if (criterion === undefined) {\n            return undefined;\n        }\n        return { raw, lambda: buildCriterionLambda(criterion, arithmeticHelper) };\n    }\n    parseCriterion(criterion, arithmeticHelper) {\n        if (typeof criterion === 'number' || typeof criterion === 'boolean') {\n            return buildCriterion(CriterionType.EQUAL, criterion);\n        }\n        else if (typeof criterion === 'string') {\n            const regexResult = ANY_CRITERION_REGEX.exec(criterion);\n            let criterionValue;\n            let criterionType;\n            if (regexResult) {\n                criterionType = StrToCriterionType(regexResult[1]);\n                criterionValue = regexResult[2];\n            }\n            else {\n                criterionType = CriterionType.EQUAL;\n                criterionValue = criterion;\n            }\n            const value = arithmeticHelper.coerceToMaybeNumber(criterionValue);\n            const boolvalue = criterionValue.toLowerCase() === this.trueString ? true : criterionValue.toLowerCase() === this.falseString ? false : undefined;\n            if (criterionType === undefined) {\n                return undefined;\n            }\n            if (criterionValue === '') {\n                return buildCriterion(criterionType, null);\n            }\n            else if (value === undefined) {\n                if (criterionType === CriterionType.EQUAL || criterionType === CriterionType.NOT_EQUAL) {\n                    return buildCriterion(criterionType, boolvalue !== null && boolvalue !== void 0 ? boolvalue : criterionValue);\n                }\n            }\n            else {\n                return buildCriterion(criterionType, getRawValue(value));\n            }\n        }\n        return undefined;\n    }\n}\nconst ANY_CRITERION_REGEX = /([<>=]+)(.*)/;\nfunction StrToCriterionType(str) {\n    switch (str) {\n        case '>': return CriterionType.GREATER_THAN;\n        case '>=': return CriterionType.GREATER_THAN_OR_EQUAL;\n        case '<': return CriterionType.LESS_THAN;\n        case '<=': return CriterionType.LESS_THAN_OR_EQUAL;\n        case '<>': return CriterionType.NOT_EQUAL;\n        case '=': return CriterionType.EQUAL;\n        default: return undefined;\n    }\n}\nexport const buildCriterionLambda = (criterion, arithmeticHelper) => {\n    switch (criterion.operator) {\n        case CriterionType.GREATER_THAN: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) > 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.GREATER_THAN_OR_EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) >= 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.LESS_THAN: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) < 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.LESS_THAN_OR_EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => (typeof cellValue === 'number' && arithmeticHelper.floatCmp(cellValue, criterion.value) <= 0);\n            }\n            else {\n                return (_cellValue) => false;\n            }\n        }\n        case CriterionType.EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => {\n                    if (typeof cellValue === 'number') {\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) === 0;\n                    }\n                    else if (typeof cellValue === 'string') {\n                        if (cellValue === '') {\n                            return false;\n                        }\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\n                        if (val === undefined) {\n                            return false;\n                        }\n                        return arithmeticHelper.floatCmp(val, criterion.value) === 0;\n                    }\n                    else {\n                        return false;\n                    }\n                };\n            }\n            else if (typeof criterion.value === 'string') {\n                return arithmeticHelper.eqMatcherFunction(criterion.value);\n            }\n            else if (typeof criterion.value === 'boolean') {\n                return (cellValue) => (typeof cellValue === 'boolean' && cellValue === criterion.value);\n            }\n            else {\n                return (cellValue) => (cellValue === EmptyValue);\n            }\n        }\n        case CriterionType.NOT_EQUAL: {\n            if (typeof criterion.value === 'number') {\n                return (cellValue) => {\n                    if (typeof cellValue === 'number') {\n                        return arithmeticHelper.floatCmp(cellValue, criterion.value) !== 0;\n                    }\n                    else if (typeof cellValue === 'string') {\n                        if (cellValue === '') {\n                            return true;\n                        }\n                        const val = arithmeticHelper.coerceToMaybeNumber(cellValue);\n                        if (val === undefined) {\n                            return true;\n                        }\n                        return arithmeticHelper.floatCmp(val, criterion.value) !== 0;\n                    }\n                    else {\n                        return true;\n                    }\n                };\n            }\n            else if (typeof criterion.value === 'string') {\n                return arithmeticHelper.neqMatcherFunction(criterion.value);\n            }\n            else if (typeof criterion.value === 'boolean') {\n                return (cellValue) => (typeof cellValue !== 'boolean' || cellValue !== criterion.value);\n            }\n            else {\n                return (cellValue) => (cellValue !== EmptyValue);\n            }\n        }\n    }\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AliasAlreadyExisting, FunctionPluginValidationError, ProtectedFunctionError } from '../errors';\nimport { HyperFormula } from '../HyperFormula';\nimport { VersionPlugin } from './plugin/VersionPlugin';\nfunction validateAndReturnMetadataFromName(functionId, plugin) {\n    var _a;\n    let entry = plugin.implementedFunctions[functionId];\n    const key = (_a = plugin.aliases) === null || _a === void 0 ? void 0 : _a[functionId];\n    if (key !== undefined) {\n        if (entry !== undefined) {\n            throw new AliasAlreadyExisting(functionId, plugin.name);\n        }\n        entry = plugin.implementedFunctions[key];\n    }\n    if (entry === undefined) {\n        throw FunctionPluginValidationError.functionNotDeclaredInPlugin(functionId, plugin.name);\n    }\n    return entry;\n}\nexport class FunctionRegistry {\n    constructor(config) {\n        this.config = config;\n        this.functions = new Map();\n        this.volatileFunctions = new Set();\n        this.structuralChangeFunctions = new Set();\n        this.functionsWhichDoesNotNeedArgumentsToBeComputed = new Set();\n        this.doesFunctionNeedArgumentToBeComputed = (functionId) => {\n            return this.functionsWhichDoesNotNeedArgumentsToBeComputed.has(functionId);\n        };\n        this.isFunctionVolatile = (functionId) => {\n            return this.volatileFunctions.has(functionId);\n        };\n        this.isFunctionDependentOnSheetStructureChange = (functionId) => {\n            return this.structuralChangeFunctions.has(functionId);\n        };\n        if (config.functionPlugins.length > 0) {\n            this.instancePlugins = new Map();\n            for (const plugin of config.functionPlugins) {\n                FunctionRegistry.loadPluginFunctions(plugin, this.instancePlugins);\n            }\n        }\n        else {\n            this.instancePlugins = new Map(FunctionRegistry.plugins);\n        }\n        for (const [functionId, plugin] of FunctionRegistry.protectedFunctions()) {\n            FunctionRegistry.loadFunctionUnprotected(plugin, functionId, this.instancePlugins);\n        }\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\n            this.categorizeFunction(functionId, validateAndReturnMetadataFromName(functionId, plugin));\n        }\n    }\n    static registerFunctionPlugin(plugin, translations) {\n        this.loadPluginFunctions(plugin, this.plugins);\n        if (translations !== undefined) {\n            this.loadTranslations(translations);\n        }\n    }\n    static registerFunction(functionId, plugin, translations) {\n        this.loadPluginFunction(plugin, functionId, this.plugins);\n        if (translations !== undefined) {\n            this.loadTranslations(translations);\n        }\n    }\n    static unregisterFunction(functionId) {\n        if (this.functionIsProtected(functionId)) {\n            throw ProtectedFunctionError.cannotUnregisterFunctionWithId(functionId);\n        }\n        this.plugins.delete(functionId);\n    }\n    static unregisterFunctionPlugin(plugin) {\n        for (const protectedPlugin of this.protectedPlugins()) {\n            if (protectedPlugin === plugin) {\n                throw ProtectedFunctionError.cannotUnregisterProtectedPlugin();\n            }\n        }\n        for (const [functionId, registeredPlugin] of this.plugins.entries()) {\n            if (registeredPlugin === plugin) {\n                this.plugins.delete(functionId);\n            }\n        }\n    }\n    static unregisterAll() {\n        this.plugins.clear();\n    }\n    static getRegisteredFunctionIds() {\n        return [\n            ...Array.from(this.plugins.keys()),\n            ...Array.from(this._protectedPlugins.keys())\n        ];\n    }\n    static getPlugins() {\n        return Array.from(new Set(this.plugins.values()).values());\n    }\n    static getFunctionPlugin(functionId) {\n        if (this.functionIsProtected(functionId)) {\n            return undefined;\n        }\n        else {\n            return this.plugins.get(functionId);\n        }\n    }\n    static loadTranslations(translations) {\n        const registeredLanguages = new Set(HyperFormula.getRegisteredLanguagesCodes());\n        Object.keys(translations).forEach(code => {\n            if (registeredLanguages.has(code)) {\n                HyperFormula.getLanguage(code).extendFunctions(translations[code]);\n            }\n        });\n    }\n    static loadPluginFunctions(plugin, registry) {\n        Object.keys(plugin.implementedFunctions).forEach((functionName) => {\n            this.loadPluginFunction(plugin, functionName, registry);\n        });\n        if (plugin.aliases !== undefined) {\n            Object.keys(plugin.aliases).forEach((functionName) => {\n                this.loadPluginFunction(plugin, functionName, registry);\n            });\n        }\n    }\n    static loadPluginFunction(plugin, functionId, registry) {\n        if (this.functionIsProtected(functionId)) {\n            throw ProtectedFunctionError.cannotRegisterFunctionWithId(functionId);\n        }\n        else {\n            this.loadFunctionUnprotected(plugin, functionId, registry);\n        }\n    }\n    static loadFunctionUnprotected(plugin, functionId, registry) {\n        const methodName = validateAndReturnMetadataFromName(functionId, plugin).method;\n        if (Object.prototype.hasOwnProperty.call(plugin.prototype, methodName)) {\n            registry.set(functionId, plugin);\n        }\n        else {\n            throw FunctionPluginValidationError.functionMethodNotFound(methodName, plugin.name);\n        }\n    }\n    static functionIsProtected(functionId) {\n        return this._protectedPlugins.has(functionId);\n    }\n    static *protectedFunctions() {\n        for (const [functionId, plugin] of this._protectedPlugins) {\n            if (plugin !== undefined) {\n                yield [functionId, plugin];\n            }\n        }\n    }\n    static *protectedPlugins() {\n        for (const [, plugin] of this._protectedPlugins) {\n            if (plugin !== undefined) {\n                yield plugin;\n            }\n        }\n    }\n    initializePlugins(interpreter) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const instances = [];\n        for (const [functionId, plugin] of this.instancePlugins.entries()) {\n            let foundPluginInstance = instances.find(pluginInstance => pluginInstance instanceof plugin);\n            if (foundPluginInstance === undefined) {\n                foundPluginInstance = new plugin(interpreter);\n                instances.push(foundPluginInstance);\n            }\n            const methodName = validateAndReturnMetadataFromName(functionId, plugin).method;\n            this.functions.set(functionId, [methodName, foundPluginInstance]);\n        }\n    }\n    getFunctionPlugin(functionId) {\n        if (FunctionRegistry.functionIsProtected(functionId)) {\n            return undefined;\n        }\n        return this.instancePlugins.get(functionId);\n    }\n    getFunction(functionId) {\n        return this.functions.get(functionId);\n    }\n    getPlugins() {\n        const plugins = new Set();\n        for (const [functionId, plugin] of this.instancePlugins) {\n            if (!FunctionRegistry.functionIsProtected(functionId)) {\n                plugins.add(plugin);\n            }\n        }\n        return Array.from(plugins);\n    }\n    getRegisteredFunctionIds() {\n        return Array.from(this.functions.keys());\n    }\n    categorizeFunction(functionId, functionMetadata) {\n        if (functionMetadata.isVolatile) {\n            this.volatileFunctions.add(functionId);\n        }\n        if (functionMetadata.doesNotNeedArgumentsToBeComputed) {\n            this.functionsWhichDoesNotNeedArgumentsToBeComputed.add(functionId);\n        }\n        if (functionMetadata.isDependentOnSheetStructureChange) {\n            this.structuralChangeFunctions.add(functionId);\n        }\n    }\n}\nFunctionRegistry.plugins = new Map();\nFunctionRegistry._protectedPlugins = new Map([\n    ['VERSION', VersionPlugin],\n    ['OFFSET', undefined],\n]);\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { HyperFormula } from '../../HyperFormula';\nimport { FunctionPlugin } from './FunctionPlugin';\nconst LICENSE_STATUS_MAP = new Map([\n    ['agpl-v3', 1],\n    ['non-commercial-and-evaluation', 2],\n    [\"missing\" /* MISSING */, 3],\n    [\"invalid\" /* INVALID */, 4],\n    [\"expired\" /* EXPIRED */, 5],\n]);\nexport class VersionPlugin extends FunctionPlugin {\n    version(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('VERSION'), () => {\n            const { licenseKeyValidityState: validityState, licenseKey, } = this.config;\n            let status;\n            if (LICENSE_STATUS_MAP.has(licenseKey)) {\n                status = LICENSE_STATUS_MAP.get(licenseKey);\n            }\n            else if (LICENSE_STATUS_MAP.has(validityState)) {\n                status = LICENSE_STATUS_MAP.get(validityState);\n            }\n            else if (validityState === \"valid\" /* VALID */) {\n                status = licenseKey.slice(-5);\n            }\n            return `HyperFormula v${HyperFormula.version}, ${status}`;\n        });\n    }\n}\nVersionPlugin.implementedFunctions = {\n    'VERSION': {\n        method: 'version',\n        parameters: [],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { coerceScalarToBoolean, coerceScalarToString, coerceToRange } from '../ArithmeticHelper';\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nexport var ArgumentTypes;\n(function (ArgumentTypes) {\n    /**\n     * String type.\n     */\n    ArgumentTypes[\"STRING\"] = \"STRING\";\n    /**\n     * Floating point type.\n     */\n    ArgumentTypes[\"NUMBER\"] = \"NUMBER\";\n    /**\n     * Boolean type.\n     */\n    ArgumentTypes[\"BOOLEAN\"] = \"BOOLEAN\";\n    /**\n     * Any non-range value.\n     */\n    ArgumentTypes[\"SCALAR\"] = \"SCALAR\";\n    /**\n     * Any non-range, no-error type.\n     */\n    ArgumentTypes[\"NOERROR\"] = \"NOERROR\";\n    /**\n     * Range type.\n     */\n    ArgumentTypes[\"RANGE\"] = \"RANGE\";\n    /**\n     * Integer type.\n     */\n    ArgumentTypes[\"INTEGER\"] = \"INTEGER\";\n    /**\n     * String representing complex number.\n     */\n    ArgumentTypes[\"COMPLEX\"] = \"COMPLEX\";\n    /**\n     * Range or scalar.\n     */\n    ArgumentTypes[\"ANY\"] = \"ANY\";\n})(ArgumentTypes || (ArgumentTypes = {}));\n/**\n * Abstract class representing interpreter function plugin.\n * Plugin may contain multiple functions. Each function should be of type {@link PluginFunctionType} and needs to be\n * included in {@link implementedFunctions}\n */\nexport class FunctionPlugin {\n    constructor(interpreter) {\n        this.coerceScalarToNumberOrError = (arg) => this.interpreter.arithmeticHelper.coerceScalarToNumberOrError(arg);\n        this.runFunction = (args, formulaAddress, functionDefinition, fn) => {\n            return this.runFunctionTemplate(args, formulaAddress, functionDefinition, fn);\n        };\n        this.runMatrixFunction = (args, formulaAddress, functionDefinition, fn) => {\n            return this.runFunctionTemplate(args, formulaAddress, functionDefinition, fn);\n        };\n        this.runFunctionTemplate = (args, formulaAddress, functionDefinition, fn) => {\n            var _a, _b, _c;\n            const argumentDefinitions = functionDefinition.parameters;\n            let scalarValues;\n            if (functionDefinition.expandRanges) {\n                scalarValues = this.listOfScalarValues(args, formulaAddress);\n            }\n            else {\n                scalarValues = args.map((ast) => [this.evaluateAst(ast, formulaAddress), false]);\n            }\n            const coercedArguments = [];\n            let argCoerceFailure = undefined;\n            if (functionDefinition.repeatLastArgs === undefined && argumentDefinitions.length < scalarValues.length) {\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n            }\n            if (functionDefinition.repeatLastArgs !== undefined && scalarValues.length > argumentDefinitions.length &&\n                (scalarValues.length - argumentDefinitions.length) % functionDefinition.repeatLastArgs !== 0) {\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n            }\n            for (let i = 0, j = 0; i < Math.max(scalarValues.length, argumentDefinitions.length); i++, j++) {\n                // i points to where are we in the scalarValues list,\n                // j points to where are we in the argumentDefinitions list\n                if (j === argumentDefinitions.length) {\n                    j -= functionDefinition.repeatLastArgs;\n                }\n                const [val, ignorable] = (_a = scalarValues[i]) !== null && _a !== void 0 ? _a : [undefined, undefined];\n                const arg = val !== null && val !== void 0 ? val : (_b = argumentDefinitions[j]) === null || _b === void 0 ? void 0 : _b.defaultValue;\n                if (arg === undefined) {\n                    if ((_c = argumentDefinitions[j]) === null || _c === void 0 ? void 0 : _c.optionalArg) {\n                        coercedArguments.push(undefined);\n                    }\n                    else {\n                        //not enough values passed as arguments, and there was no default value and argument was not optional\n                        return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n                    }\n                }\n                else {\n                    //we apply coerce only to non-default values\n                    const coercedArg = val !== undefined ? this.coerceToType(arg, argumentDefinitions[j]) : arg;\n                    if (coercedArg !== undefined) {\n                        if (coercedArg instanceof CellError && argumentDefinitions[j].argumentType !== ArgumentTypes.SCALAR) {\n                            //if this is first error encountered, store it\n                            argCoerceFailure = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : coercedArg;\n                        }\n                        coercedArguments.push(coercedArg);\n                    }\n                    else if (!ignorable) {\n                        //if this is first error encountered, store it\n                        argCoerceFailure = argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : (new CellError(ErrorType.VALUE, ErrorMessage.WrongType));\n                    }\n                }\n            }\n            return argCoerceFailure !== null && argCoerceFailure !== void 0 ? argCoerceFailure : this.returnNumberWrapper(fn(...coercedArguments), functionDefinition.returnNumberType);\n        };\n        this.runFunctionWithReferenceArgument = (args, formulaAddress, argumentDefinitions, noArgCallback, referenceCallback, nonReferenceCallback = () => new CellError(ErrorType.NA, ErrorMessage.CellRefExpected)) => {\n            if (args.length === 0) {\n                return this.returnNumberWrapper(noArgCallback(), argumentDefinitions.returnNumberType);\n            }\n            else if (args.length > 1) {\n                return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n            }\n            let arg = args[0];\n            while (arg.type === AstNodeType.PARENTHESIS) {\n                arg = arg.expression;\n            }\n            let cellReference;\n            if (arg.type === AstNodeType.CELL_REFERENCE) {\n                cellReference = arg.reference.toSimpleCellAddress(formulaAddress);\n            }\n            else if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\n                try {\n                    cellReference = AbsoluteCellRange.fromAst(arg, formulaAddress).start;\n                }\n                catch (e) {\n                    return new CellError(ErrorType.REF, ErrorMessage.CellRefExpected);\n                }\n            }\n            if (cellReference !== undefined) {\n                return this.returnNumberWrapper(referenceCallback(cellReference), argumentDefinitions.returnNumberType);\n            }\n            return this.runFunction(args, formulaAddress, argumentDefinitions, nonReferenceCallback);\n        };\n        this.interpreter = interpreter;\n        this.dependencyGraph = interpreter.dependencyGraph;\n        this.columnSearch = interpreter.columnSearch;\n        this.config = interpreter.config;\n        this.serialization = interpreter.serialization;\n    }\n    evaluateAst(ast, formulaAddress) {\n        return this.interpreter.evaluateAst(ast, formulaAddress);\n    }\n    listOfScalarValues(asts, formulaAddress) {\n        const ret = [];\n        for (const argAst of asts) {\n            const value = this.evaluateAst(argAst, formulaAddress);\n            if (value instanceof SimpleRangeValue) {\n                for (const scalarValue of value.valuesFromTopLeftCorner()) {\n                    ret.push([scalarValue, true]);\n                }\n            }\n            else {\n                ret.push([value, false]);\n            }\n        }\n        return ret;\n    }\n    coerceToType(arg, coercedType) {\n        let ret;\n        if (arg instanceof SimpleRangeValue) {\n            switch (coercedType.argumentType) {\n                case ArgumentTypes.RANGE:\n                case ArgumentTypes.ANY:\n                    ret = arg;\n                    break;\n                default:\n                    return undefined;\n            }\n        }\n        else {\n            switch (coercedType.argumentType) {\n                case ArgumentTypes.INTEGER:\n                case ArgumentTypes.NUMBER:\n                    // eslint-disable-next-line no-case-declarations\n                    const coerced = this.coerceScalarToNumberOrError(arg);\n                    if (!isExtendedNumber(coerced)) {\n                        ret = coerced;\n                        break;\n                    }\n                    // eslint-disable-next-line no-case-declarations\n                    const value = getRawValue(coerced);\n                    if (coercedType.maxValue !== undefined && value > coercedType.maxValue) {\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n                    }\n                    if (coercedType.minValue !== undefined && value < coercedType.minValue) {\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                    }\n                    if (coercedType.lessThan !== undefined && value >= coercedType.lessThan) {\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n                    }\n                    if (coercedType.greaterThan !== undefined && value <= coercedType.greaterThan) {\n                        return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                    }\n                    if (coercedType.argumentType === ArgumentTypes.INTEGER && !Number.isInteger(value)) {\n                        return new CellError(ErrorType.NUM, ErrorMessage.IntegerExpected);\n                    }\n                    ret = coerced;\n                    break;\n                case ArgumentTypes.STRING:\n                    ret = coerceScalarToString(arg);\n                    break;\n                case ArgumentTypes.BOOLEAN:\n                    ret = coerceScalarToBoolean(arg);\n                    break;\n                case ArgumentTypes.SCALAR:\n                case ArgumentTypes.NOERROR:\n                case ArgumentTypes.ANY:\n                    ret = arg;\n                    break;\n                case ArgumentTypes.RANGE:\n                    if (arg instanceof CellError) {\n                        return arg;\n                    }\n                    ret = coerceToRange(getRawValue(arg));\n                    break;\n                case ArgumentTypes.COMPLEX:\n                    return this.interpreter.arithmeticHelper.coerceScalarToComplex(getRawValue(arg));\n            }\n        }\n        if (coercedType.passSubtype || ret === undefined) {\n            return ret;\n        }\n        else {\n            return getRawValue(ret);\n        }\n    }\n    metadata(name) {\n        const params = this.constructor.implementedFunctions[name];\n        if (params !== undefined) {\n            return params;\n        }\n        throw new Error(`No metadata for function ${name}.`);\n    }\n    returnNumberWrapper(val, type, format) {\n        if (type !== undefined && isExtendedNumber(val)) {\n            return this.interpreter.arithmeticHelper.ExtendedNumberFactory(getRawValue(val), { type, format });\n        }\n        else {\n            return val;\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport class NumberLiteralHelper {\n    constructor(config) {\n        this.config = config;\n        const thousandSeparator = this.config.thousandSeparator === '.' ? `\\\\${this.config.thousandSeparator}` : this.config.thousandSeparator;\n        const decimalSeparator = this.config.decimalSeparator === '.' ? `\\\\${this.config.decimalSeparator}` : this.config.decimalSeparator;\n        this.numberPattern = new RegExp(`^([+-]?((${decimalSeparator}\\\\d+)|(\\\\d+(${thousandSeparator}\\\\d{3,})*(${decimalSeparator}\\\\d*)?)))(e[+-]?\\\\d+)?$`);\n        this.allThousandSeparatorsRegex = new RegExp(`${thousandSeparator}`, 'g');\n    }\n    numericStringToMaybeNumber(input) {\n        if (this.numberPattern.test(input)) {\n            const num = this.numericStringToNumber(input);\n            if (isNaN(num)) {\n                return undefined;\n            }\n            return num;\n        }\n        return undefined;\n    }\n    isNumber(input) {\n        if (this.numberPattern.test(input)) {\n            return !isNaN(this.numericStringToNumber(input));\n        }\n        return false;\n    }\n    numericStringToNumber(input) {\n        const normalized = input\n            .replace(this.allThousandSeparatorsRegex, '')\n            .replace(this.config.decimalSeparator, '.');\n        return Number(normalized);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { simpleCellAddress } from './Cell';\nimport { FormulaCellVertex, MatrixVertex, ParsingErrorVertex } from './DependencyGraph';\nimport { buildLexerConfig, Unparser } from './parser';\nexport class Serialization {\n    constructor(dependencyGraph, unparser, config, exporter) {\n        this.dependencyGraph = dependencyGraph;\n        this.unparser = unparser;\n        this.config = config;\n        this.exporter = exporter;\n    }\n    getCellFormula(address) {\n        const formulaVertex = this.dependencyGraph.getCell(address);\n        if (formulaVertex instanceof FormulaCellVertex) {\n            const formula = formulaVertex.getFormula(this.dependencyGraph.lazilyTransformingAstService);\n            return this.unparser.unparse(formula, address);\n        }\n        else if (formulaVertex instanceof MatrixVertex) {\n            const formula = formulaVertex.getFormula();\n            if (formula) {\n                return '{' + this.unparser.unparse(formula, formulaVertex.getAddress()) + '}';\n            }\n        }\n        else if (formulaVertex instanceof ParsingErrorVertex) {\n            return formulaVertex.getFormula();\n        }\n        return undefined;\n    }\n    getCellSerialized(address) {\n        const formula = this.getCellFormula(address);\n        if (formula !== undefined) {\n            return formula;\n        }\n        else {\n            return this.getRawValue(address);\n        }\n    }\n    getCellValue(address) {\n        return this.exporter.exportValue(this.dependencyGraph.getScalarValue(address));\n    }\n    getRawValue(address) {\n        return this.dependencyGraph.getRawValue(address);\n    }\n    getSheetValues(sheet) {\n        return this.genericSheetGetter(sheet, (arg) => this.getCellValue(arg));\n    }\n    getSheetFormulas(sheet) {\n        return this.genericSheetGetter(sheet, (arg) => this.getCellFormula(arg));\n    }\n    genericSheetGetter(sheet, getter) {\n        const sheetHeight = this.dependencyGraph.getSheetHeight(sheet);\n        const sheetWidth = this.dependencyGraph.getSheetWidth(sheet);\n        const arr = new Array(sheetHeight);\n        for (let i = 0; i < sheetHeight; i++) {\n            arr[i] = new Array(sheetWidth);\n            for (let j = 0; j < sheetWidth; j++) {\n                const address = simpleCellAddress(sheet, j, i);\n                arr[i][j] = getter(address);\n            }\n            for (let j = sheetWidth - 1; j >= 0; j--) {\n                if (arr[i][j] === null || arr[i][j] === undefined) {\n                    arr[i].pop();\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        for (let i = sheetHeight - 1; i >= 0; i--) {\n            if (arr[i].length === 0) {\n                arr.pop();\n            }\n            else {\n                break;\n            }\n        }\n        return arr;\n    }\n    genericAllSheetsGetter(sheetGetter) {\n        const result = {};\n        for (const sheetName of this.dependencyGraph.sheetMapping.displayNames()) {\n            const sheetId = this.dependencyGraph.sheetMapping.fetch(sheetName);\n            result[sheetName] = sheetGetter(sheetId);\n        }\n        return result;\n    }\n    getSheetSerialized(sheet) {\n        return this.genericSheetGetter(sheet, (arg) => this.getCellSerialized(arg));\n    }\n    getAllSheetsValues() {\n        return this.genericAllSheetsGetter((arg) => this.getSheetValues(arg));\n    }\n    getAllSheetsFormulas() {\n        return this.genericAllSheetsGetter((arg) => this.getSheetFormulas(arg));\n    }\n    getAllSheetsSerialized() {\n        return this.genericAllSheetsGetter((arg) => this.getSheetSerialized(arg));\n    }\n    getAllNamedExpressionsSerialized() {\n        return this.dependencyGraph.namedExpressions.getAllNamedExpressions().map((entry) => {\n            const scope = entry.scope !== undefined\n                ? this.dependencyGraph.sheetMapping.fetchDisplayName(entry.scope)\n                : undefined;\n            return {\n                name: entry.expression.displayName,\n                expression: this.getCellSerialized(entry.expression.address),\n                scope: scope,\n                options: entry.expression.options\n            };\n        });\n    }\n    withNewConfig(newConfig, namedExpressions) {\n        const newUnparser = new Unparser(newConfig, buildLexerConfig(newConfig), this.dependencyGraph.sheetMapping.fetchDisplayName, namedExpressions);\n        return new Serialization(this.dependencyGraph, newUnparser, newConfig, this.exporter);\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { checkKeySchema, extractTime } from './licenseKeyHelper';\n/**\n * List of all not valid messages which may occur.\n */\nconst consoleMessages = {\n    invalid: () => 'The license key for HyperFormula is invalid.',\n    expired: ({ keyValidityDate }) => 'The license key for HyperFormula expired' +\n        ` on ${keyValidityDate}, and is not valid for the installed version.`,\n    missing: () => 'The license key for HyperFormula is missing.',\n};\nlet _notified = false;\n/**\n * Checks if the provided license key is grammatically valid or not expired.\n *\n * @param {string} licenseKey The license key to check.\n * @returns {LicenseKeyValidityState} Returns the checking state.\n */\nexport function checkLicenseKeyValidity(licenseKey) {\n    const messageDescriptor = {\n        template: \"missing\" /* MISSING */,\n        vars: {},\n    };\n    if (licenseKey === 'non-commercial-and-evaluation' || licenseKey === 'agpl-v3' || licenseKey === 'internal-use-in-handsontable') {\n        messageDescriptor.template = \"valid\" /* VALID */;\n    }\n    else if (typeof licenseKey === 'string' && checkKeySchema(licenseKey)) {\n        const [day, month, year] = (process.env.HT_RELEASE_DATE || '').split('/');\n        const releaseDays = Math.floor(new Date(`${month}/${day}/${year}`).getTime() / 8.64e7);\n        const keyValidityDays = extractTime(licenseKey);\n        messageDescriptor.vars.keyValidityDate = formatDate(new Date((keyValidityDays + 1) * 8.64e7));\n        if (releaseDays > keyValidityDays) {\n            messageDescriptor.template = \"expired\" /* EXPIRED */;\n        }\n        else {\n            messageDescriptor.template = \"valid\" /* VALID */;\n        }\n    }\n    else if (licenseKey !== '') {\n        messageDescriptor.template = \"invalid\" /* INVALID */;\n    }\n    if (!_notified && messageDescriptor.template !== \"valid\" /* VALID */) {\n        console.warn(consoleMessages[messageDescriptor.template](messageDescriptor.vars));\n        _notified = true;\n    }\n    return messageDescriptor.template;\n}\n/**\n * Formats a Date instance to hard-coded format MMMM DD, YYYY.\n *\n * @param {Date} date The date to format.\n * @returns {string}\n */\nfunction formatDate(date) {\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    const month = monthNames[date.getMonth()];\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n// @ts-nocheck\n/* eslint-disable */\nconst _rl = '\\x6C\\x65\\x6E\\x67\\x74\\x68';\nconst _hd = (v) => parseInt(v, 16);\nconst _pi = (v) => parseInt(v, 10);\nconst _nm = (v) => (v + '').replace(/\\-/g, '');\nconst _ss = (v, s, l) => v['\\x73\\x75\\x62\\x73\\x74\\x72'](s, l);\nconst _cp = (v) => v['\\x63\\x6F\\x64\\x65\\x50\\x6F\\x69\\x6E\\x74\\x41\\x74'](0) - 65;\nexport function extractTime(v) { return _nm(v)[_rl] === (50 >> 1) ? _hd(_ss(_nm(v), _hd('12'), _cp('\\x46'))) / (_hd(_ss(_nm(v), _cp('C'), _cp('\\x59') >> 4)) || ((~~![][_rl]) << 3) + 1) : 0; }\nexport function checkKeySchema(v) {\n    v = (v + '').replace(/\\-/g, '');\n    if (v[_rl] !== _cp('\\x5A')) {\n        return false;\n    }\n    let sp = 0;\n    return [[0, _cp('\\x47') + 1], [_cp('\\x48'), _cp('\\x48') - 1], [_cp('G') + _cp('H'), _cp('\\x47')]].reduce((e, [a, b], c) => {\n        e |= (_pi(`${_pi(_hd(_ss(v, ...[sp + a - (c === (3 >> 2) ? 0 : 2), b + (!c ? 0 : 2)])) + (_hd(_ss(v, ...[sp + a + b, 2])) + []).padStart(2, '0'))}`) % 97 || 2) >> 1;\n        sp += 2;\n        return e;\n    }, _cp('A')) === ([] + 1 >> 1);\n}\n/* eslint-enable */\n","'use strict';\nvar $ = require('../internals/export');\nvar codeAt = require('../internals/string-multibyte').codeAt;\n\n// `String.prototype.codePointAt` method\n// https://tc39.es/ecma262/#sec-string.prototype.codepointat\n$({ target: 'String', proto: true }, {\n  codePointAt: function codePointAt(pos) {\n    return codeAt(this, pos);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $padStart = require('../internals/string-pad').start;\nvar WEBKIT_BUG = require('../internals/string-pad-webkit-bug');\n\n// `String.prototype.padStart` method\n// https://tc39.es/ecma262/#sec-string.prototype.padstart\n$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('../internals/to-length');\nvar repeat = require('../internals/string-repeat');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar ceil = Math.ceil;\n\n// `String.prototype.{ padStart, padEnd }` methods implementation\nvar createMethod = function (IS_END) {\n  return function ($this, maxLength, fillString) {\n    var S = String(requireObjectCoercible($this));\n    var stringLength = S.length;\n    var fillStr = fillString === undefined ? ' ' : String(fillString);\n    var intMaxLength = toLength(maxLength);\n    var fillLen, stringFiller;\n    if (intMaxLength <= stringLength || fillStr == '') return S;\n    fillLen = intMaxLength - stringLength;\n    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));\n    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n    return IS_END ? S + stringFiller : stringFiller + S;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.padStart` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padstart\n  start: createMethod(false),\n  // `String.prototype.padEnd` method\n  // https://tc39.es/ecma262/#sec-string.prototype.padend\n  end: createMethod(true)\n};\n","// https://github.com/zloirock/core-js/issues/280\nvar userAgent = require('../internals/engine-user-agent');\n\n// eslint-disable-next-line unicorn/no-unsafe-regex -- safe\nmodule.exports = /Version\\/10(?:\\.\\d+){1,2}(?: [\\w./]+)?(?: Mobile\\/\\w+)? Safari\\//.test(userAgent);\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\n// import\nconst dictionary = {\n    errors: {\n        CYCLE: '#CYCLE!',\n        DIV_BY_ZERO: '#DIV/0!',\n        ERROR: '#ERROR!',\n        NA: '#N/A',\n        NAME: '#NAME?',\n        NUM: '#NUM!',\n        REF: '#REF!',\n        VALUE: '#VALUE!',\n    },\n    functions: {\n        ABS: 'ABS',\n        ACOS: 'ACOS',\n        ACOSH: 'ACOSH',\n        ACOT: 'ACOT',\n        ACOTH: 'ACOTH',\n        AND: 'AND',\n        ARABIC: 'ARABIC',\n        ASIN: 'ASIN',\n        ASINH: 'ASINH',\n        ATAN2: 'ATAN2',\n        ATAN: 'ATAN',\n        ATANH: 'ATANH',\n        AVERAGE: 'AVERAGE',\n        AVERAGEA: 'AVERAGEA',\n        AVERAGEIF: 'AVERAGEIF',\n        BASE: 'BASE',\n        BIN2DEC: 'BIN2DEC',\n        BIN2HEX: 'BIN2HEX',\n        BIN2OCT: 'BIN2OCT',\n        BITAND: 'BITAND',\n        BITLSHIFT: 'BITLSHIFT',\n        BITOR: 'BITOR',\n        BITRSHIFT: 'BITRSHIFT',\n        BITXOR: 'BITXOR',\n        CEILING: 'CEILING',\n        CHAR: 'CHAR',\n        CHOOSE: 'CHOOSE',\n        CLEAN: 'CLEAN',\n        CODE: 'CODE',\n        COLUMN: 'COLUMN',\n        COLUMNS: 'COLUMNS',\n        CONCATENATE: 'CONCATENATE',\n        CORREL: 'CORREL',\n        COS: 'COS',\n        COSH: 'COSH',\n        COT: 'COT',\n        COTH: 'COTH',\n        COUNT: 'COUNT',\n        COUNTA: 'COUNTA',\n        COUNTBLANK: 'COUNTBLANK',\n        COUNTIF: 'COUNTIF',\n        COUNTIFS: 'COUNTIFS',\n        COUNTUNIQUE: 'COUNTUNIQUE',\n        CSC: 'CSC',\n        CSCH: 'CSCH',\n        CUMIPMT: 'CUMIPMT',\n        CUMPRINC: 'CUMPRINC',\n        DATE: 'DATE',\n        DATEDIF: 'DATEDIF',\n        DATEVALUE: 'DATEVALUE',\n        DAY: 'DAY',\n        DAYS360: 'DAYS360',\n        DAYS: 'DAYS',\n        DB: 'DB',\n        DDB: 'DDB',\n        DEC2BIN: 'DEC2BIN',\n        DEC2HEX: 'DEC2HEX',\n        DEC2OCT: 'DEC2OCT',\n        DECIMAL: 'DECIMAL',\n        DEGREES: 'DEGREES',\n        DELTA: 'DELTA',\n        DOLLARDE: 'DOLLARDE',\n        DOLLARFR: 'DOLLARFR',\n        EDATE: 'EDATE',\n        EFFECT: 'EFFECT',\n        EOMONTH: 'EOMONTH',\n        ERF: 'ERF',\n        ERFC: 'ERFC',\n        EVEN: 'EVEN',\n        EXACT: 'EXACT',\n        EXP: 'EXP',\n        FALSE: 'FALSE',\n        FIND: 'FIND',\n        FORMULATEXT: 'FORMULATEXT',\n        FV: 'FV',\n        FVSCHEDULE: 'FVSCHEDULE',\n        HEX2BIN: 'HEX2BIN',\n        HEX2DEC: 'HEX2DEC',\n        HEX2OCT: 'HEX2OCT',\n        HLOOKUP: 'HLOOKUP',\n        HOUR: 'HOUR',\n        IF: 'IF',\n        IFERROR: 'IFERROR',\n        IFNA: 'IFNA',\n        INDEX: 'INDEX',\n        INT: 'INT',\n        INTERVAL: 'INTERVAL',\n        IPMT: 'IPMT',\n        ISBINARY: 'ISBINARY',\n        ISBLANK: 'ISBLANK',\n        ISERR: 'ISERR',\n        ISERROR: 'ISERROR',\n        ISEVEN: 'ISEVEN',\n        ISFORMULA: 'ISFORMULA',\n        ISLOGICAL: 'ISLOGICAL',\n        ISNA: 'ISNA',\n        ISNONTEXT: 'ISNONTEXT',\n        ISNUMBER: 'ISNUMBER',\n        ISODD: 'ISODD',\n        ISOWEEKNUM: 'ISOWEEKNUM',\n        ISPMT: 'ISPMT',\n        ISREF: 'ISREF',\n        ISTEXT: 'ISTEXT',\n        LEFT: 'LEFT',\n        LEN: 'LEN',\n        LN: 'LN',\n        LOG10: 'LOG10',\n        LOG: 'LOG',\n        LOWER: 'LOWER',\n        MATCH: 'MATCH',\n        MAX: 'MAX',\n        MAXA: 'MAXA',\n        MAXPOOL: 'MAXPOOL',\n        MEDIAN: 'MEDIAN',\n        MEDIANPOOL: 'MEDIANPOOL',\n        MID: 'MID',\n        MIN: 'MIN',\n        MINA: 'MINA',\n        MINUTE: 'MINUTE',\n        MIRR: 'MIRR',\n        MMULT: 'MMULT',\n        MOD: 'MOD',\n        MONTH: 'MONTH',\n        NA: 'NA',\n        NETWORKDAYS: 'NETWORKDAYS',\n        'NETWORKDAYS.INTL': 'NETWORKDAYS.INTL',\n        NOMINAL: 'NOMINAL',\n        NOT: 'NOT',\n        NOW: 'NOW',\n        NPER: 'NPER',\n        NPV: 'NPV',\n        OCT2BIN: 'OCT2BIN',\n        OCT2DEC: 'OCT2DEC',\n        OCT2HEX: 'OCT2HEX',\n        ODD: 'ODD',\n        OFFSET: 'OFFSET',\n        OR: 'OR',\n        PI: 'PI',\n        PMT: 'PMT',\n        PDURATION: 'PDURATION',\n        PRODUCT: 'PRODUCT',\n        POWER: 'POWER',\n        PPMT: 'PPMT',\n        PROPER: 'PROPER',\n        PV: 'PV',\n        RADIANS: 'RADIANS',\n        RAND: 'RAND',\n        RATE: 'RATE',\n        REPLACE: 'REPLACE',\n        REPT: 'REPT',\n        RIGHT: 'RIGHT',\n        ROMAN: 'ROMAN',\n        ROUND: 'ROUND',\n        ROUNDDOWN: 'ROUNDDOWN',\n        ROUNDUP: 'ROUNDUP',\n        ROW: 'ROW',\n        ROWS: 'ROWS',\n        RRI: 'RRI',\n        SEARCH: 'SEARCH',\n        SEC: 'SEC',\n        SECH: 'SECH',\n        SECOND: 'SECOND',\n        SHEET: 'SHEET',\n        SHEETS: 'SHEETS',\n        SIN: 'SIN',\n        SINH: 'SINH',\n        SLN: 'SLN',\n        SPLIT: 'SPLIT',\n        SQRT: 'SQRT',\n        STDEVA: 'STDEVA',\n        'STDEV.P': 'STDEV.P',\n        STDEVPA: 'STDEVPA',\n        'STDEV.S': 'STDEV.S',\n        SUBSTITUTE: 'SUBSTITUTE',\n        SUBTOTAL: 'SUBTOTAL',\n        SUM: 'SUM',\n        SUMIF: 'SUMIF',\n        SUMIFS: 'SUMIFS',\n        SUMPRODUCT: 'SUMPRODUCT',\n        SUMSQ: 'SUMSQ',\n        SWITCH: 'SWITCH',\n        SYD: 'SYD',\n        T: 'T',\n        TAN: 'TAN',\n        TANH: 'TANH',\n        TBILLEQ: 'TBILLEQ',\n        TBILLPRICE: 'TBILLPRICE',\n        TBILLYIELD: 'TBILLYIELD',\n        TEXT: 'TEXT',\n        TIME: 'TIME',\n        TIMEVALUE: 'TIMEVALUE',\n        TODAY: 'TODAY',\n        TRANSPOSE: 'TRANSPOSE',\n        TRIM: 'TRIM',\n        TRUE: 'TRUE',\n        TRUNC: 'TRUNC',\n        UNICHAR: 'UNICHAR',\n        UNICODE: 'UNICODE',\n        UPPER: 'UPPER',\n        VARA: 'VARA',\n        'VAR.P': 'VAR.P',\n        VARPA: 'VARPA',\n        'VAR.S': 'VAR.S',\n        VLOOKUP: 'VLOOKUP',\n        WEEKDAY: 'WEEKDAY',\n        WEEKNUM: 'WEEKNUM',\n        WORKDAY: 'WORKDAY',\n        'WORKDAY.INTL': 'WORKDAY.INTL',\n        XNPV: 'XNPV',\n        XOR: 'XOR',\n        YEAR: 'YEAR',\n        YEARFRAC: 'YEARFRAC',\n        'HF.ADD': 'HF.ADD',\n        'HF.CONCAT': 'HF.CONCAT',\n        'HF.DIVIDE': 'HF.DIVIDE',\n        'HF.EQ': 'HF.EQ',\n        'HF.GT': 'HF.GT',\n        'HF.GTE': 'HF.GTE',\n        'HF.LT': 'HF.LT',\n        'HF.LTE': 'HF.LTE',\n        'HF.MINUS': 'HF.MINUS',\n        'HF.MULTIPLY': 'HF.MULTIPLY',\n        'HF.NE': 'HF.NE',\n        'HF.POW': 'HF.POW',\n        'HF.UMINUS': 'HF.UMINUS',\n        'HF.UNARY_PERCENT': 'HF.UNARY_PERCENT',\n        'HF.UPLUS': 'HF.UPLUS',\n        VARP: 'VARP',\n        VAR: 'VAR',\n        STDEVP: 'STDEVP',\n        STDEV: 'STDEV',\n        'EXPON.DIST': 'EXPON.DIST',\n        FISHER: 'FISHER',\n        FISHERINV: 'FISHERINV',\n        GAMMA: 'GAMMA',\n        'GAMMA.DIST': 'GAMMA.DIST',\n        GAMMALN: 'GAMMALN',\n        'GAMMALN.PRECISE': 'GAMMALN.PRECISE',\n        'GAMMA.INV': 'GAMMA.INV',\n        GAUSS: 'GAUSS',\n        FACT: 'FACT',\n        FACTDOUBLE: 'FACTDOUBLE',\n        COMBIN: 'COMBIN',\n        COMBINA: 'COMBINA',\n        GCD: 'GCD',\n        LCM: 'LCM',\n        MROUND: 'MROUND',\n        MULTINOMIAL: 'MULTINOMIAL',\n        QUOTIENT: 'QUOTIENT',\n        RANDBETWEEN: 'RANDBETWEEN',\n        SERIESSUM: 'SERIESSUM',\n        SIGN: 'SIGN',\n        SQRTPI: 'SQRTPI',\n        SUMX2MY2: 'SUMX2MY2',\n        SUMX2PY2: 'SUMX2PY2',\n        SUMXMY2: 'SUMXMY2',\n        'EXPONDIST': 'EXPONDIST',\n        GAMMADIST: 'GAMMADIST',\n        GAMMAINV: 'GAMMAINV',\n        'BETA.DIST': 'BETA.DIST',\n        BETADIST: 'BETADIST',\n        'BETA.INV': 'BETA.INV',\n        BETAINV: 'BETAINV',\n        'BINOM.DIST': 'BINOM.DIST',\n        BINOMDIST: 'BINOMDIST',\n        'BINOM.INV': 'BINOM.INV',\n        BESSELI: 'BESSELI',\n        BESSELJ: 'BESSELJ',\n        BESSELK: 'BESSELK',\n        BESSELY: 'BESSELY',\n        'CHISQ.DIST': 'CHISQ.DIST',\n        'CHISQ.DIST.RT': 'CHISQ.DIST.RT',\n        'CHISQ.INV': 'CHISQ.INV',\n        'CHISQ.INV.RT': 'CHISQ.INV.RT',\n        CHIDIST: 'CHIDIST',\n        CHIINV: 'CHIINV',\n        'F.DIST': 'F.DIST',\n        'F.DIST.RT': 'F.DIST.RT',\n        'F.INV': 'F.INV',\n        'F.INV.RT': 'F.INV.RT',\n        FDIST: 'FDIST',\n        FINV: 'FINV',\n        WEIBULL: 'WEIBULL',\n        'WEIBULL.DIST': 'WEIBULL.DIST',\n        POISSON: 'POISSON',\n        'POISSON.DIST': 'POISSON.DIST',\n        'HYPGEOM.DIST': 'HYPGEOM.DIST',\n        HYPGEOMDIST: 'HYPGEOMDIST',\n        'T.DIST': 'T.DIST',\n        'T.DIST.2T': 'T.DIST.2T',\n        'T.DIST.RT': 'T.DIST.RT',\n        'T.INV': 'T.INV',\n        'T.INV.2T': 'T.INV.2T',\n        TDIST: 'TDIST',\n        TINV: 'TINV',\n        LOGINV: 'LOGINV',\n        'LOGNORM.DIST': 'LOGNORM.DIST',\n        'LOGNORM.INV': 'LOGNORM.INV',\n        LOGNORMDIST: 'LOGNORMDIST',\n        'NORM.DIST': 'NORM.DIST',\n        'NORM.INV': 'NORM.INV',\n        'NORM.S.DIST': 'NORM.S.DIST',\n        'NORM.S.INV': 'NORM.S.INV',\n        NORMDIST: 'NORMDIST',\n        NORMINV: 'NORMINV',\n        NORMSDIST: 'NORMSDIST',\n        NORMSINV: 'NORMSINV',\n        PHI: 'PHI',\n        'NEGBINOM.DIST': 'NEGBINOM.DIST',\n        'NEGBINOMDIST': 'NEGBINOMDIST',\n        COMPLEX: 'COMPLEX',\n        IMABS: 'IMABS',\n        IMAGINARY: 'IMAGINARY',\n        IMARGUMENT: 'IMARGUMENT',\n        IMCONJUGATE: 'IMCONJUGATE',\n        IMCOS: 'IMCOS',\n        IMCOSH: 'IMCOSH',\n        IMCOT: 'IMCOT',\n        IMCSC: 'IMCSC',\n        IMCSCH: 'IMCSCH',\n        IMDIV: 'IMDIV',\n        IMEXP: 'IMEXP',\n        IMLN: 'IMLN',\n        IMLOG10: 'IMLOG10',\n        IMLOG2: 'IMLOG2',\n        IMPOWER: 'IMPOWER',\n        IMPRODUCT: 'IMPRODUCT',\n        IMREAL: 'IMREAL',\n        IMSEC: 'IMSEC',\n        IMSECH: 'IMSECH',\n        IMSIN: 'IMSIN',\n        IMSINH: 'IMSINH',\n        IMSQRT: 'IMSQRT',\n        IMSUB: 'IMSUB',\n        IMSUM: 'IMSUM',\n        IMTAN: 'IMTAN',\n        LARGE: 'LARGE',\n        SMALL: 'SMALL',\n        AVEDEV: 'AVEDEV',\n        CONFIDENCE: 'CONFIDENCE',\n        'CONFIDENCE.NORM': 'CONFIDENCE.NORM',\n        'CONFIDENCE.T': 'CONFIDENCE.T',\n        DEVSQ: 'DEVSQ',\n        GEOMEAN: 'GEOMEAN',\n        HARMEAN: 'HARMEAN',\n        CRITBINOM: 'CRITBINOM',\n        'COVARIANCE.P': 'COVARIANCE.P',\n        'COVARIANCE.S': 'COVARIANCE.S',\n        'COVAR': 'COVAR',\n        PEARSON: 'PEARSON',\n        RSQ: 'RSQ',\n        STANDARDIZE: 'STANDARDIZE',\n        'Z.TEST': 'Z.TEST',\n        ZTEST: 'ZTEST',\n        'F.TEST': 'F.TEST',\n        FTEST: 'FTEST',\n        STEYX: 'STEYX',\n        SLOPE: 'SLOPE',\n        'CHISQ.TEST': 'CHISQ.TEST',\n        CHITEST: 'CHITEST',\n        'T.TEST': 'T.TEST',\n        TTEST: 'TTEST',\n        SKEW: 'SKEW',\n        'SKEW.P': 'SKEW.P',\n        WEIBULLDIST: 'WEIBULLDIST',\n        VARS: 'VARS',\n        TINV2T: 'TINV2T',\n        TDISTRT: 'TDISTRT',\n        TDIST2T: 'TDIST2T',\n        STDEVS: 'STDEVS',\n        FINVRT: 'FINVRT',\n        FDISTRT: 'FDISTRT',\n        CHIDISTRT: 'CHIDISTRT',\n        CHIINVRT: 'CHIINVRT',\n        COVARIANCEP: 'COVARIANCEP',\n        COVARIANCES: 'COVARIANCES',\n        LOGNORMINV: 'LOGNORMINV',\n        POISSONDIST: 'POISSONDIST',\n        SKEWP: 'SKEWP',\n        'CEILING.MATH': 'CEILING.MATH',\n        FLOOR: 'FLOOR',\n        'FLOOR.MATH': 'FLOOR.MATH',\n        'CEILING.PRECISE': 'CEILING.PRECISE',\n        'FLOOR.PRECISE': 'FLOOR.PRECISE',\n        'ISO.CEILING': 'ISO.CEILING',\n    },\n    langCode: 'enGB',\n    ui: {\n        NEW_SHEET_PREFIX: 'Sheet',\n    },\n};\nexport default dictionary;\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { FunctionPlugin } from './plugin/FunctionPlugin';\nexport { FunctionPlugin };\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport { AbsPlugin } from './AbsPlugin';\nexport { BitShiftPlugin } from './BitShiftPlugin';\nexport { BitwiseLogicOperationsPlugin } from './BitwiseLogicOperationsPlugin';\nexport { BooleanPlugin } from './BooleanPlugin';\nexport { CharPlugin } from './CharPlugin';\nexport { CodePlugin } from './CodePlugin';\nexport { CountBlankPlugin } from './CountBlankPlugin';\nexport { CountUniquePlugin } from './CountUniquePlugin';\nexport { DateTimePlugin } from './DateTimePlugin';\nexport { DegreesPlugin } from './DegreesPlugin';\nexport { DeltaPlugin } from './DeltaPlugin';\nexport { ExpPlugin } from './ExpPlugin';\nexport { FinancialPlugin } from './FinancialPlugin';\nexport { FormulaTextPlugin } from './FormulaTextPlugin';\nexport { InformationPlugin } from './InformationPlugin';\nexport { IsEvenPlugin } from './IsEvenPlugin';\nexport { IsOddPlugin } from './IsOddPlugin';\nexport { LogarithmPlugin } from './LogarithmPlugin';\nexport { MathConstantsPlugin } from './MathConstantsPlugin';\nexport { MatrixPlugin } from './MatrixPlugin';\nexport { MedianPlugin } from './MedianPlugin';\nexport { ModuloPlugin } from './ModuloPlugin';\nexport { NumericAggregationPlugin } from './NumericAggregationPlugin';\nexport { PowerPlugin } from './PowerPlugin';\nexport { RadiansPlugin } from './RadiansPlugin';\nexport { RadixConversionPlugin } from './RadixConversionPlugin';\nexport { RandomPlugin } from './RandomPlugin';\nexport { RoundingPlugin } from './RoundingPlugin';\nexport { SqrtPlugin } from './SqrtPlugin';\nexport { SumifPlugin } from './SumifPlugin';\nexport { SumprodPlugin } from './SumprodPlugin';\nexport { TextPlugin } from './TextPlugin';\nexport { TrigonometryPlugin } from './TrigonometryPlugin';\nexport { LookupPlugin } from './LookupPlugin';\nexport { RomanPlugin } from './RomanPlugin';\nexport { SimpleArithmerticPlugin } from './SimpleArithmertic';\nexport { StatisticalPlugin } from './StatisticalPlugin';\nexport { MathPlugin } from './MathPlugin';\nexport { ComplexPlugin } from './ComplexPlugin';\nexport { StatisticalAggregationPlugin } from './StatisticalAggregationPlugin';\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class AbsPlugin extends FunctionPlugin {\n    abs(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ABS'), Math.abs);\n    }\n}\nAbsPlugin.implementedFunctions = {\n    'ABS': {\n        method: 'abs',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nconst MAX_48BIT_INTEGER = 281474976710655;\nconst SHIFT_MIN_POSITIONS = -53;\nconst SHIFT_MAX_POSITIONS = 53;\nexport class BitShiftPlugin extends FunctionPlugin {\n    bitlshift(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BITLSHIFT'), shiftLeft);\n    }\n    bitrshift(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BITRSHIFT'), shiftRight);\n    }\n}\nBitShiftPlugin.implementedFunctions = {\n    'BITLSHIFT': {\n        method: 'bitlshift',\n        parameters: [\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\n        ]\n    },\n    'BITRSHIFT': {\n        method: 'bitrshift',\n        parameters: [\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: SHIFT_MIN_POSITIONS, maxValue: SHIFT_MAX_POSITIONS },\n        ]\n    },\n};\nfunction shiftLeft(value, positions) {\n    if (positions < 0) {\n        return shiftRight(value, -positions);\n    }\n    else {\n        return validate(value * Math.pow(2, positions));\n    }\n}\nfunction shiftRight(value, positions) {\n    if (positions < 0) {\n        return shiftLeft(value, -positions);\n    }\n    else {\n        return validate(Math.floor(value / Math.pow(2, positions)));\n    }\n}\nfunction validate(result) {\n    if (result > MAX_48BIT_INTEGER) {\n        return new CellError(ErrorType.NUM, ErrorMessage.BitshiftLong);\n    }\n    else {\n        return result;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class BitwiseLogicOperationsPlugin extends FunctionPlugin {\n    bitand(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BITAND'), (left, right) => left & right);\n    }\n    bitor(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BITOR'), (left, right) => left | right);\n    }\n    bitxor(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BITXOR'), (left, right) => left ^ right);\n    }\n}\nBitwiseLogicOperationsPlugin.implementedFunctions = {\n    'BITAND': {\n        method: 'bitand',\n        parameters: [\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n        ]\n    },\n    'BITOR': {\n        method: 'bitor',\n        parameters: [\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n        ]\n    },\n    'BITXOR': {\n        method: 'bitxor',\n        parameters: [\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing boolean functions\n */\nexport class BooleanPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to TRUE()\n     *\n     * Returns the logical true\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    literalTrue(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TRUE'), () => true);\n    }\n    /**\n     * Corresponds to FALSE()\n     *\n     * Returns the logical false\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    literalFalse(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FALSE'), () => false);\n    }\n    /**\n     * Corresponds to IF(expression, value_if_true, value_if_false)\n     *\n     * Returns value specified as second argument if expression is true and third argument if expression is false\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    conditionalIf(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IF'), (condition, arg2, arg3) => {\n            return condition ? arg2 : arg3;\n        });\n    }\n    /**\n     * Corresponds to AND(expression1, [expression2, ...])\n     *\n     * Returns true if all of the provided arguments are logically true, and false if any of it is logically false\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    and(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('AND'), (...args) => !args.some((arg) => !arg));\n    }\n    /**\n     * Corresponds to OR(expression1, [expression2, ...])\n     *\n     * Returns true if any of the provided arguments are logically true, and false otherwise\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    or(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('OR'), (...args) => args.some((arg) => arg));\n    }\n    not(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NOT'), (arg) => !arg);\n    }\n    xor(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('XOR'), (...args) => {\n            let cnt = 0;\n            args.forEach((arg) => {\n                if (arg) {\n                    cnt++;\n                }\n            });\n            return (cnt % 2) === 1;\n        });\n    }\n    switch(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SWITCH'), (selector, ...args) => {\n            const n = args.length;\n            let i = 0;\n            for (; i + 1 < n; i += 2) {\n                if (args[i] instanceof CellError) {\n                    continue;\n                }\n                if (this.interpreter.arithmeticHelper.eq(selector, args[i])) {\n                    return args[i + 1];\n                }\n            }\n            if (i < n) {\n                return args[i];\n            }\n            else {\n                return new CellError(ErrorType.NA, ErrorMessage.NoDefault);\n            }\n        });\n    }\n    iferror(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IFERROR'), (arg1, arg2) => {\n            if (arg1 instanceof CellError) {\n                return arg2;\n            }\n            else {\n                return arg1;\n            }\n        });\n    }\n    ifna(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IFNA'), (arg1, arg2) => {\n            if (arg1 instanceof CellError && arg1.type === ErrorType.NA) {\n                return arg2;\n            }\n            else {\n                return arg1;\n            }\n        });\n    }\n    choose(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHOOSE'), (selector, ...args) => {\n            if (selector > args.length) {\n                return new CellError(ErrorType.NUM, ErrorMessage.Selector);\n            }\n            return args[selector - 1];\n        });\n    }\n}\nBooleanPlugin.implementedFunctions = {\n    'TRUE': {\n        method: 'literalTrue',\n        parameters: [],\n    },\n    'FALSE': {\n        method: 'literalFalse',\n        parameters: [],\n    },\n    'IF': {\n        method: 'conditionalIf',\n        parameters: [\n            { argumentType: ArgumentTypes.BOOLEAN },\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n            { argumentType: ArgumentTypes.SCALAR, defaultValue: false, passSubtype: true },\n        ],\n    },\n    'AND': {\n        method: 'and',\n        parameters: [\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n    'OR': {\n        method: 'or',\n        parameters: [\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n    'XOR': {\n        method: 'xor',\n        parameters: [\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n    'NOT': {\n        method: 'not',\n        parameters: [\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'SWITCH': {\n        method: 'switch',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n        ],\n        repeatLastArgs: 1,\n    },\n    'IFERROR': {\n        method: 'iferror',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n        ]\n    },\n    'IFNA': {\n        method: 'ifna',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n        ]\n    },\n    'CHOOSE': {\n        method: 'choose',\n        parameters: [\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\n            { argumentType: ArgumentTypes.SCALAR, passSubtype: true },\n        ],\n        repeatLastArgs: 1,\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class CharPlugin extends FunctionPlugin {\n    char(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHAR'), (value) => {\n            if (value < 1 || value >= 256) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\n            }\n            return String.fromCharCode(Math.trunc(value));\n        });\n    }\n    unichar(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHAR'), (value) => {\n            if (value < 1 || value >= 1114112) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.CharacterCodeBounds);\n            }\n            return String.fromCodePoint(Math.trunc(value));\n        });\n    }\n}\nCharPlugin.implementedFunctions = {\n    'CHAR': {\n        method: 'char',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n    'UNICHAR': {\n        method: 'unichar',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n};\n","var $ = require('../internals/export');\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n$({ target: 'Math', stat: true }, {\n  trunc: function trunc(it) {\n    return (it > 0 ? floor : ceil)(it);\n  }\n});\n","var $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar fromCharCode = String.fromCharCode;\n// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\nvar INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;\n\n// `String.fromCodePoint` method\n// https://tc39.es/ecma262/#sec-string.fromcodepoint\n$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  fromCodePoint: function fromCodePoint(x) {\n    var elements = [];\n    var length = arguments.length;\n    var i = 0;\n    var code;\n    while (length > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');\n      elements.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00)\n      );\n    } return elements.join('');\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class CodePlugin extends FunctionPlugin {\n    code(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CODE'), (value) => {\n            if (value.length === 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\n            }\n            return value.charCodeAt(0);\n        });\n    }\n    unicode(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('UNICODE'), (value) => {\n            var _a;\n            return (_a = value.codePointAt(0)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.EmptyString);\n        });\n    }\n}\nCodePlugin.implementedFunctions = {\n    'CODE': {\n        method: 'code',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'UNICODE': {\n        method: 'unicode',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { EmptyValue } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing MEDIAN function\n */\nexport class CountBlankPlugin extends FunctionPlugin {\n    countblank(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COUNTBLANK'), (...args) => {\n            let counter = 0;\n            args.forEach((arg) => {\n                if (arg === EmptyValue) {\n                    counter++;\n                }\n            });\n            return counter;\n        });\n    }\n}\nCountBlankPlugin.implementedFunctions = {\n    'COUNTBLANK': {\n        method: 'countblank',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError } from '../../Cell';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing COUNTUNIQUE function\n */\nexport class CountUniquePlugin extends FunctionPlugin {\n    /**\n     * Corresponds to COUNTUNIQUE(Number1, Number2, ...).\n     *\n     * Returns number of unique numbers from arguments\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    countunique(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COUNTUNIQUE'), (...args) => {\n            const valuesSet = new Set();\n            const errorsSet = new Set();\n            for (const scalarValue of args) {\n                if (scalarValue instanceof CellError) {\n                    errorsSet.add(scalarValue.type);\n                }\n                else if (scalarValue !== '') {\n                    valuesSet.add(scalarValue);\n                }\n            }\n            return valuesSet.size + errorsSet.size;\n        });\n    }\n}\nCountUniquePlugin.implementedFunctions = {\n    'COUNTUNIQUE': {\n        method: 'countunique',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR },\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { instanceOfSimpleDate, instanceOfSimpleTime, numberToSimpleTime, offsetMonth, roundToNearestSecond, timeToNumber, toBasisEU, truncateDayInMonth } from '../../DateTimeHelper';\nimport { ErrorMessage } from '../../error-message';\nimport { format } from '../../format/format';\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType, } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing date-specific functions\n */\nexport class DateTimePlugin extends FunctionPlugin {\n    constructor() {\n        super(...arguments);\n        this.isoweeknumCore = (day) => {\n            const absoluteDay = Math.floor(this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(day));\n            const date = this.interpreter.dateHelper.numberToSimpleDate(day);\n            const yearStart = this.interpreter.dateHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\n            const yearStartAbsolute = this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(yearStart);\n            const firstThursdayAbs = yearStartAbsolute + ((4 - yearStartAbsolute) % 7 + 7) % 7;\n            const ret = Math.floor((absoluteDay - 1) / 7) - Math.floor((firstThursdayAbs - 1) / 7) + 1;\n            if (ret === 0) {\n                return this.isoweeknumCore(day - 7) + 1;\n            }\n            return ret;\n        };\n        this.days360Core = (startDate, endDate, mode) => {\n            const start = this.interpreter.dateHelper.numberToSimpleDate(startDate);\n            const end = this.interpreter.dateHelper.numberToSimpleDate(endDate);\n            let nStart, nEnd;\n            if (mode) {\n                nStart = toBasisEU(start);\n                nEnd = toBasisEU(end);\n            }\n            else {\n                [nStart, nEnd] = this.interpreter.dateHelper.toBasisUS(start, end);\n            }\n            return 360 * (nEnd.year - nStart.year) + 30 * (nEnd.month - nStart.month) + nEnd.day - nStart.day;\n        };\n    }\n    /**\n     * Corresponds to DATE(year, month, day)\n     *\n     * Converts a provided year, month and day into date\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    date(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DATE'), (year, month, day) => {\n            const d = Math.trunc(day);\n            let m = Math.trunc(month);\n            let y = Math.trunc(year);\n            if (y < this.interpreter.dateHelper.getEpochYearZero()) {\n                y += this.interpreter.dateHelper.getEpochYearZero();\n            }\n            const delta = Math.floor((m - 1) / 12);\n            y += delta;\n            m -= delta * 12;\n            const date = { year: y, month: m, day: 1 };\n            if (this.interpreter.dateHelper.isValidDate(date)) {\n                let ret = this.interpreter.dateHelper.dateToNumber(date) + (d - 1);\n                ret = this.interpreter.dateHelper.getWithinBounds(ret);\n                if (ret === undefined) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n                }\n                return ret;\n            }\n            return new CellError(ErrorType.VALUE, ErrorMessage.InvalidDate);\n        });\n    }\n    time(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TIME'), (h, m, s) => {\n            const ret = timeToNumber({ hours: Math.trunc(h), minutes: Math.trunc(m), seconds: Math.trunc(s) });\n            if (ret < 0) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NegativeTime);\n            }\n            return ret % 1;\n        });\n    }\n    eomonth(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EOMONTH'), (dateNumber, numberOfMonthsToShift) => {\n            const date = this.interpreter.dateHelper.numberToSimpleDate(dateNumber);\n            let ret = this.interpreter.dateHelper.dateToNumber(this.interpreter.dateHelper.endOfMonth(offsetMonth(date, numberOfMonthsToShift)));\n            ret = this.interpreter.dateHelper.getWithinBounds(ret);\n            if (ret === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n            }\n            return ret;\n        });\n    }\n    day(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DAY'), (dateNumber) => this.interpreter.dateHelper.numberToSimpleDate(dateNumber).day);\n    }\n    days(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DAYS'), (endDate, startDate) => Math.trunc(endDate) - Math.trunc(startDate));\n    }\n    /**\n     * Corresponds to MONTH(date)\n     *\n     * Returns the month of the year specified by a given date\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    month(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MONTH'), (dateNumber) => this.interpreter.dateHelper.numberToSimpleDate(dateNumber).month);\n    }\n    /**\n     * Corresponds to YEAR(date)\n     *\n     * Returns the year specified by a given date\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    year(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('YEAR'), (dateNumber) => this.interpreter.dateHelper.numberToSimpleDate(dateNumber).year);\n    }\n    hour(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HOUR'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).hours);\n    }\n    minute(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MINUTE'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).minutes);\n    }\n    second(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SECOND'), (timeNumber) => numberToSimpleTime(roundToNearestSecond(timeNumber) % 1).seconds);\n    }\n    /**\n     * Corresponds to TEXT(number, format)\n     *\n     * Tries to convert number to specified date format.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    text(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TEXT'), (numberRepresentation, formatArg) => format(numberRepresentation, formatArg, this.config, this.interpreter.dateHelper));\n    }\n    weekday(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('WEEKDAY'), (day, type) => {\n            const absoluteDay = Math.floor(this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(day));\n            if (type === 3) {\n                return (absoluteDay - 1) % 7;\n            }\n            const offset = weekdayOffsets.get(type);\n            if (offset === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n            }\n            return (absoluteDay - offset) % 7 + 1;\n        });\n    }\n    weeknum(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('WEEKNUM'), (day, type) => {\n            const absoluteDay = Math.floor(this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(day));\n            const date = this.interpreter.dateHelper.numberToSimpleDate(day);\n            const yearStart = this.interpreter.dateHelper.dateToNumber({ year: date.year, month: 1, day: 1 });\n            const yearStartAbsolute = this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(yearStart);\n            if (type === 21) {\n                return this.isoweeknumCore(day);\n            }\n            const offset = weekdayOffsets.get(type);\n            if (offset === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n            }\n            return Math.floor((absoluteDay - offset) / 7) - Math.floor((yearStartAbsolute - offset) / 7) + 1;\n        });\n    }\n    isoweeknum(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISOWEEKNUM'), this.isoweeknumCore);\n    }\n    datevalue(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DATEVALUE'), (date) => {\n            const { dateTime } = this.interpreter.dateHelper.parseDateTimeFromConfigFormats(date);\n            if (dateTime === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\n            }\n            if (!instanceOfSimpleDate(dateTime)) {\n                return 0;\n            }\n            return (instanceOfSimpleTime(dateTime) ? Math.trunc(timeToNumber(dateTime)) : 0) +\n                this.interpreter.dateHelper.dateToNumber(dateTime);\n        });\n    }\n    timevalue(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TIMEVALUE'), (date) => {\n            const dateNumber = this.interpreter.dateHelper.dateStringToDateNumber(date);\n            if (dateNumber === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.IncorrectDateTime);\n            }\n            return getRawValue(dateNumber) % 1;\n        });\n    }\n    now(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NOW'), () => {\n            const now = new Date();\n            return timeToNumber({ hours: now.getHours(), minutes: now.getMinutes(), seconds: now.getSeconds() }) +\n                this.interpreter.dateHelper.dateToNumber({ year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDay() });\n        });\n    }\n    today(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TODAY'), () => {\n            const now = new Date();\n            return this.interpreter.dateHelper.dateToNumber({ year: now.getFullYear(), month: now.getMonth() + 1, day: now.getDay() });\n        });\n    }\n    edate(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EDATE'), (dateNumber, delta) => {\n            const date = this.interpreter.dateHelper.numberToSimpleDate(dateNumber);\n            const newDate = truncateDayInMonth(offsetMonth(date, delta));\n            let ret = this.interpreter.dateHelper.dateToNumber(newDate);\n            ret = this.interpreter.dateHelper.getWithinBounds(ret);\n            if (ret === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.DateBounds);\n            }\n            return ret;\n        });\n    }\n    datedif(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DATEDIF'), (startDate, endDate, unit) => {\n            if (startDate > endDate) {\n                return new CellError(ErrorType.NUM, ErrorMessage.StartEndDate);\n            }\n            if (unit === 'D') {\n                return Math.floor(endDate) - Math.floor(startDate);\n            }\n            const start = this.interpreter.dateHelper.numberToSimpleDate(startDate);\n            const end = this.interpreter.dateHelper.numberToSimpleDate(endDate);\n            switch (unit) {\n                case 'M':\n                    return (end.year - start.year) * 12 + (end.month - start.month) - (end.day < start.day ? 1 : 0);\n                case 'YM':\n                    return (12 + (end.month - start.month) - (end.day < start.day ? 1 : 0)) % 12;\n                case 'Y':\n                    if ((end.month > start.month) || (end.month === start.month && end.day >= start.day)) {\n                        return end.year - start.year;\n                    }\n                    else {\n                        return end.year - start.year - 1;\n                    }\n                case 'MD':\n                    if (end.day >= start.day) {\n                        return end.day - start.day;\n                    }\n                    else {\n                        const m = end.month === 1 ? 12 : end.month - 1;\n                        const y = end.month === 1 ? end.year - 1 : end.year;\n                        return this.interpreter.dateHelper.daysInMonth(y, m) + end.day - start.day;\n                    }\n                case 'YD':\n                    if (end.month > start.month || (end.month === start.month && end.day >= start.day)) {\n                        return Math.floor(endDate) - this.interpreter.dateHelper.dateToNumber({ year: end.year, month: start.month, day: start.day });\n                    }\n                    else {\n                        return Math.floor(endDate)\n                            - Math.floor(startDate)\n                            - 365 * (end.year - start.year - 1)\n                            - this.interpreter.dateHelper.leapYearsCount(end.year - 1)\n                            + this.interpreter.dateHelper.leapYearsCount(start.year);\n                    }\n                default:\n                    return new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n            }\n        });\n    }\n    days360(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DAYS360'), this.days360Core);\n    }\n    yearfrac(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('YEARFRAC'), (startDate, endDate, mode) => {\n            startDate = Math.trunc(startDate);\n            endDate = Math.trunc(endDate);\n            if (startDate > endDate) {\n                [startDate, endDate] = [endDate, startDate];\n            }\n            switch (mode) {\n                case 0:\n                    return this.days360Core(startDate, endDate, false) / 360;\n                case 1:\n                    return (endDate - startDate) / this.interpreter.dateHelper.yearLengthForBasis(this.interpreter.dateHelper.numberToSimpleDate(startDate), this.interpreter.dateHelper.numberToSimpleDate(endDate));\n                case 2:\n                    return (endDate - startDate) / 360;\n                case 3:\n                    return (endDate - startDate) / 365;\n                case 4:\n                    return this.days360Core(startDate, endDate, true) / 360;\n            }\n            throw new Error('Should not be reachable.');\n        });\n    }\n    interval(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('INTERVAL'), (arg) => {\n            arg = Math.trunc(arg);\n            const second = arg % 60;\n            arg = Math.trunc(arg / 60);\n            const minute = arg % 60;\n            arg = Math.trunc(arg / 60);\n            const hour = arg % 24;\n            arg = Math.trunc(arg / 24);\n            const day = arg % 30;\n            arg = Math.trunc(arg / 30);\n            const month = arg % 12;\n            const year = Math.trunc(arg / 12);\n            return 'P' + ((year > 0) ? year + 'Y' : '')\n                + ((month > 0) ? month + 'M' : '')\n                + ((day > 0) ? day + 'D' : '')\n                + 'T'\n                + ((hour > 0) ? hour + 'H' : '')\n                + ((minute > 0) ? minute + 'M' : '')\n                + ((second > 0) ? second + 'S' : '');\n        });\n    }\n    networkdays(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NETWORKDAYS'), (start, end, holidays) => this.networkdayscore(start, end, 1, holidays));\n    }\n    networkdaysintl(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NETWORKDAYS.INTL'), (start, end, weekend, holidays) => this.networkdayscore(start, end, weekend, holidays));\n    }\n    workday(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('WORKDAY'), (start, end, holidays) => this.workdaycore(start, end, 1, holidays));\n    }\n    workdayintl(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('WORKDAY.INTL'), (start, end, weekend, holidays) => this.workdaycore(start, end, weekend, holidays));\n    }\n    networkdayscore(start, end, weekend, holidays) {\n        start = Math.trunc(start);\n        end = Math.trunc(end);\n        let multiplier = 1;\n        if (start > end) {\n            [start, end] = [end, start];\n            multiplier = -1;\n        }\n        const weekendPattern = computeWeekendPattern(weekend);\n        if (weekendPattern instanceof CellError) {\n            return weekendPattern;\n        }\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(holidays, weekendPattern);\n        if (filteredHolidays instanceof CellError) {\n            return filteredHolidays;\n        }\n        return multiplier * this.countWorkdays(start, end, weekendPattern, filteredHolidays);\n    }\n    workdaycore(start, delta, weekend, holidays) {\n        start = Math.trunc(start);\n        delta = Math.trunc(delta);\n        const weekendPattern = computeWeekendPattern(weekend);\n        if (weekendPattern instanceof CellError) {\n            return weekendPattern;\n        }\n        const filteredHolidays = this.simpleRangeToFilteredHolidays(holidays, weekendPattern);\n        if (filteredHolidays instanceof CellError) {\n            return filteredHolidays;\n        }\n        if (delta > 0) {\n            let upper = 1;\n            while (this.countWorkdays(start + 1, start + upper, weekendPattern, filteredHolidays) < delta) {\n                upper *= 2;\n            }\n            let lower = 1;\n            while (lower + 1 < upper) {\n                const mid = Math.trunc((lower + upper) / 2);\n                if (this.countWorkdays(start + 1, start + mid, weekendPattern, filteredHolidays) < delta) {\n                    lower = mid;\n                }\n                else {\n                    upper = mid;\n                }\n            }\n            return start + upper;\n        }\n        else if (delta < 0) {\n            delta *= -1;\n            let upper = 1;\n            while (this.countWorkdays(start - upper, start - 1, weekendPattern, filteredHolidays) < delta) {\n                upper *= 2;\n            }\n            let lower = 1;\n            while (lower + 1 < upper) {\n                const mid = Math.trunc((lower + upper) / 2);\n                if (this.countWorkdays(start - mid, start - 1, weekendPattern, filteredHolidays) < delta) {\n                    lower = mid;\n                }\n                else {\n                    upper = mid;\n                }\n            }\n            return start - upper;\n        }\n        else {\n            return start;\n        }\n    }\n    countWorkdays(start, end, weekendPattern, sortedHolidays) {\n        const absoluteEnd = Math.floor(this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(end));\n        const absoluteStart = Math.floor(this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(start));\n        let ans = 0;\n        for (let i = 0; i < 7; i++) {\n            if (weekendPattern.charAt(i) === '0') {\n                ans += Math.floor((absoluteEnd + 6 - i) / 7);\n                ans -= Math.floor((absoluteStart - 1 + 6 - i) / 7);\n            }\n        }\n        ans -= lowerBound(end + 1, sortedHolidays) - lowerBound(start, sortedHolidays);\n        return ans;\n    }\n    simpleRangeToFilteredHolidays(holidays, weekendPattern) {\n        var _a;\n        const holidaysArr = (_a = holidays === null || holidays === void 0 ? void 0 : holidays.valuesFromTopLeftCorner()) !== null && _a !== void 0 ? _a : [];\n        for (const val of holidaysArr) {\n            if (val instanceof CellError) {\n                return val;\n            }\n        }\n        const processedHolidays = [];\n        for (const val of holidaysArr) {\n            if (val === EmptyValue) {\n                continue;\n            }\n            if (isExtendedNumber(val)) {\n                processedHolidays.push(Math.trunc(getRawValue(val)));\n            }\n            else {\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n            }\n        }\n        return [...new Set(processedHolidays)].sort((a, b) => a - b)\n            .filter((arg) => {\n            const val = this.interpreter.dateHelper.relativeNumberToAbsoluteNumber(arg);\n            const i = (val - 1) % 7;\n            return (weekendPattern.charAt(i) === '0');\n        });\n    }\n}\nDateTimePlugin.implementedFunctions = {\n    'DATE': {\n        method: 'date',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_DATE\n    },\n    'TIME': {\n        method: 'time',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_TIME\n    },\n    'MONTH': {\n        method: 'month',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'YEAR': {\n        method: 'year',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'HOUR': {\n        method: 'hour',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'MINUTE': {\n        method: 'minute',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'SECOND': {\n        method: 'second',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'TEXT': {\n        method: 'text',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.STRING },\n        ]\n    },\n    'EOMONTH': {\n        method: 'eomonth',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_DATE\n    },\n    'DAY': {\n        method: 'day',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'DAYS': {\n        method: 'days',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'WEEKDAY': {\n        method: 'weekday',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'WEEKNUM': {\n        method: 'weeknum',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'ISOWEEKNUM': {\n        method: 'isoweeknum',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'DATEVALUE': {\n        method: 'datevalue',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n        ],\n        returnNumberType: NumberType.NUMBER_DATE\n    },\n    'TIMEVALUE': {\n        method: 'timevalue',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n        ],\n        returnNumberType: NumberType.NUMBER_TIME\n    },\n    'NOW': {\n        method: 'now',\n        parameters: [],\n        isVolatile: true,\n        returnNumberType: NumberType.NUMBER_DATETIME\n    },\n    'TODAY': {\n        method: 'today',\n        parameters: [],\n        isVolatile: true,\n        returnNumberType: NumberType.NUMBER_DATE\n    },\n    'EDATE': {\n        method: 'edate',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_DATE\n    },\n    'DAYS360': {\n        method: 'days360',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: false },\n        ],\n    },\n    'DATEDIF': {\n        method: 'datedif',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.STRING },\n        ],\n    },\n    'YEARFRAC': {\n        method: 'yearfrac',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, defaultValue: 0, minValue: 0, maxValue: 4 },\n        ],\n    },\n    'INTERVAL': {\n        method: 'interval',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ],\n    },\n    'NETWORKDAYS': {\n        method: 'networkdays',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\n        ],\n    },\n    'NETWORKDAYS.INTL': {\n        method: 'networkdaysintl',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NOERROR, defaultValue: 1 },\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\n        ],\n    },\n    'WORKDAY': {\n        method: 'workday',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\n        ],\n    },\n    'WORKDAY.INTL': {\n        method: 'workdayintl',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NOERROR, defaultValue: 1 },\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true }\n        ],\n    },\n};\n/**\n * Returns i such that:\n * sortedArray[i-1] < val <= sortedArray[i]\n *\n */\nfunction lowerBound(val, sortedArray) {\n    if (sortedArray.length === 0) {\n        return 0;\n    }\n    if (val <= sortedArray[0]) {\n        return 0;\n    }\n    if (sortedArray[sortedArray.length - 1] < val) {\n        return sortedArray.length;\n    }\n    let lower = 0; //sortedArray[lower] < val\n    let upper = sortedArray.length - 1; //sortedArray[upper] >= val\n    while (lower + 1 < upper) {\n        const mid = Math.floor((upper + lower) / 2);\n        if (sortedArray[mid] >= val) {\n            upper = mid;\n        }\n        else {\n            lower = mid;\n        }\n    }\n    return upper;\n}\nfunction computeWeekendPattern(weekend) {\n    var _a;\n    if (typeof weekend !== 'number' && typeof weekend !== 'string') {\n        return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n    }\n    if (typeof weekend === 'string') {\n        if (weekend.length !== 7 || !/^(0|1)*$/.test(weekend) || weekend === '1111111') {\n            return new CellError(ErrorType.NUM, ErrorMessage.WeekendString);\n        }\n        else {\n            return weekend;\n        }\n    }\n    else {\n        return (_a = workdayPatterns.get(weekend)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NUM, ErrorMessage.BadMode);\n    }\n}\nconst weekdayOffsets = new Map([[1, 0], [2, 1], [11, 1], [12, 2], [13, 3], [14, 4], [15, 5], [16, 6], [17, 0]]);\nconst workdayPatterns = new Map([\n    [1, '0000011'],\n    [2, '1000001'],\n    [3, '1100000'],\n    [4, '0110000'],\n    [5, '0011000'],\n    [6, '0001100'],\n    [7, '0000110'],\n    [11, '0000001'],\n    [12, '1000000'],\n    [13, '0100000'],\n    [14, '0010000'],\n    [15, '0001000'],\n    [16, '0000100'],\n    [17, '0000010'],\n]);\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class DegreesPlugin extends FunctionPlugin {\n    degrees(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DEGREES'), (arg) => arg * (180 / Math.PI));\n    }\n}\nDegreesPlugin.implementedFunctions = {\n    'DEGREES': {\n        method: 'degrees',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class DeltaPlugin extends FunctionPlugin {\n    delta(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DELTA'), (left, right) => (left === right ? 1 : 0));\n    }\n}\nDeltaPlugin.implementedFunctions = {\n    'DELTA': {\n        method: 'delta',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class ExpPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to EXP(value)\n     *\n     * Calculates the exponent for basis e\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    exp(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EXP'), Math.exp);\n    }\n}\nExpPlugin.implementedFunctions = {\n    'EXP': {\n        method: 'exp',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { EmptyValue, getRawValue, isExtendedNumber, NumberType } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class FinancialPlugin extends FunctionPlugin {\n    pmt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PMT'), pmtCore);\n    }\n    ipmt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IPMT'), ipmtCore);\n    }\n    ppmt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PPMT'), ppmtCore);\n    }\n    fv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FV'), fvCore);\n    }\n    cumipmt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CUMIPMT'), (rate, periods, value, start, end, type) => {\n            if (start > end) {\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\n            }\n            let acc = 0;\n            for (let i = start; i <= end; i++) {\n                acc += ipmtCore(rate, i, periods, value, 0, type);\n            }\n            return acc;\n        });\n    }\n    cumprinc(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CUMPRINC'), (rate, periods, value, start, end, type) => {\n            if (start > end) {\n                return new CellError(ErrorType.NUM, ErrorMessage.EndStartPeriod);\n            }\n            let acc = 0;\n            for (let i = start; i <= end; i++) {\n                acc += ppmtCore(rate, i, periods, value, 0, type);\n            }\n            return acc;\n        });\n    }\n    db(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DB'), (cost, salvage, life, period, month) => {\n            if ((month === 12 && period > life) || (period > life + 1)) {\n                return new CellError(ErrorType.NUM, ErrorMessage.PeriodLong);\n            }\n            if (salvage >= cost) {\n                return 0;\n            }\n            const rate = Math.round((1 - Math.pow(salvage / cost, 1 / life)) * 1000) / 1000;\n            const initial = cost * rate * month / 12;\n            if (period === 1) {\n                return initial;\n            }\n            let total = initial;\n            for (let i = 0; i < period - 2; i++) {\n                total += (cost - total) * rate;\n            }\n            if (period === life + 1) {\n                return (cost - total) * rate * (12 - month) / 12;\n            }\n            return (cost - total) * rate;\n        });\n    }\n    ddb(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DDB'), (cost, salvage, life, period, factor) => {\n            if (period > life) {\n                return new CellError(ErrorType.NUM);\n            }\n            let rate = factor / life;\n            let oldValue;\n            if (rate >= 1) {\n                rate = 1;\n                if (period === 1) {\n                    oldValue = cost;\n                }\n                else {\n                    oldValue = 0;\n                }\n            }\n            else {\n                oldValue = cost * Math.pow(1 - rate, period - 1);\n            }\n            const newValue = cost * Math.pow(1 - rate, period);\n            return Math.max(oldValue - Math.max(salvage, newValue), 0);\n        });\n    }\n    dollarde(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DOLLARDE'), (dollar, fraction) => {\n            if (fraction < 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            fraction = Math.trunc(fraction);\n            while (fraction > 10) {\n                fraction /= 10;\n            }\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * 10 / fraction;\n        });\n    }\n    dollarfr(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DOLLARFR'), (dollar, fraction) => {\n            if (fraction < 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            fraction = Math.trunc(fraction);\n            while (fraction > 10) {\n                fraction /= 10;\n            }\n            return Math.trunc(dollar) + (dollar - Math.trunc(dollar)) * fraction / 10;\n        });\n    }\n    effect(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EFFECT'), (rate, periods) => {\n            periods = Math.trunc(periods);\n            return Math.pow(1 + rate / periods, periods) - 1;\n        });\n    }\n    ispmt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISPMT'), (rate, period, periods, value) => {\n            if (periods === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return value * rate * (period / periods - 1);\n        });\n    }\n    nominal(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NOMINAL'), (rate, periods) => {\n            periods = Math.trunc(periods);\n            return (Math.pow(rate + 1, 1 / periods) - 1) * periods;\n        });\n    }\n    nper(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NPER'), (rate, payment, present, future, type) => {\n            if (rate === 0) {\n                if (payment === 0) {\n                    return new CellError(ErrorType.DIV_BY_ZERO);\n                }\n                return (-present - future) / payment;\n            }\n            if (type) {\n                payment *= 1 + rate;\n            }\n            return Math.log((payment - future * rate) / (present * rate + payment)) / Math.log(1 + rate);\n        });\n    }\n    rate(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RATE'), (periods, payment, present, future, type, guess) => {\n            if (guess <= -1) {\n                return new CellError(ErrorType.VALUE);\n            }\n            const epsMax = 1e-10;\n            const iterMax = 20;\n            let rate = guess;\n            type = type ? 1 : 0;\n            for (let i = 0; i < iterMax; i++) {\n                if (rate <= -1) {\n                    return new CellError(ErrorType.NUM);\n                }\n                let y;\n                if (Math.abs(rate) < epsMax) {\n                    y = present * (1 + periods * rate) + payment * (1 + rate * type) * periods + future;\n                }\n                else {\n                    const f = Math.pow(1 + rate, periods);\n                    y = present * f + payment * (1 / rate + type) * (f - 1) + future;\n                }\n                if (Math.abs(y) < epsMax) {\n                    return rate;\n                }\n                let dy;\n                if (Math.abs(rate) < epsMax) {\n                    dy = present * periods + payment * type * periods;\n                }\n                else {\n                    const f = Math.pow(1 + rate, periods);\n                    const df = periods * Math.pow(1 + rate, periods - 1);\n                    dy = present * df + payment * (1 / rate + type) * df + payment * (-1 / (rate * rate)) * (f - 1);\n                }\n                rate -= y / dy;\n            }\n            return new CellError(ErrorType.NUM);\n        });\n    }\n    pv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PV'), (rate, periods, payment, future, type) => {\n            type = type ? 1 : 0;\n            if (rate === -1) {\n                if (periods === 0) {\n                    return new CellError(ErrorType.NUM);\n                }\n                else {\n                    return new CellError(ErrorType.DIV_BY_ZERO);\n                }\n            }\n            if (rate === 0) {\n                return -payment * periods - future;\n            }\n            else {\n                return ((1 - Math.pow(1 + rate, periods)) * payment * (1 + rate * type) / rate - future) / Math.pow(1 + rate, periods);\n            }\n        });\n    }\n    rri(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RRI'), (periods, present, future) => {\n            if (present === 0 || (future < 0 && present > 0) || (future > 0 && present < 0)) {\n                return new CellError(ErrorType.NUM);\n            }\n            return Math.pow(future / present, 1 / periods) - 1;\n        });\n    }\n    sln(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SLN'), (cost, salvage, life) => {\n            if (life === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return (cost - salvage) / life;\n        });\n    }\n    syd(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SYD'), (cost, salvage, life, period) => {\n            if (period > life) {\n                return new CellError(ErrorType.NUM);\n            }\n            return ((cost - salvage) * (life - period + 1) * 2) / (life * (life + 1));\n        });\n    }\n    tbilleq(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TBILLEQ'), (settlement, maturity, discount) => {\n            settlement = Math.round(settlement);\n            maturity = Math.round(maturity);\n            if (settlement >= maturity) {\n                return new CellError(ErrorType.NUM);\n            }\n            const startDate = this.interpreter.dateHelper.numberToSimpleDate(settlement);\n            const endDate = this.interpreter.dateHelper.numberToSimpleDate(maturity);\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\n                return new CellError(ErrorType.NUM);\n            }\n            const denom = 360 - discount * (maturity - settlement);\n            if (denom === 0) {\n                return 0;\n            }\n            if (denom < 0) {\n                return new CellError(ErrorType.NUM);\n            }\n            return 365 * discount / denom;\n        });\n    }\n    tbillprice(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TBILLPRICE'), (settlement, maturity, discount) => {\n            settlement = Math.round(settlement);\n            maturity = Math.round(maturity);\n            if (settlement >= maturity) {\n                return new CellError(ErrorType.NUM);\n            }\n            const startDate = this.interpreter.dateHelper.numberToSimpleDate(settlement);\n            const endDate = this.interpreter.dateHelper.numberToSimpleDate(maturity);\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\n                return new CellError(ErrorType.NUM);\n            }\n            const denom = 360 - discount * (maturity - settlement);\n            if (denom === 0) {\n                return 0;\n            }\n            if (denom < 0) {\n                return new CellError(ErrorType.NUM);\n            }\n            return 100 * (1 - discount * (maturity - settlement) / 360);\n        });\n    }\n    tbillyield(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TBILLYIELD'), (settlement, maturity, price) => {\n            settlement = Math.round(settlement);\n            maturity = Math.round(maturity);\n            if (settlement >= maturity) {\n                return new CellError(ErrorType.NUM);\n            }\n            const startDate = this.interpreter.dateHelper.numberToSimpleDate(settlement);\n            const endDate = this.interpreter.dateHelper.numberToSimpleDate(maturity);\n            if (endDate.year > startDate.year + 1 || (endDate.year === startDate.year + 1 && (endDate.month > startDate.month || (endDate.month === startDate.month && endDate.day > startDate.day)))) {\n                return new CellError(ErrorType.NUM);\n            }\n            return (100 - price) * 360 / (price * (maturity - settlement));\n        });\n    }\n    fvschedule(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FVSCHEDULE'), (value, ratios) => {\n            const vals = ratios.valuesFromTopLeftCorner();\n            for (const val of vals) {\n                if (val instanceof CellError) {\n                    return val;\n                }\n            }\n            for (const val of vals) {\n                if (isExtendedNumber(val)) {\n                    value *= 1 + getRawValue(val);\n                }\n                else if (val !== EmptyValue) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n                }\n            }\n            return value;\n        });\n    }\n    npv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NPV'), (rate, ...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            return npvCore(rate, coerced);\n        });\n    }\n    mirr(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MIRR'), (range, frate, rrate) => {\n            const vals = this.interpreter.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n            if (vals instanceof CellError) {\n                return vals;\n            }\n            let posFlag = false;\n            let negFlag = false;\n            const posValues = [];\n            const negValues = [];\n            for (const val of vals) {\n                if (val > 0) {\n                    posFlag = true;\n                    posValues.push(val);\n                    negValues.push(0);\n                }\n                else if (val < 0) {\n                    negFlag = true;\n                    negValues.push(val);\n                    posValues.push(0);\n                }\n                else {\n                    negValues.push(0);\n                    posValues.push(0);\n                }\n            }\n            if (!posFlag || !negFlag) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            const n = vals.length;\n            const nom = npvCore(rrate, posValues);\n            if (nom instanceof CellError) {\n                return nom;\n            }\n            const denom = npvCore(frate, negValues);\n            if (denom instanceof CellError) {\n                return denom;\n            }\n            return Math.pow((-nom * Math.pow(1 + rrate, n) / denom / (1 + frate)), 1 / (n - 1)) - 1;\n        });\n    }\n    pduration(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PDURATION'), (rate, pv, fv) => (Math.log(fv) - Math.log(pv)) / Math.log(1 + rate));\n    }\n    xnpv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('XNPV'), (rate, values, dates) => {\n            const valArr = values.valuesFromTopLeftCorner();\n            for (const val of valArr) {\n                if (typeof val !== 'number') {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n                }\n            }\n            const valArrNum = valArr;\n            const dateArr = dates.valuesFromTopLeftCorner();\n            for (const date of dateArr) {\n                if (typeof date !== 'number') {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.NumberExpected);\n                }\n            }\n            const dateArrNum = dateArr;\n            if (dateArrNum.length !== valArrNum.length) {\n                return new CellError(ErrorType.NUM, ErrorMessage.EqualLength);\n            }\n            const n = dateArrNum.length;\n            let ret = 0;\n            if (dateArrNum[0] < 0) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n            }\n            for (let i = 0; i < n; i++) {\n                dateArrNum[i] = Math.floor(dateArrNum[i]);\n                if (dateArrNum[i] < dateArrNum[0]) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                }\n                ret += valArrNum[i] / Math.pow(1 + rate, (dateArrNum[i] - dateArrNum[0]) / 365);\n            }\n            return ret;\n        });\n    }\n}\nFinancialPlugin.implementedFunctions = {\n    'PMT': {\n        method: 'pmt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'IPMT': {\n        method: 'ipmt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'PPMT': {\n        method: 'ppmt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'FV': {\n        method: 'fv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'CUMIPMT': {\n        method: 'cumipmt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0, maxValue: 1 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'CUMPRINC': {\n        method: 'cumprinc',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0, maxValue: 1 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'DB': {\n        method: 'db',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 12, defaultValue: 12 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'DDB': {\n        method: 'ddb',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, defaultValue: 2 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'DOLLARDE': {\n        method: 'dollarde',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ],\n    },\n    'DOLLARFR': {\n        method: 'dollarfr',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ],\n    },\n    'EFFECT': {\n        method: 'effect',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'ISPMT': {\n        method: 'ispmt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'NOMINAL': {\n        method: 'nominal',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'NPER': {\n        method: 'nper',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'PV': {\n        method: 'pv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'RATE': {\n        method: 'rate',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0.1 },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'RRI': {\n        method: 'rri',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'SLN': {\n        method: 'sln',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'SYD': {\n        method: 'syd',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'TBILLEQ': {\n        method: 'tbilleq',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'TBILLPRICE': {\n        method: 'tbillprice',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'TBILLYIELD': {\n        method: 'tbillyield',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'FVSCHEDULE': {\n        method: 'fvschedule',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'NPV': {\n        method: 'npv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1,\n        returnNumberType: NumberType.NUMBER_CURRENCY\n    },\n    'MIRR': {\n        method: 'mirr',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        returnNumberType: NumberType.NUMBER_PERCENT\n    },\n    'PDURATION': {\n        method: 'pduration',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ],\n    },\n    'XNPV': {\n        method: 'xnpv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: -1 },\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n};\nfunction pmtCore(rate, periods, present, future, type) {\n    if (rate === 0) {\n        return (-present - future) / periods;\n    }\n    else {\n        const term = Math.pow(1 + rate, periods);\n        return (future * rate + present * rate * term) * (type ? 1 / (1 + rate) : 1) / (1 - term);\n    }\n}\nfunction ipmtCore(rate, period, periods, present, future, type) {\n    const payment = pmtCore(rate, periods, present, future, type);\n    if (period === 1) {\n        return rate * (type ? 0 : -present);\n    }\n    else {\n        return rate * (type ? fvCore(rate, period - 2, payment, present, type) - payment : fvCore(rate, period - 1, payment, present, type));\n    }\n}\nfunction fvCore(rate, periods, payment, value, type) {\n    if (rate === 0) {\n        return -value - payment * periods;\n    }\n    else {\n        const term = Math.pow(1 + rate, periods);\n        return payment * (type ? (1 + rate) : 1) * (1 - term) / rate - value * term;\n    }\n}\nfunction ppmtCore(rate, period, periods, present, future, type) {\n    return pmtCore(rate, periods, present, future, type) - ipmtCore(rate, period, periods, present, future, type);\n}\nfunction npvCore(rate, args) {\n    let acc = 0;\n    for (let i = args.length - 1; i >= 0; i--) {\n        acc += args[i];\n        if (rate === -1) {\n            if (acc === 0) {\n                continue;\n            }\n            else {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n        }\n        acc /= 1 + rate;\n    }\n    return acc;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { FunctionPlugin } from '../index';\nimport { ArgumentTypes } from './FunctionPlugin';\nexport class FormulaTextPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to FORMULATEXT(value)\n     *\n     * Returns a formula in a given cell as a string.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    formulatext(ast, formulaAddress) {\n        return this.runFunctionWithReferenceArgument(ast.args, formulaAddress, this.metadata('FORMULATEXT'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (cellReference) => { var _a; return (_a = this.serialization.getCellFormula(cellReference)) !== null && _a !== void 0 ? _a : new CellError(ErrorType.NA, ErrorMessage.Formula); });\n    }\n}\nFormulaTextPlugin.implementedFunctions = {\n    'FORMULATEXT': {\n        method: 'formulatext',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR }\n        ],\n        doesNotNeedArgumentsToBeComputed: true,\n        isDependentOnSheetStructureChange: true\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { FormulaCellVertex, MatrixVertex } from '../../DependencyGraph';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { EmptyValue, isExtendedNumber } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing information functions\n */\nexport class InformationPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to ISBINARY(value)\n     *\n     * Returns true if provided value is a valid binary number\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isbinary(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISBINARY'), (arg) => /^[01]{1,10}$/.test(arg));\n    }\n    /**\n     * Corresponds to ISERR(value)\n     *\n     * Returns true if provided value is an error except #N/A!\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    iserr(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISERR'), (arg) => (arg instanceof CellError && arg.type !== ErrorType.NA));\n    }\n    /**\n     * Corresponds to ISERROR(value)\n     *\n     * Checks whether provided value is an error\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    iserror(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISERROR'), (arg) => (arg instanceof CellError));\n    }\n    /**\n     * Corresponds to ISFORMULA(value)\n     *\n     * Checks whether referenced cell is a formula\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isformula(ast, formulaAddress) {\n        return this.runFunctionWithReferenceArgument(ast.args, formulaAddress, this.metadata('ISFORMULA'), () => new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber), (reference) => {\n            const vertex = this.dependencyGraph.addressMapping.getCell(reference);\n            return vertex instanceof FormulaCellVertex || (vertex instanceof MatrixVertex && vertex.isFormula());\n        });\n    }\n    /**\n     * Corresponds to ISBLANK(value)\n     *\n     * Checks whether provided cell reference is empty\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isblank(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISBLANK'), (arg) => (arg === EmptyValue));\n    }\n    /**\n     * Corresponds to ISNA(value)\n     *\n     * Returns true if provided value is #N/A! error\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isna(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISNA'), (arg) => (arg instanceof CellError && arg.type == ErrorType.NA));\n    }\n    /**\n     * Corresponds to ISNUMBER(value)\n     *\n     * Checks whether provided cell reference is a number\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isnumber(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISNUMBER'), isExtendedNumber);\n    }\n    /**\n     * Corresponds to ISLOGICAL(value)\n     *\n     * Checks whether provided cell reference is of logical type\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    islogical(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISLOGICAL'), (arg) => (typeof arg === 'boolean'));\n    }\n    /**\n     * Corresponds to ISREF(value)\n     *\n     * Returns true if provided value is #REF! error\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isref(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISREF'), (arg) => (arg instanceof CellError && (arg.type == ErrorType.REF || arg.type == ErrorType.CYCLE)));\n    }\n    /**\n     * Corresponds to ISTEXT(value)\n     *\n     * Checks whether provided cell reference is of logical type\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    istext(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISTEXT'), (arg) => (typeof arg === 'string'));\n    }\n    /**\n     * Corresponds to ISNONTEXT(value)\n     *\n     * Checks whether provided cell reference is of logical type\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    isnontext(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISNONTEXT'), (arg) => !(typeof arg === 'string'));\n    }\n    /**\n     * Corresponds to COLUMN(reference)\n     *\n     * Returns column number of a reference or a formula cell if reference not provided\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    column(ast, formulaAddress) {\n        return this.runFunctionWithReferenceArgument(ast.args, formulaAddress, this.metadata('COLUMN'), () => formulaAddress.col + 1, (reference) => reference.col + 1);\n    }\n    /**\n     * Corresponds to COLUMNS(range)\n     *\n     * Returns number of columns in provided range of cells\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    columns(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n        }\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n        }\n        const rangeAst = ast.args[0];\n        if (rangeAst.type === AstNodeType.CELL_RANGE) {\n            return rangeAst.end.col - rangeAst.start.col + 1;\n        }\n        else {\n            return new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\n        }\n    }\n    /**\n     * Corresponds to ROW(reference)\n     *\n     * Returns row number of a reference or a formula cell if reference not provided\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    row(ast, formulaAddress) {\n        return this.runFunctionWithReferenceArgument(ast.args, formulaAddress, this.metadata('ROW'), () => formulaAddress.row + 1, (reference) => reference.row + 1);\n    }\n    /**\n     * Corresponds to ROWS(range)\n     *\n     * Returns number of rows in provided range of cells\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    rows(ast, formulaAddress) {\n        if (ast.args.length !== 1) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n        }\n        if (ast.args.some((astIt) => astIt.type === AstNodeType.EMPTY)) {\n            return new CellError(ErrorType.NUM, ErrorMessage.EmptyArg);\n        }\n        const rangeAst = ast.args[0];\n        if (rangeAst.type === AstNodeType.CELL_RANGE) {\n            return rangeAst.end.row - rangeAst.start.row + 1;\n        }\n        else {\n            return new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\n        }\n    }\n    /**\n     * Corresponds to INDEX(range;)\n     *\n     * Returns number of rows in provided range of cells\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    index(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('INDEX'), (rangeValue, row, col) => {\n            var _a;\n            if (col < 1 || row < 1) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n            }\n            if (col > rangeValue.width() || row > rangeValue.height()) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            const range = rangeValue.range();\n            if (range === undefined) {\n                return (_a = rangeValue.topLeftCornerValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.VALUE, ErrorMessage.CellRangeExpected);\n            }\n            const address = range.getAddress(col - 1, row - 1);\n            return this.dependencyGraph.getScalarValue(address);\n        });\n    }\n    /**\n     * Corresponds to NA()\n     *\n     * Returns #N/A!\n     *\n     * @param _ast\n     * @param _formulaAddress\n     */\n    na(_ast, _formulaAddress) {\n        return new CellError(ErrorType.NA);\n    }\n    /**\n     * Corresponds to SHEET(value)\n     *\n     * Returns sheet number of a given value or a formula sheet number if no argument is provided\n     *\n     * @param ast\n     * @param formulaAddress\n     * */\n    sheet(ast, formulaAddress) {\n        return this.runFunctionWithReferenceArgument(ast.args, formulaAddress, { parameters: [{ argumentType: ArgumentTypes.STRING }] }, () => formulaAddress.sheet + 1, (reference) => reference.sheet + 1, (value) => {\n            const sheetNumber = this.dependencyGraph.sheetMapping.get(value);\n            if (sheetNumber !== undefined) {\n                return sheetNumber + 1;\n            }\n            else {\n                return new CellError(ErrorType.NA, ErrorMessage.SheetRef);\n            }\n        });\n    }\n    /**\n     * Corresponds to SHEETS(value)\n     *\n     * Returns number of sheet of a given reference or number of all sheets in workbook when no argument is provided.\n     * It returns always 1 for a valid reference as 3D references are not supported.\n     *\n     * @param ast\n     * @param formulaAddress\n     * */\n    sheets(ast, formulaAddress) {\n        return this.runFunctionWithReferenceArgument(ast.args, formulaAddress, { parameters: [{ argumentType: ArgumentTypes.STRING }] }, () => this.dependencyGraph.sheetMapping.numberOfSheets(), // return number of sheets if no argument\n        () => 1, // return 1 for valid reference\n        () => new CellError(ErrorType.VALUE, ErrorMessage.CellRefExpected) // error otherwise\n        );\n    }\n}\nInformationPlugin.implementedFunctions = {\n    'COLUMN': {\n        method: 'column',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, optional: true }\n        ],\n        isDependentOnSheetStructureChange: true,\n        doesNotNeedArgumentsToBeComputed: true,\n    },\n    'COLUMNS': {\n        method: 'columns',\n        isDependentOnSheetStructureChange: true,\n        doesNotNeedArgumentsToBeComputed: true,\n    },\n    'ISBINARY': {\n        method: 'isbinary',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'ISERR': {\n        method: 'iserr',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISFORMULA': {\n        method: 'isformula',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR }\n        ],\n        doesNotNeedArgumentsToBeComputed: true\n    },\n    'ISNA': {\n        method: 'isna',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISREF': {\n        method: 'isref',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISERROR': {\n        method: 'iserror',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISBLANK': {\n        method: 'isblank',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISNUMBER': {\n        method: 'isnumber',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISLOGICAL': {\n        method: 'islogical',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISTEXT': {\n        method: 'istext',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'ISNONTEXT': {\n        method: 'isnontext',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'INDEX': {\n        method: 'index',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'NA': {\n        method: 'na'\n    },\n    'ROW': {\n        method: 'row',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, optional: true }\n        ],\n        isDependentOnSheetStructureChange: true,\n        doesNotNeedArgumentsToBeComputed: true,\n    },\n    'ROWS': {\n        method: 'rows',\n        isDependentOnSheetStructureChange: true,\n        doesNotNeedArgumentsToBeComputed: true,\n    },\n    'SHEET': {\n        method: 'sheet',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR }\n        ],\n        doesNotNeedArgumentsToBeComputed: true\n    },\n    'SHEETS': {\n        method: 'sheets',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR }\n        ],\n        doesNotNeedArgumentsToBeComputed: true\n    }\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class IsEvenPlugin extends FunctionPlugin {\n    iseven(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISEVEN'), (val) => (val % 2 === 0));\n    }\n}\nIsEvenPlugin.implementedFunctions = {\n    'ISEVEN': {\n        method: 'iseven',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class IsOddPlugin extends FunctionPlugin {\n    isodd(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ISODD'), (val) => (val % 2 === 1));\n    }\n}\nIsOddPlugin.implementedFunctions = {\n    'ISODD': {\n        method: 'isodd',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class LogarithmPlugin extends FunctionPlugin {\n    log10(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LOG10'), Math.log10);\n    }\n    log(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LOG'), (arg, base) => Math.log(arg) / Math.log(base));\n    }\n    ln(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LN'), Math.log);\n    }\n}\nLogarithmPlugin.implementedFunctions = {\n    'LOG10': {\n        method: 'log10',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'LOG': {\n        method: 'log',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 10, greaterThan: 0 },\n        ]\n    },\n    'LN': {\n        method: 'ln',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport const PI = parseFloat(Math.PI.toFixed(14));\nexport class MathConstantsPlugin extends FunctionPlugin {\n    pi(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PI'), () => PI);\n    }\n    sqrtpi(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SQRTPI'), (arg) => Math.sqrt(PI * arg));\n    }\n}\nMathConstantsPlugin.implementedFunctions = {\n    'PI': {\n        method: 'pi',\n        parameters: [],\n    },\n    'SQRTPI': {\n        method: 'sqrtpi',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { matrixSizeForMultiplication, matrixSizeForPoolFunction, matrixSizeForTranspose } from '../../Matrix';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class MatrixPlugin extends FunctionPlugin {\n    constructor(interpreter) {\n        super(interpreter);\n        this.createCpuKernel = (kernel, outputSize) => {\n            return function (...args) {\n                const result = [];\n                for (let y = 0; y < outputSize.height; ++y) {\n                    result.push([]);\n                    for (let x = 0; x < outputSize.width; ++x) {\n                        result[y][x] = kernel.apply({ thread: { x, y } }, args);\n                    }\n                }\n                return result;\n            };\n        };\n        this.createGpuJsKernel = (kernel, outputSize) => {\n            return this.interpreter.getGpuInstance()\n                .createKernel(kernel)\n                .setPrecision('unsigned')\n                .setOutput([outputSize.width, outputSize.height]);\n        };\n        if (this.config.gpujs === undefined) {\n            this.createKernel = this.createCpuKernel;\n        }\n        else {\n            this.createKernel = this.createGpuJsKernel;\n        }\n    }\n    mmult(ast, formulaAddress) {\n        return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MMULT'), (leftMatrix, rightMatrix) => {\n            if (!leftMatrix.hasOnlyNumbers() || !rightMatrix.hasOnlyNumbers()) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n            }\n            const outputSize = matrixSizeForMultiplication(leftMatrix.size, rightMatrix.size);\n            const result = this.createKernel(function (a, b, width) {\n                let sum = 0;\n                for (let i = 0; i < width; ++i) {\n                    sum += a[this.thread.y][i] * b[i][this.thread.x];\n                }\n                return sum;\n            }, outputSize)(leftMatrix.rawNumbers(), rightMatrix.rawNumbers(), leftMatrix.width());\n            return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n        });\n    }\n    maxpool(ast, formulaAddress) {\n        return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MAXPOOL'), (matrix, windowSize, stride = windowSize) => {\n            if (!matrix.hasOnlyNumbers()) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n            }\n            const outputSize = matrixSizeForPoolFunction(matrix.size, windowSize, stride);\n            const result = this.createKernel(function (a, windowSize, stride) {\n                const leftCornerX = this.thread.x * stride;\n                const leftCornerY = this.thread.y * stride;\n                let currentMax = a[leftCornerY][leftCornerX];\n                for (let i = 0; i < windowSize; i++) {\n                    for (let j = 0; j < windowSize; j++) {\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n                    }\n                }\n                return currentMax;\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n            return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n        });\n    }\n    medianpool(ast, formulaAddress) {\n        return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('MEDIANPOOL'), (matrix, windowSize, stride = windowSize) => {\n            if (!matrix.hasOnlyNumbers()) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n            }\n            const outputSize = matrixSizeForPoolFunction(matrix.size, windowSize, stride);\n            const result = this.createKernel(function (a, windowSize, stride) {\n                const leftCornerX = this.thread.x * stride;\n                const leftCornerY = this.thread.y * stride;\n                let currentMax = a[leftCornerY][leftCornerX];\n                for (let i = 0; i < windowSize; i++) {\n                    for (let j = 0; j < windowSize; j++) {\n                        currentMax = Math.max(currentMax, a[leftCornerY + i][leftCornerX + j]);\n                    }\n                }\n                let currentMin = a[leftCornerY][leftCornerX];\n                for (let i2 = 0; i2 < windowSize; i2++) {\n                    for (let j2 = 0; j2 < windowSize; j2++) {\n                        currentMin = Math.min(currentMin, a[leftCornerY + i2][leftCornerX + j2]);\n                    }\n                }\n                const numberOfElements = windowSize * windowSize;\n                let leftEnd = currentMin;\n                let rightEnd = currentMax;\n                let result = 42;\n                for (let iter = 0; iter < 32; iter++) {\n                    const medianGuess = (leftEnd + rightEnd) / 2;\n                    let medianGuessCount = 0;\n                    for (let i3 = 0; i3 < windowSize; i3++) {\n                        for (let j3 = 0; j3 < windowSize; j3++) {\n                            if (a[leftCornerY + i3][leftCornerX + j3] > medianGuess) {\n                                medianGuessCount++;\n                            }\n                        }\n                    }\n                    if (windowSize % 2 === 0) {\n                        if (medianGuessCount === numberOfElements / 2) {\n                            result = medianGuess;\n                            break;\n                        }\n                        else if (medianGuessCount > numberOfElements / 2) {\n                            leftEnd = medianGuess;\n                        }\n                        else {\n                            rightEnd = medianGuess;\n                        }\n                    }\n                    else {\n                        if (medianGuessCount === (numberOfElements - 1) / 2) {\n                            result = medianGuess;\n                            break;\n                        }\n                        else if (medianGuessCount > (numberOfElements - 1) / 2) {\n                            leftEnd = medianGuess;\n                        }\n                        else {\n                            rightEnd = medianGuess;\n                        }\n                    }\n                }\n                return result;\n            }, outputSize)(matrix.rawNumbers(), windowSize, stride);\n            return SimpleRangeValue.onlyNumbersDataWithoutRange(result, outputSize);\n        });\n    }\n    transpose(ast, formulaAddress) {\n        return this.runMatrixFunction(ast.args, formulaAddress, this.metadata('TRANSPOSE'), (matrix) => {\n            if (!matrix.hasOnlyNumbers()) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NumberRange);\n            }\n            const input = matrix.rawNumbers();\n            const inputSize = matrix.size;\n            const result = [];\n            for (let i = 0; i < inputSize.width; ++i) {\n                result[i] = [];\n                for (let j = 0; j < inputSize.height; ++j) {\n                    result[i][j] = input[j][i];\n                }\n            }\n            return SimpleRangeValue.onlyNumbersDataWithoutRange(result, matrixSizeForTranspose(inputSize));\n        });\n    }\n}\nMatrixPlugin.implementedFunctions = {\n    'MMULT': {\n        method: 'mmult',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'TRANSPOSE': {\n        method: 'transpose',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'MAXPOOL': {\n        method: 'maxpool',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\n        ],\n    },\n    'MEDIANPOOL': {\n        method: 'medianpool',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing MEDIAN function\n */\nexport class MedianPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to MEDIAN(Number1, Number2, ...).\n     *\n     * Returns a median of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    median(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MEDIAN'), (...args) => {\n            const values = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (values instanceof CellError) {\n                return values;\n            }\n            if (values.length === 0) {\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\n            }\n            values.sort((a, b) => (a - b));\n            if (values.length % 2 === 0) {\n                return (values[(values.length / 2) - 1] + values[values.length / 2]) / 2;\n            }\n            else {\n                return values[Math.floor(values.length / 2)];\n            }\n        });\n    }\n    large(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LARGE'), (range, n) => {\n            const vals = this.interpreter.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n            if (vals instanceof CellError) {\n                return vals;\n            }\n            vals.sort((a, b) => a - b);\n            n = Math.trunc(n);\n            if (n > vals.length) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            return vals[vals.length - n];\n        });\n    }\n    small(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SMALL'), (range, n) => {\n            const vals = this.interpreter.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n            if (vals instanceof CellError) {\n                return vals;\n            }\n            vals.sort((a, b) => a - b);\n            n = Math.trunc(n);\n            if (n > vals.length) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            return vals[n - 1];\n        });\n    }\n}\nMedianPlugin.implementedFunctions = {\n    'MEDIAN': {\n        method: 'median',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1,\n    },\n    'LARGE': {\n        method: 'large',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ],\n    },\n    'SMALL': {\n        method: 'small',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class ModuloPlugin extends FunctionPlugin {\n    mod(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MOD'), (dividend, divisor) => {\n            if (divisor === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            else {\n                return dividend % divisor;\n            }\n        });\n    }\n}\nModuloPlugin.implementedFunctions = {\n    'MOD': {\n        method: 'mod',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange, DIFFERENT_SHEETS_ERROR } from '../../AbsoluteCellRange';\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { AstNodeType } from '../../parser';\nimport { coerceBooleanToNumber } from '../ArithmeticHelper';\nimport { EmptyValue, getRawValue, isExtendedNumber, } from '../InterpreterValue';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nfunction identityMap(arg) {\n    return arg;\n}\nfunction zeroForInfinite(value) {\n    if (isExtendedNumber(value) && !Number.isFinite(getRawValue(value))) {\n        return 0;\n    }\n    else {\n        return value;\n    }\n}\nclass MomentsAggregate {\n    constructor(sumsq, sum, count) {\n        this.sumsq = sumsq;\n        this.sum = sum;\n        this.count = count;\n    }\n    static single(arg) {\n        return new MomentsAggregate(arg * arg, arg, 1);\n    }\n    compose(other) {\n        return new MomentsAggregate(this.sumsq + other.sumsq, this.sum + other.sum, this.count + other.count);\n    }\n    averageValue() {\n        if (this.count > 0) {\n            return this.sum / this.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n    varSValue() {\n        if (this.count > 1) {\n            return (this.sumsq - (this.sum * this.sum) / this.count) / (this.count - 1);\n        }\n        else {\n            return undefined;\n        }\n    }\n    varPValue() {\n        if (this.count > 0) {\n            return (this.sumsq - (this.sum * this.sum) / this.count) / this.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nMomentsAggregate.empty = new MomentsAggregate(0, 0, 0);\nexport class NumericAggregationPlugin extends FunctionPlugin {\n    constructor() {\n        super(...arguments);\n        this.addWithEpsilonRaw = (left, right) => this.interpreter.arithmeticHelper.addWithEpsilonRaw(left, right);\n    }\n    /**\n     * Corresponds to SUM(Number1, Number2, ...).\n     *\n     * Returns a sum of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    sum(ast, formulaAddress) {\n        return this.doSum(ast.args, formulaAddress);\n    }\n    sumsq(ast, formulaAddress) {\n        return this.reduce(ast.args, formulaAddress, 0, 'SUMSQ', this.addWithEpsilonRaw, (arg) => Math.pow(getRawValue(arg), 2), strictlyNumbers);\n    }\n    /**\n     * Corresponds to MAX(Number1, Number2, ...).\n     *\n     * Returns a max of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    max(ast, formulaAddress) {\n        return this.doMax(ast.args, formulaAddress);\n    }\n    maxa(ast, formulaAddress) {\n        const value = this.reduce(ast.args, formulaAddress, Number.NEGATIVE_INFINITY, 'MAXA', (left, right) => Math.max(left, right), getRawValue, numbersBooleans);\n        return zeroForInfinite(value);\n    }\n    /**\n     * Corresponds to MIN(Number1, Number2, ...).\n     *\n     * Returns a min of given numbers.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    min(ast, formulaAddress) {\n        return this.doMin(ast.args, formulaAddress);\n    }\n    mina(ast, formulaAddress) {\n        const value = this.reduce(ast.args, formulaAddress, Number.POSITIVE_INFINITY, 'MINA', (left, right) => Math.min(left, right), getRawValue, numbersBooleans);\n        return zeroForInfinite(value);\n    }\n    count(ast, formulaAddress) {\n        return this.doCount(ast.args, formulaAddress);\n    }\n    counta(ast, formulaAddress) {\n        return this.doCounta(ast.args, formulaAddress);\n    }\n    average(ast, formulaAddress) {\n        return this.doAverage(ast.args, formulaAddress);\n    }\n    averagea(ast, formulaAddress) {\n        var _a;\n        const result = this.reduce(ast.args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => left.compose(right), (arg) => MomentsAggregate.single(getRawValue(arg)), numbersBooleans);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    vars(ast, formulaAddress) {\n        return this.doVarS(ast.args, formulaAddress);\n    }\n    varp(ast, formulaAddress) {\n        return this.doVarP(ast.args, formulaAddress);\n    }\n    vara(ast, formulaAddress) {\n        var _a;\n        const result = this.reduceAggregateA(ast.args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    varpa(ast, formulaAddress) {\n        var _a;\n        const result = this.reduceAggregateA(ast.args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    stdevs(ast, formulaAddress) {\n        return this.doStdevS(ast.args, formulaAddress);\n    }\n    stdevp(ast, formulaAddress) {\n        return this.doStdevP(ast.args, formulaAddress);\n    }\n    stdeva(ast, formulaAddress) {\n        const result = this.reduceAggregateA(ast.args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            const val = result.varSValue();\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n        }\n    }\n    stdevpa(ast, formulaAddress) {\n        const result = this.reduceAggregateA(ast.args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            const val = result.varPValue();\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n        }\n    }\n    product(ast, formulaAddress) {\n        return this.doProduct(ast.args, formulaAddress);\n    }\n    subtotal(ast, formulaAddress) {\n        if (ast.args.length < 1) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n        }\n        const functionType = this.coerceToType(this.evaluateAst(ast.args[0], formulaAddress), { argumentType: ArgumentTypes.NUMBER });\n        const args = ast.args.slice(1);\n        switch (functionType) {\n            case 1:\n            case 101:\n                return this.doAverage(args, formulaAddress);\n            case 2:\n            case 102:\n                return this.doCount(args, formulaAddress);\n            case 3:\n            case 103:\n                return this.doCounta(args, formulaAddress);\n            case 4:\n            case 104:\n                return this.doMax(args, formulaAddress);\n            case 5:\n            case 105:\n                return this.doMin(args, formulaAddress);\n            case 6:\n            case 106:\n                return this.doProduct(args, formulaAddress);\n            case 7:\n            case 107:\n                return this.doStdevS(args, formulaAddress);\n            case 8:\n            case 108:\n                return this.doStdevP(args, formulaAddress);\n            case 9:\n            case 109:\n                return this.doSum(args, formulaAddress);\n            case 10:\n            case 110:\n                return this.doVarS(args, formulaAddress);\n            case 11:\n            case 111:\n                return this.doVarP(args, formulaAddress);\n            default:\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadMode);\n        }\n    }\n    reduceAggregate(args, formulaAddress) {\n        return this.reduce(args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE', (left, right) => {\n            return left.compose(right);\n        }, (arg) => {\n            return MomentsAggregate.single(getRawValue(arg));\n        }, strictlyNumbers);\n    }\n    reduceAggregateA(args, formulaAddress) {\n        return this.reduce(args, formulaAddress, MomentsAggregate.empty, '_AGGREGATE_A', (left, right) => {\n            return left.compose(right);\n        }, (arg) => {\n            return MomentsAggregate.single(getRawValue(arg));\n        }, numbersBooleans);\n    }\n    doAverage(args, formulaAddress) {\n        var _a;\n        const result = this.reduceAggregate(args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return (_a = result.averageValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    doVarS(args, formulaAddress) {\n        var _a;\n        const result = this.reduceAggregate(args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return (_a = result.varSValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    doVarP(args, formulaAddress) {\n        var _a;\n        const result = this.reduceAggregate(args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            return (_a = result.varPValue()) !== null && _a !== void 0 ? _a : new CellError(ErrorType.DIV_BY_ZERO);\n        }\n    }\n    doStdevS(args, formulaAddress) {\n        const result = this.reduceAggregate(args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            const val = result.varSValue();\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n        }\n    }\n    doStdevP(args, formulaAddress) {\n        const result = this.reduceAggregate(args, formulaAddress);\n        if (result instanceof CellError) {\n            return result;\n        }\n        else {\n            const val = result.varPValue();\n            return val === undefined ? new CellError(ErrorType.DIV_BY_ZERO) : Math.sqrt(val);\n        }\n    }\n    doCount(args, formulaAddress) {\n        return this.reduce(args, formulaAddress, 0, 'COUNT', (left, right) => left + right, getRawValue, (arg) => (isExtendedNumber(arg)) ? 1 : 0);\n    }\n    doCounta(args, formulaAddress) {\n        return this.reduce(args, formulaAddress, 0, 'COUNTA', (left, right) => left + right, getRawValue, (arg) => (arg === EmptyValue) ? 0 : 1);\n    }\n    doMax(args, formulaAddress) {\n        const value = this.reduce(args, formulaAddress, Number.NEGATIVE_INFINITY, 'MAX', (left, right) => Math.max(left, right), getRawValue, strictlyNumbers);\n        return zeroForInfinite(value);\n    }\n    doMin(args, formulaAddress) {\n        const value = this.reduce(args, formulaAddress, Number.POSITIVE_INFINITY, 'MAX', (left, right) => Math.min(left, right), getRawValue, strictlyNumbers);\n        return zeroForInfinite(value);\n    }\n    doSum(args, formulaAddress) {\n        return this.reduce(args, formulaAddress, 0, 'SUM', this.addWithEpsilonRaw, getRawValue, strictlyNumbers);\n    }\n    doProduct(args, formulaAddress) {\n        return this.reduce(args, formulaAddress, 1, 'PRODUCT', (left, right) => left * right, getRawValue, strictlyNumbers);\n    }\n    /**\n     * Reduces procedure arguments with given reducing function\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     * @param mapFunction\n     * @param coerceFunction\n     * */\n    reduce(args, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\n        if (args.length < 1) {\n            return new CellError(ErrorType.NA, ErrorMessage.WrongArgNumber);\n        }\n        return args.reduce((acc, arg) => {\n            if (acc instanceof CellError) {\n                return acc;\n            }\n            if (arg.type === AstNodeType.CELL_RANGE || arg.type === AstNodeType.COLUMN_RANGE || arg.type === AstNodeType.ROW_RANGE) {\n                return this.evaluateRange(arg, formulaAddress, acc, functionName, reducingFunction, mapFunction, coercionFunction);\n            }\n            let value;\n            value = this.evaluateAst(arg, formulaAddress);\n            if (value instanceof SimpleRangeValue) {\n                const coercedRangeValues = Array.from(value.valuesFromTopLeftCorner())\n                    .map(coercionFunction)\n                    .filter((arg) => (arg !== undefined));\n                return coercedRangeValues\n                    .map((arg) => {\n                    if (arg instanceof CellError) {\n                        return arg;\n                    }\n                    else {\n                        return mapFunction(arg);\n                    }\n                })\n                    .reduce((left, right) => {\n                    if (left instanceof CellError) {\n                        return left;\n                    }\n                    else if (right instanceof CellError) {\n                        return right;\n                    }\n                    else {\n                        return reducingFunction(left, right);\n                    }\n                }, acc);\n            }\n            else if (arg.type === AstNodeType.CELL_REFERENCE) {\n                value = coercionFunction(value);\n                if (value === undefined) {\n                    return acc;\n                }\n            }\n            else {\n                value = this.coerceScalarToNumberOrError(value);\n                value = coercionFunction(value);\n                if (value === undefined) {\n                    return acc;\n                }\n            }\n            if (value instanceof CellError) {\n                return value;\n            }\n            return reducingFunction(acc, mapFunction(value));\n        }, initialAccValue);\n    }\n    /**\n     * Performs range operation on given range\n     *\n     * @param ast - cell range ast\n     * @param formulaAddress - address of the cell in which formula is located\n     * @param initialAccValue - initial accumulator value for reducing function\n     * @param functionName - function name to use as cache key\n     * @param reducingFunction - reducing function\n     */\n    evaluateRange(ast, formulaAddress, initialAccValue, functionName, reducingFunction, mapFunction, coercionFunction) {\n        let range;\n        try {\n            range = AbsoluteCellRange.fromAst(ast, formulaAddress);\n        }\n        catch (err) {\n            if (err.message === DIFFERENT_SHEETS_ERROR) {\n                return new CellError(ErrorType.REF, ErrorMessage.RangeManySheets);\n            }\n            else {\n                throw err;\n            }\n        }\n        const rangeStart = range.start;\n        const rangeEnd = range.end;\n        const rangeVertex = this.dependencyGraph.getRange(rangeStart, rangeEnd);\n        if (!rangeVertex) {\n            throw new Error('Range does not exists in graph');\n        }\n        let value = rangeVertex.getFunctionValue(functionName);\n        if (!value) {\n            const rangeValues = this.getRangeValues(functionName, range, mapFunction, coercionFunction);\n            value = rangeValues.reduce((arg1, arg2) => {\n                if (arg1 instanceof CellError) {\n                    return arg1;\n                }\n                else if (arg2 instanceof CellError) {\n                    return arg2;\n                }\n                else {\n                    return reducingFunction(arg1, arg2);\n                }\n            }, initialAccValue);\n            rangeVertex.setFunctionValue(functionName, value);\n        }\n        return value;\n    }\n    /**\n     * Returns list of values for given range and function name\n     *\n     * If range is dependent on smaller range, list will contain value of smaller range for this function\n     * and values of cells that are not present in smaller range\n     *\n     * @param functionName - function name (e.g. SUM)\n     * @param range - cell range\n     */\n    getRangeValues(functionName, range, mapFunction, coercionFunction) {\n        const rangeResult = [];\n        const { smallerRangeVertex, restRange } = this.dependencyGraph.rangeMapping.findSmallerRange(range);\n        const currentRangeVertex = this.dependencyGraph.getRange(range.start, range.end);\n        let actualRange;\n        if (smallerRangeVertex && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\n            const cachedValue = smallerRangeVertex.getFunctionValue(functionName);\n            if (cachedValue) {\n                rangeResult.push(cachedValue);\n            }\n            else {\n                for (const cellFromRange of smallerRangeVertex.range.addresses(this.dependencyGraph)) {\n                    const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\n                    if (val instanceof CellError) {\n                        rangeResult.push(val);\n                    }\n                    else if (val !== undefined) {\n                        rangeResult.push(mapFunction(val));\n                    }\n                }\n            }\n            actualRange = restRange;\n        }\n        else {\n            actualRange = range;\n        }\n        for (const cellFromRange of actualRange.addresses(this.dependencyGraph)) {\n            const val = coercionFunction(this.dependencyGraph.getScalarValue(cellFromRange));\n            if (val instanceof CellError) {\n                rangeResult.push(val);\n            }\n            else if (val !== undefined) {\n                rangeResult.push(mapFunction(val));\n            }\n        }\n        return rangeResult;\n    }\n}\nNumericAggregationPlugin.implementedFunctions = {\n    'SUM': {\n        method: 'sum',\n    },\n    'SUMSQ': {\n        method: 'sumsq',\n    },\n    'MAX': {\n        method: 'max',\n    },\n    'MIN': {\n        method: 'min',\n    },\n    'MAXA': {\n        method: 'maxa',\n    },\n    'MINA': {\n        method: 'mina',\n    },\n    'COUNT': {\n        method: 'count',\n    },\n    'COUNTA': {\n        method: 'counta',\n    },\n    'AVERAGE': {\n        method: 'average',\n    },\n    'AVERAGEA': {\n        method: 'averagea',\n    },\n    'PRODUCT': {\n        method: 'product',\n    },\n    'VAR.S': {\n        method: 'vars',\n    },\n    'VAR.P': {\n        method: 'varp',\n    },\n    'VARA': {\n        method: 'vara',\n    },\n    'VARPA': {\n        method: 'varpa',\n    },\n    'STDEV.S': {\n        method: 'stdevs',\n    },\n    'STDEV.P': {\n        method: 'stdevp',\n    },\n    'STDEVA': {\n        method: 'stdeva',\n    },\n    'STDEVPA': {\n        method: 'stdevpa',\n    },\n    'SUBTOTAL': {\n        method: 'subtotal',\n    }\n};\nNumericAggregationPlugin.aliases = {\n    VAR: 'VAR.S',\n    VARP: 'VAR.P',\n    STDEV: 'STDEV.S',\n    STDEVP: 'STDEV.P',\n    VARS: 'VAR.S',\n    STDEVS: 'STDEV.S',\n};\nfunction strictlyNumbers(arg) {\n    if (isExtendedNumber(arg) || arg instanceof CellError) {\n        return arg;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction numbersBooleans(arg) {\n    if (typeof arg === 'boolean') {\n        return coerceBooleanToNumber(arg);\n    }\n    else if (isExtendedNumber(arg) || arg instanceof CellError) {\n        return arg;\n    }\n    else if (typeof arg === 'string') {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class PowerPlugin extends FunctionPlugin {\n    power(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('POWER'), Math.pow);\n    }\n}\nPowerPlugin.implementedFunctions = {\n    'POWER': {\n        method: 'power',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class RadiansPlugin extends FunctionPlugin {\n    radians(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RADIANS'), (arg) => arg * (Math.PI / 180));\n    }\n}\nRadiansPlugin.implementedFunctions = {\n    'RADIANS': {\n        method: 'radians',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { padLeft } from '../../format/format';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nconst MAX_LENGTH = 10;\nconst DECIMAL_NUMBER_OF_BITS = 255;\nconst MIN_BASE = 2;\nconst MAX_BASE = 36;\nconst ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nexport class RadixConversionPlugin extends FunctionPlugin {\n    dec2bin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DEC2BIN'), (value, places) => decimalToBaseWithExactPadding(value, 2, places));\n    }\n    dec2oct(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DEC2OCT'), (value, places) => decimalToBaseWithExactPadding(value, 8, places));\n    }\n    dec2hex(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DEC2HEX'), (value, places) => decimalToBaseWithExactPadding(value, 16, places));\n    }\n    bin2dec(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BIN2DEC'), (binary) => {\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n            if (binaryWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n            }\n            return twoComplementToDecimal(binaryWithSign, 2);\n        });\n    }\n    bin2oct(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BIN2OCT'), (binary, places) => {\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n            if (binaryWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n            }\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 8, places);\n        });\n    }\n    bin2hex(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BIN2HEX'), (binary, places) => {\n            const binaryWithSign = coerceStringToBase(binary, 2, MAX_LENGTH);\n            if (binaryWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotBinary);\n            }\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(binaryWithSign, 2), 16, places);\n        });\n    }\n    oct2dec(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('OCT2DEC'), (octal) => {\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n            if (octalWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n            }\n            return twoComplementToDecimal(octalWithSign, 8);\n        });\n    }\n    oct2bin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('OCT2BIN'), (octal, places) => {\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n            if (octalWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n            }\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 2, places);\n        });\n    }\n    oct2hex(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('OCT2HEX'), (octal, places) => {\n            const octalWithSign = coerceStringToBase(octal, 8, MAX_LENGTH);\n            if (octalWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotOctal);\n            }\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(octalWithSign, 8), 16, places);\n        });\n    }\n    hex2dec(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HEX2DEC'), (hexadecimal) => {\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n            if (hexadecimalWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n            }\n            return twoComplementToDecimal(hexadecimalWithSign, 16);\n        });\n    }\n    hex2bin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HEX2BIN'), (hexadecimal, places) => {\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n            if (hexadecimalWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n            }\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 2, places);\n        });\n    }\n    hex2oct(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HEX2OCT'), (hexadecimal, places) => {\n            const hexadecimalWithSign = coerceStringToBase(hexadecimal, 16, MAX_LENGTH);\n            if (hexadecimalWithSign === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n            }\n            return decimalToBaseWithExactPadding(twoComplementToDecimal(hexadecimalWithSign, 16), 8, places);\n        });\n    }\n    base(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BASE'), decimalToBaseWithMinimumPadding);\n    }\n    decimal(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DECIMAL'), (arg, base) => {\n            const input = coerceStringToBase(arg, base, DECIMAL_NUMBER_OF_BITS);\n            if (input === undefined) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NotHex);\n            }\n            return parseInt(input, base);\n        });\n    }\n}\nRadixConversionPlugin.implementedFunctions = {\n    'DEC2BIN': {\n        method: 'dec2bin',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\n        ],\n    },\n    'DEC2OCT': {\n        method: 'dec2oct',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\n        ],\n    },\n    'DEC2HEX': {\n        method: 'dec2hex',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 1, maxValue: 10 },\n        ],\n    },\n    'BIN2DEC': {\n        method: 'bin2dec',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ],\n    },\n    'BIN2OCT': {\n        method: 'bin2oct',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\n        ],\n    },\n    'BIN2HEX': {\n        method: 'bin2hex',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\n        ],\n    },\n    'OCT2DEC': {\n        method: 'oct2dec',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ],\n    },\n    'OCT2BIN': {\n        method: 'oct2bin',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\n        ],\n    },\n    'OCT2HEX': {\n        method: 'oct2hex',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\n        ],\n    },\n    'HEX2DEC': {\n        method: 'hex2dec',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ],\n    },\n    'HEX2BIN': {\n        method: 'hex2bin',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\n        ],\n    },\n    'HEX2OCT': {\n        method: 'hex2oct',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: MAX_LENGTH },\n        ],\n    },\n    'DECIMAL': {\n        method: 'decimal',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\n        ],\n    },\n    'BASE': {\n        method: 'base',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: MIN_BASE, maxValue: MAX_BASE },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true, minValue: 0, maxValue: DECIMAL_NUMBER_OF_BITS },\n        ],\n    },\n};\nfunction coerceStringToBase(value, base, maxLength) {\n    const baseAlphabet = ALPHABET.substr(0, base);\n    const regex = new RegExp(`^[${baseAlphabet}]+$`);\n    if (value.length > maxLength || !regex.test(value)) {\n        return undefined;\n    }\n    return value;\n}\nfunction decimalToBaseWithExactPadding(value, base, places) {\n    if (value > maxValFromBase(base)) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLarge);\n    }\n    if (value < minValFromBase(base)) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseSmall);\n    }\n    const result = decimalToRadixComplement(value, base);\n    if (places === undefined || value < 0) {\n        return result;\n    }\n    else if (result.length > places) {\n        return new CellError(ErrorType.NUM, ErrorMessage.ValueBaseLong);\n    }\n    else {\n        return padLeft(result, places);\n    }\n}\nfunction minValFromBase(base) {\n    return -Math.pow(base, MAX_LENGTH) / 2;\n}\nfunction maxValFromBase(base) {\n    return -minValFromBase(base) - 1;\n}\nfunction decimalToBaseWithMinimumPadding(value, base, places) {\n    const result = decimalToRadixComplement(value, base);\n    if (places !== undefined && places > result.length) {\n        return padLeft(result, places);\n    }\n    else {\n        return result;\n    }\n}\nfunction decimalToRadixComplement(value, base) {\n    const offset = value < 0 ? Math.pow(base, MAX_LENGTH) : 0;\n    return (value + offset).toString(base).toUpperCase();\n}\nfunction twoComplementToDecimal(value, base) {\n    const parsed = parseInt(value, base);\n    const offset = Math.pow(base, MAX_LENGTH);\n    return (parsed >= offset / 2) ? parsed - offset : parsed;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class RandomPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to RAND()\n     *\n     * Returns a pseudo-random floating-point random number\n     * in the range [0,1).\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    rand(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RAND'), Math.random);\n    }\n    randbetween(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RANDBETWEEN'), (lower, upper) => {\n            if (upper < lower) {\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n            }\n            lower = Math.ceil(lower);\n            upper = Math.floor(upper) + 1;\n            if (lower === upper) {\n                upper += 1;\n            }\n            return lower + Math.floor(Math.random() * (upper - lower));\n        });\n    }\n}\nRandomPlugin.implementedFunctions = {\n    'RAND': {\n        method: 'rand',\n        parameters: [],\n        isVolatile: true,\n    },\n    'RANDBETWEEN': {\n        method: 'randbetween',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        isVolatile: true,\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport function findNextOddNumber(arg) {\n    const ceiled = Math.ceil(arg);\n    return (ceiled % 2 === 1) ? ceiled : ceiled + 1;\n}\nexport function findNextEvenNumber(arg) {\n    const ceiled = Math.ceil(arg);\n    return (ceiled % 2 === 0) ? ceiled : ceiled + 1;\n}\nexport class RoundingPlugin extends FunctionPlugin {\n    roundup(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\n            const placesMultiplier = Math.pow(10, places);\n            if (numberToRound < 0) {\n                return -Math.ceil(-numberToRound * placesMultiplier) / placesMultiplier;\n            }\n            else {\n                return Math.ceil(numberToRound * placesMultiplier) / placesMultiplier;\n            }\n        });\n    }\n    rounddown(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ROUNDDOWN'), (numberToRound, places) => {\n            const placesMultiplier = Math.pow(10, places);\n            if (numberToRound < 0) {\n                return -Math.floor(-numberToRound * placesMultiplier) / placesMultiplier;\n            }\n            else {\n                return Math.floor(numberToRound * placesMultiplier) / placesMultiplier;\n            }\n        });\n    }\n    round(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ROUND'), (numberToRound, places) => {\n            const placesMultiplier = Math.pow(10, places);\n            if (numberToRound < 0) {\n                return -Math.round(-numberToRound * placesMultiplier) / placesMultiplier;\n            }\n            else {\n                return Math.round(numberToRound * placesMultiplier) / placesMultiplier;\n            }\n        });\n    }\n    trunc(ast, formulaAddress) {\n        return this.rounddown(ast, formulaAddress);\n    }\n    intFunc(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('INT'), (coercedNumberToRound) => {\n            if (coercedNumberToRound < 0) {\n                return -Math.floor(-coercedNumberToRound);\n            }\n            else {\n                return Math.floor(coercedNumberToRound);\n            }\n        });\n    }\n    even(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EVEN'), (coercedNumberToRound) => {\n            if (coercedNumberToRound < 0) {\n                return -findNextEvenNumber(-coercedNumberToRound);\n            }\n            else {\n                return findNextEvenNumber(coercedNumberToRound);\n            }\n        });\n    }\n    odd(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ODD'), (coercedNumberToRound) => {\n            if (coercedNumberToRound < 0) {\n                return -findNextOddNumber(-coercedNumberToRound);\n            }\n            else {\n                return findNextOddNumber(coercedNumberToRound);\n            }\n        });\n    }\n    ceilingmath(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CEILING.MATH'), (value, significance, mode) => {\n            if (significance === 0 || value === 0) {\n                return 0;\n            }\n            significance = Math.abs(significance);\n            if (mode === 1 && value < 0) {\n                significance = -significance;\n            }\n            return Math.ceil(value / significance) * significance;\n        });\n    }\n    ceiling(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CEILING'), (value, significance) => {\n            if (value === 0) {\n                return 0;\n            }\n            if (significance === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            if ((value > 0) && (significance < 0)) {\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\n            }\n            return Math.ceil(value / significance) * significance;\n        });\n    }\n    ceilingprecise(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CEILING.PRECISE'), (value, significance) => {\n            if (significance === 0 || value === 0) {\n                return 0;\n            }\n            significance = Math.abs(significance);\n            return Math.ceil(value / significance) * significance;\n        });\n    }\n    floormath(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FLOOR.MATH'), (value, significance, mode) => {\n            if (significance === 0 || value === 0) {\n                return 0;\n            }\n            significance = Math.abs(significance);\n            if (mode === 1 && value < 0) {\n                significance *= -1;\n            }\n            return Math.floor(value / significance) * significance;\n        });\n    }\n    floor(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FLOOR'), (value, significance) => {\n            if (value === 0) {\n                return 0;\n            }\n            if (significance === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            if ((value > 0) && (significance < 0)) {\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\n            }\n            return Math.floor(value / significance) * significance;\n        });\n    }\n    floorprecise(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FLOOR.PRECISE'), (value, significance) => {\n            if (significance === 0 || value === 0) {\n                return 0;\n            }\n            significance = Math.abs(significance);\n            return Math.floor(value / significance) * significance;\n        });\n    }\n}\nRoundingPlugin.implementedFunctions = {\n    'ROUNDUP': {\n        method: 'roundup',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'ROUNDDOWN': {\n        method: 'rounddown',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'ROUND': {\n        method: 'round',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'TRUNC': {\n        method: 'trunc',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'INT': {\n        method: 'intFunc',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n    'EVEN': {\n        method: 'even',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n    'ODD': {\n        method: 'odd',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n    'CEILING.MATH': {\n        method: 'ceilingmath',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'CEILING': {\n        method: 'ceiling',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'CEILING.PRECISE': {\n        method: 'ceilingprecise',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ],\n    },\n    'FLOOR.MATH': {\n        method: 'floormath',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n        ],\n    },\n    'FLOOR': {\n        method: 'floor',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'FLOOR.PRECISE': {\n        method: 'floorprecise',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ],\n    },\n};\nRoundingPlugin.aliases = {\n    'ISO.CEILING': 'CEILING.PRECISE',\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class SqrtPlugin extends FunctionPlugin {\n    sqrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SQRT'), Math.sqrt);\n    }\n}\nSqrtPlugin.implementedFunctions = {\n    'SQRT': {\n        method: 'sqrt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { Condition, CriterionFunctionCompute } from '../CriterionFunctionCompute';\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nclass AverageResult {\n    constructor(sum, count) {\n        this.sum = sum;\n        this.count = count;\n    }\n    static single(arg) {\n        return new AverageResult(arg, 1);\n    }\n    compose(other) {\n        return new AverageResult(this.sum + other.sum, this.count + other.count);\n    }\n    averageValue() {\n        if (this.count > 0) {\n            return this.sum / this.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nAverageResult.empty = new AverageResult(0, 0);\n/** Computes key for criterion function cache */\nfunction sumifCacheKey(conditions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const conditionsStrings = conditions.map((c) => `${c.conditionRange.range().sheet},${c.conditionRange.range().start.col},${c.conditionRange.range().start.row}`);\n    return ['SUMIF', ...conditionsStrings].join(',');\n}\nfunction averageifCacheKey(conditions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const conditionsStrings = conditions.map((c) => `${c.conditionRange.range().sheet},${c.conditionRange.range().start.col},${c.conditionRange.range().start.row}`);\n    return ['AVERAGEIF', ...conditionsStrings].join(',');\n}\nfunction countifsCacheKey(conditions) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const conditionsStrings = conditions.map((c) => `${c.conditionRange.range().sheet},${c.conditionRange.range().start.col},${c.conditionRange.range().start.row}`);\n    return ['COUNTIFS', ...conditionsStrings].join(',');\n}\nexport class SumifPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to SUMIF(Range, Criterion, SumRange)\n     *\n     * Range is the range to which criterion is to be applied.\n     * Criterion is the criteria used to choose which cells will be included in sum.\n     * SumRange is the range on which adding will be performed.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    sumif(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUMIF'), (conditionArg, criterionValue, valuesArg) => {\n            const criterion = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n            if (criterion === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\n            }\n            valuesArg = valuesArg !== null && valuesArg !== void 0 ? valuesArg : conditionArg;\n            return new CriterionFunctionCompute(this.interpreter, sumifCacheKey, 0, (left, right) => this.interpreter.arithmeticHelper.nonstrictadd(left, right), (arg) => getRawValue(arg)).compute(valuesArg, [new Condition(conditionArg, criterion)]);\n        });\n    }\n    sumifs(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUMIFS'), (values, ...args) => {\n            const conditions = [];\n            for (let i = 0; i < args.length; i += 2) {\n                const conditionArg = args[i];\n                const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(args[i + 1], this.interpreter.arithmeticHelper);\n                if (criterionPackage === undefined) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\n                }\n                conditions.push(new Condition(conditionArg, criterionPackage));\n            }\n            return new CriterionFunctionCompute(this.interpreter, sumifCacheKey, 0, (left, right) => this.interpreter.arithmeticHelper.nonstrictadd(left, right), (arg) => getRawValue(arg)).compute(values, conditions);\n        });\n    }\n    averageif(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('AVERAGEIF'), (conditionArg, criterionValue, valuesArg) => {\n            const criterion = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n            if (criterion === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\n            }\n            valuesArg = valuesArg !== null && valuesArg !== void 0 ? valuesArg : conditionArg;\n            const averageResult = new CriterionFunctionCompute(this.interpreter, averageifCacheKey, AverageResult.empty, (left, right) => left.compose(right), (arg) => {\n                if (isExtendedNumber(arg)) {\n                    return AverageResult.single(getRawValue(arg));\n                }\n                else {\n                    return AverageResult.empty;\n                }\n            }).compute(valuesArg, [new Condition(conditionArg, criterion)]);\n            if (averageResult instanceof CellError) {\n                return averageResult;\n            }\n            else {\n                return averageResult.averageValue() || new CellError(ErrorType.DIV_BY_ZERO);\n            }\n        });\n    }\n    /**\n     * Corresponds to COUNTIF(Range, Criterion)\n     *\n     * Range is the range to which criterion is to be applied.\n     * Criterion is the criteria used to choose which cells will be included in sum.\n     *\n     * Returns number of cells on which criteria evaluates to true.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    countif(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COUNTIF'), (conditionArg, criterionValue) => {\n            const criterion = this.interpreter.criterionBuilder.fromCellValue(criterionValue, this.interpreter.arithmeticHelper);\n            if (criterion === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\n            }\n            return new CriterionFunctionCompute(this.interpreter, () => 'COUNTIF', 0, (left, right) => left + right, () => 1).compute(conditionArg, [new Condition(conditionArg, criterion)]);\n        });\n    }\n    countifs(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COUNTIFS'), (...args) => {\n            const conditions = [];\n            for (let i = 0; i < args.length; i += 2) {\n                const conditionArg = args[i];\n                const criterionPackage = this.interpreter.criterionBuilder.fromCellValue(args[i + 1], this.interpreter.arithmeticHelper);\n                if (criterionPackage === undefined) {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.BadCriterion);\n                }\n                conditions.push(new Condition(conditionArg, criterionPackage));\n            }\n            return new CriterionFunctionCompute(this.interpreter, countifsCacheKey, 0, (left, right) => left + right, () => 1).compute(conditions[0].conditionRange, conditions);\n        });\n    }\n}\nSumifPlugin.implementedFunctions = {\n    'SUMIF': {\n        method: 'sumif',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NOERROR },\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true },\n        ],\n    },\n    'COUNTIF': {\n        method: 'countif',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NOERROR },\n        ],\n    },\n    'AVERAGEIF': {\n        method: 'averageif',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NOERROR },\n            { argumentType: ArgumentTypes.RANGE, optionalArg: true },\n        ],\n    },\n    'SUMIFS': {\n        method: 'sumifs',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NOERROR },\n        ],\n        repeatLastArgs: 2,\n    },\n    'COUNTIFS': {\n        method: 'countifs',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NOERROR },\n        ],\n        repeatLastArgs: 2,\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType, simpleCellAddress } from '../Cell';\nimport { ErrorMessage } from '../error-message';\nimport { split } from '../generatorUtils';\nimport { getRawValue } from './InterpreterValue';\nconst findSmallerRangeForMany = (dependencyGraph, conditionRanges, valuesRange) => {\n    if (valuesRange.end.row > valuesRange.start.row) {\n        const valuesRangeEndRowLess = simpleCellAddress(valuesRange.end.sheet, valuesRange.end.col, valuesRange.end.row - 1);\n        const rowLessVertex = dependencyGraph.getRange(valuesRange.start, valuesRangeEndRowLess);\n        if (rowLessVertex !== undefined) {\n            return {\n                smallerRangeVertex: rowLessVertex,\n                restValuesRange: valuesRange.withStart(simpleCellAddress(valuesRange.start.sheet, valuesRange.start.col, valuesRange.end.row)),\n                restConditionRanges: conditionRanges.map((conditionRange) => conditionRange.withStart(simpleCellAddress(conditionRange.start.sheet, conditionRange.start.col, conditionRange.end.row))),\n            };\n        }\n    }\n    return {\n        smallerRangeVertex: null,\n        restValuesRange: valuesRange,\n        restConditionRanges: conditionRanges,\n    };\n};\nexport class CriterionFunctionCompute {\n    constructor(interpreter, cacheKey, reduceInitialValue, composeFunction, mapFunction) {\n        this.interpreter = interpreter;\n        this.cacheKey = cacheKey;\n        this.reduceInitialValue = reduceInitialValue;\n        this.composeFunction = composeFunction;\n        this.mapFunction = mapFunction;\n        this.dependencyGraph = this.interpreter.dependencyGraph;\n    }\n    compute(simpleValuesRange, conditions) {\n        for (const condition of conditions) {\n            if (!condition.conditionRange.sameDimensionsAs(simpleValuesRange)) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\n            }\n        }\n        const valuesRangeVertex = this.tryToGetRangeVertexForRangeValue(simpleValuesRange);\n        const conditionsVertices = conditions.map((c) => this.tryToGetRangeVertexForRangeValue(c.conditionRange));\n        if (valuesRangeVertex && conditionsVertices.every((e) => e !== undefined)) {\n            const fullCriterionString = conditions.map((c) => c.criterionPackage.raw).join(',');\n            const cachedResult = this.findAlreadyComputedValueInCache(valuesRangeVertex, this.cacheKey(conditions), fullCriterionString);\n            if (cachedResult) {\n                this.interpreter.stats.incrementCriterionFunctionFullCacheUsed();\n                return cachedResult;\n            }\n            const cache = this.buildNewCriterionCache(this.cacheKey(conditions), conditions.map((c) => c.conditionRange.range()), simpleValuesRange.range());\n            if (!cache.has(fullCriterionString)) {\n                cache.set(fullCriterionString, [\n                    this.evaluateRangeValue(simpleValuesRange, conditions),\n                    conditions.map((condition) => condition.criterionPackage.lambda),\n                ]);\n            }\n            valuesRangeVertex.setCriterionFunctionValues(this.cacheKey(conditions), cache);\n            conditionsVertices.forEach(range => {\n                if (range !== undefined) {\n                    range.addDependentCacheRange(valuesRangeVertex);\n                }\n            });\n            return cache.get(fullCriterionString)[0];\n        }\n        else {\n            return this.evaluateRangeValue(simpleValuesRange, conditions);\n        }\n    }\n    tryToGetRangeVertexForRangeValue(rangeValue) {\n        const maybeRange = rangeValue.range();\n        if (maybeRange === undefined) {\n            return undefined;\n        }\n        else {\n            return this.dependencyGraph.getRange(maybeRange.start, maybeRange.end);\n        }\n    }\n    reduceFunction(iterable) {\n        let acc = this.reduceInitialValue;\n        for (const val of iterable) {\n            acc = this.composeFunction(acc, val);\n        }\n        return acc;\n    }\n    findAlreadyComputedValueInCache(rangeVertex, cacheKey, criterionString) {\n        return rangeVertex.getCriterionFunctionValue(cacheKey, criterionString);\n    }\n    evaluateRangeValue(simpleValuesRange, conditions) {\n        const criterionLambdas = conditions.map((condition) => condition.criterionPackage.lambda);\n        const values = Array.from(simpleValuesRange.valuesFromTopLeftCorner()).map(this.mapFunction)[Symbol.iterator]();\n        const conditionsIterators = conditions.map((condition) => condition.conditionRange.iterateValuesFromTopLeftCorner());\n        const filteredValues = ifFilter(criterionLambdas, conditionsIterators, values);\n        return this.reduceFunction(filteredValues);\n    }\n    buildNewCriterionCache(cacheKey, simpleConditionRanges, simpleValuesRange) {\n        const currentRangeVertex = this.dependencyGraph.getRange(simpleValuesRange.start, simpleValuesRange.end);\n        const { smallerRangeVertex, restConditionRanges, restValuesRange } = findSmallerRangeForMany(this.dependencyGraph, simpleConditionRanges, simpleValuesRange);\n        let smallerCache;\n        if (smallerRangeVertex && this.dependencyGraph.existsEdge(smallerRangeVertex, currentRangeVertex)) {\n            smallerCache = smallerRangeVertex.getCriterionFunctionValues(cacheKey);\n        }\n        else {\n            smallerCache = new Map();\n        }\n        const newCache = new Map();\n        smallerCache.forEach(([value, criterionLambdas], key) => {\n            const filteredValues = ifFilter(criterionLambdas, restConditionRanges.map((rcr) => getRangeValues(this.dependencyGraph, rcr)), Array.from(getRangeValues(this.dependencyGraph, restValuesRange)).map(this.mapFunction)[Symbol.iterator]());\n            const newCacheValue = this.composeFunction(value, this.reduceFunction(filteredValues));\n            this.interpreter.stats.incrementCriterionFunctionPartialCacheUsed();\n            newCache.set(key, [newCacheValue, criterionLambdas]);\n        });\n        return newCache;\n    }\n}\nexport class Condition {\n    constructor(conditionRange, criterionPackage) {\n        this.conditionRange = conditionRange;\n        this.criterionPackage = criterionPackage;\n    }\n}\nfunction* getRangeValues(dependencyGraph, cellRange) {\n    for (const cellFromRange of cellRange.addresses(dependencyGraph)) {\n        yield getRawValue(dependencyGraph.getScalarValue(cellFromRange));\n    }\n}\nfunction* ifFilter(criterionLambdas, conditionalIterables, computableIterable) {\n    for (const computable of computableIterable) {\n        const conditionalSplits = conditionalIterables.map((conditionalIterable) => split(conditionalIterable));\n        if (!conditionalSplits.every((cs) => Object.prototype.hasOwnProperty.call(cs, 'value'))) {\n            return;\n        }\n        const conditionalFirsts = conditionalSplits.map((cs) => cs.value);\n        if (zip(conditionalFirsts, criterionLambdas).every(([conditionalFirst, criterionLambda]) => criterionLambda(conditionalFirst))) {\n            yield computable;\n        }\n        conditionalIterables = conditionalSplits.map((cs) => cs.rest);\n    }\n}\nfunction zip(arr1, arr2) {\n    const result = [];\n    for (let i = 0; i < Math.min(arr1.length, arr2.length); i++) {\n        result.push([arr1[i], arr2[i]]);\n    }\n    return result;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nexport function* empty() { }\nexport function split(iterable) {\n    const iterator = iterable[Symbol.iterator]();\n    const { done, value } = iterator.next();\n    if (done) {\n        return { rest: empty() };\n    }\n    else {\n        return { value, rest: iterator };\n    }\n}\nexport function first(iterable) {\n    const iterator = iterable[Symbol.iterator]();\n    const { done, value } = iterator.next();\n    if (!done) {\n        return value;\n    }\n    return undefined;\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class SumprodPlugin extends FunctionPlugin {\n    sumproduct(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUMPRODUCT'), (left, right) => {\n            if (left.numberOfElements() !== right.numberOfElements()) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.EqualLength);\n            }\n            let result = 0;\n            const lit = left.iterateValuesFromTopLeftCorner();\n            const rit = right.iterateValuesFromTopLeftCorner();\n            let l, r;\n            while (l = lit.next(), r = rit.next(), !l.done && !r.done) {\n                if (l.value instanceof CellError) {\n                    return l.value;\n                }\n                else if (r.value instanceof CellError) {\n                    return r.value;\n                }\n                else {\n                    const lval = this.coerceScalarToNumberOrError(l.value);\n                    const rval = this.coerceScalarToNumberOrError(r.value);\n                    if (isExtendedNumber(lval) && isExtendedNumber(rval)) {\n                        result += getRawValue(lval) * getRawValue(rval);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n}\nSumprodPlugin.implementedFunctions = {\n    'SUMPRODUCT': {\n        method: 'sumproduct',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\n/**\n * Interpreter plugin containing text-specific functions\n */\nexport class TextPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to CONCATENATE(value1, [value2, ...])\n     *\n     * Concatenates provided arguments to one string.\n     *\n     * @param args\n     * @param formulaAddress\n     */\n    concatenate(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CONCATENATE'), (...args) => {\n            return ''.concat(...args);\n        });\n    }\n    /**\n     * Corresponds to SPLIT(string, index)\n     *\n     * Splits provided string using space separator and returns chunk at zero-based position specified by second argument\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    split(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SPLIT'), (stringToSplit, indexToUse) => {\n            const splittedString = stringToSplit.split(' ');\n            if (indexToUse >= splittedString.length || indexToUse < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\n            }\n            return splittedString[indexToUse];\n        });\n    }\n    len(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LEN'), (arg) => {\n            return arg.length;\n        });\n    }\n    lower(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LOWER'), (arg) => {\n            return arg.toLowerCase();\n        });\n    }\n    trim(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TRIM'), (arg) => {\n            return arg.replace(/^ +| +$/g, '').replace(/ +/g, ' ');\n        });\n    }\n    proper(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PROPER'), (arg) => {\n            return arg.replace(/\\w\\S*/g, word => word.charAt(0).toUpperCase() + word.substring(1).toLowerCase());\n        });\n    }\n    clean(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CLEAN'), (arg) => {\n            // eslint-disable-next-line no-control-regex\n            return arg.replace(/[\\u0000-\\u001F]/g, '');\n        });\n    }\n    exact(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EXACT'), (left, right) => {\n            return left === right;\n        });\n    }\n    rept(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('REPT'), (text, count) => {\n            if (count < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeCount);\n            }\n            return text.repeat(count);\n        });\n    }\n    right(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RIGHT'), (text, length) => {\n            if (length < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n            }\n            else if (length === 0) {\n                return '';\n            }\n            return text.slice(-length);\n        });\n    }\n    left(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LEFT'), (text, length) => {\n            if (length < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n            }\n            return text.slice(0, length);\n        });\n    }\n    mid(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MID'), (text, startPosition, numberOfChars) => {\n            if (startPosition < 1) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n            }\n            if (numberOfChars < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n            }\n            return text.substring(startPosition - 1, startPosition + numberOfChars - 1);\n        });\n    }\n    replace(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('REPLACE'), (text, startPosition, numberOfChars, newText) => {\n            if (startPosition < 1) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n            }\n            if (numberOfChars < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.NegativeLength);\n            }\n            return text.substring(0, startPosition - 1) + newText + text.substring(startPosition + numberOfChars - 1);\n        });\n    }\n    search(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SEARCH'), (pattern, text, startIndex) => {\n            if (startIndex < 1 || startIndex > text.length) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LengthBounds);\n            }\n            const normalizedText = text.substring(startIndex - 1).toLowerCase();\n            let index;\n            if (this.interpreter.arithmeticHelper.requiresRegex(pattern)) {\n                index = this.interpreter.arithmeticHelper.searchString(pattern, normalizedText);\n            }\n            else {\n                index = normalizedText.indexOf(pattern.toLowerCase());\n            }\n            index = index + startIndex;\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\n        });\n    }\n    substitute(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUBSTITUTE'), (text, oldText, newText, occurrence) => {\n            const oldTextRegexp = new RegExp(oldText, 'g');\n            if (occurrence === undefined) {\n                return text.replace(oldTextRegexp, newText);\n            }\n            if (occurrence < 1) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n            }\n            let match;\n            let i = 0;\n            while ((match = oldTextRegexp.exec(text)) !== null) {\n                if (occurrence === ++i) {\n                    return text.substring(0, match.index) + newText + text.substring(oldTextRegexp.lastIndex);\n                }\n            }\n            return text;\n        });\n    }\n    find(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FIND'), (pattern, text, startIndex) => {\n            if (startIndex < 1 || startIndex > text.length) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.IndexBounds);\n            }\n            const shiftedText = text.substring(startIndex - 1);\n            const index = shiftedText.indexOf(pattern) + startIndex;\n            return index > 0 ? index : new CellError(ErrorType.VALUE, ErrorMessage.PatternNotFound);\n        });\n    }\n    t(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T'), (arg) => {\n            if (arg instanceof CellError) {\n                return arg;\n            }\n            return typeof arg === 'string' ? arg : '';\n        });\n    }\n    upper(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('UPPER'), (arg) => {\n            return arg.toUpperCase();\n        });\n    }\n}\nTextPlugin.implementedFunctions = {\n    'CONCATENATE': {\n        method: 'concatenate',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n    'EXACT': {\n        method: 'exact',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'SPLIT': {\n        method: 'split',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER },\n        ]\n    },\n    'LEN': {\n        method: 'len',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'LOWER': {\n        method: 'lower',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'MID': {\n        method: 'mid',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ]\n    },\n    'TRIM': {\n        method: 'trim',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'T': {\n        method: 't',\n        parameters: [\n            { argumentType: ArgumentTypes.SCALAR }\n        ]\n    },\n    'PROPER': {\n        method: 'proper',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'CLEAN': {\n        method: 'clean',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'REPT': {\n        method: 'rept',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER },\n        ]\n    },\n    'RIGHT': {\n        method: 'right',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'LEFT': {\n        method: 'left',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'REPLACE': {\n        method: 'replace',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n    'SEARCH': {\n        method: 'search',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'SUBSTITUTE': {\n        method: 'substitute',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true }\n        ]\n    },\n    'FIND': {\n        method: 'find',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.STRING },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'UPPER': {\n        method: 'upper',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING }\n        ]\n    },\n};\n","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nimport { PI } from './MathConstantsPlugin';\n/**\n * Interpreter plugin containing trigonometric functions\n */\nexport class TrigonometryPlugin extends FunctionPlugin {\n    /**\n     * Corresponds to ACOS(value)\n     *\n     * Returns the arc cosine (or inverse cosine) of a number.\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    acos(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ACOS'), Math.acos);\n    }\n    asin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ASIN'), Math.asin);\n    }\n    cos(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COS'), Math.cos);\n    }\n    sin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SIN'), Math.sin);\n    }\n    tan(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TAN'), Math.tan);\n    }\n    atan(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ATAN'), Math.atan);\n    }\n    atan2(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ATAN2'), (x, y) => {\n            if (x === 0 && y === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return Math.atan2(y, x);\n        });\n    }\n    cot(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COT'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tan(arg)));\n    }\n    acot(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ACOT'), (arg) => (arg === 0) ? PI / 2 : Math.atan(1 / arg));\n    }\n    sec(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SEC'), (arg) => 1 / Math.cos(arg));\n    }\n    csc(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CSC'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sin(arg)));\n    }\n    sinh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SINH'), Math.sinh);\n    }\n    asinh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ASINH'), Math.asinh);\n    }\n    cosh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COSH'), Math.cosh);\n    }\n    acosh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ACOSH'), Math.acosh);\n    }\n    tanh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TANH'), Math.tanh);\n    }\n    atanh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ATANH'), Math.atanh);\n    }\n    coth(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COTH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.tanh(arg)));\n    }\n    acoth(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ACOTH'), (arg) => (arg === 0) ? new CellError(ErrorType.NUM, ErrorMessage.NonZero) : Math.atanh(1 / arg));\n    }\n    sech(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SECH'), (arg) => 1 / Math.cosh(arg));\n    }\n    csch(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CSCH'), (arg) => (arg === 0) ? new CellError(ErrorType.DIV_BY_ZERO) : (1 / Math.sinh(arg)));\n    }\n}\nTrigonometryPlugin.implementedFunctions = {\n    'ACOS': {\n        method: 'acos',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ASIN': {\n        method: 'asin',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'COS': {\n        method: 'cos',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'SIN': {\n        method: 'sin',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'TAN': {\n        method: 'tan',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ATAN': {\n        method: 'atan',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ATAN2': {\n        method: 'atan2',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ]\n    },\n    'COT': {\n        method: 'cot',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'SEC': {\n        method: 'sec',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'CSC': {\n        method: 'csc',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'SINH': {\n        method: 'sinh',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'COSH': {\n        method: 'cosh',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'TANH': {\n        method: 'tanh',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'COTH': {\n        method: 'coth',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'SECH': {\n        method: 'sech',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'CSCH': {\n        method: 'csch',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ACOT': {\n        method: 'acot',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ASINH': {\n        method: 'asinh',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ACOSH': {\n        method: 'acosh',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ATANH': {\n        method: 'atanh',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'ACOTH': {\n        method: 'acoth',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n};\n","var $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar expm1 = require('../internals/math-expm1');\n\nvar abs = Math.abs;\nvar exp = Math.exp;\nvar E = Math.E;\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es/no-math-sinh -- required for testing\n  return Math.sinh(-2e-17) != -2e-17;\n});\n\n// `Math.sinh` method\n// https://tc39.es/ecma262/#sec-math.sinh\n// V8 near Chromium 38 has a problem with very small numbers\n$({ target: 'Math', stat: true, forced: FORCED }, {\n  sinh: function sinh(x) {\n    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);\n  }\n});\n","// eslint-disable-next-line es/no-math-expm1 -- safe\nvar $expm1 = Math.expm1;\nvar exp = Math.exp;\n\n// `Math.expm1` method implementation\n// https://tc39.es/ecma262/#sec-math.expm1\nmodule.exports = (!$expm1\n  // Old FF bug\n  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168\n  // Tor Browser bug\n  || $expm1(-2e-17) != -2e-17\n) ? function expm1(x) {\n  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;\n} : $expm1;\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-asinh -- required for testing\nvar $asinh = Math.asinh;\nvar log = Math.log;\nvar sqrt = Math.sqrt;\n\nfunction asinh(x) {\n  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));\n}\n\n// `Math.asinh` method\n// https://tc39.es/ecma262/#sec-math.asinh\n// Tor Browser bug: Math.asinh(0) -> -0\n$({ target: 'Math', stat: true, forced: !($asinh && 1 / $asinh(0) > 0) }, {\n  asinh: asinh\n});\n","var $ = require('../internals/export');\nvar expm1 = require('../internals/math-expm1');\n\n// eslint-disable-next-line es/no-math-cosh -- required for testing\nvar $cosh = Math.cosh;\nvar abs = Math.abs;\nvar E = Math.E;\n\n// `Math.cosh` method\n// https://tc39.es/ecma262/#sec-math.cosh\n$({ target: 'Math', stat: true, forced: !$cosh || $cosh(710) === Infinity }, {\n  cosh: function cosh(x) {\n    var t = expm1(abs(x) - 1) + 1;\n    return (t + 1 / (t * E * E)) * (E / 2);\n  }\n});\n","var $ = require('../internals/export');\nvar log1p = require('../internals/math-log1p');\n\n// eslint-disable-next-line es/no-math-acosh -- required for testing\nvar $acosh = Math.acosh;\nvar log = Math.log;\nvar sqrt = Math.sqrt;\nvar LN2 = Math.LN2;\n\nvar FORCED = !$acosh\n  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509\n  || Math.floor($acosh(Number.MAX_VALUE)) != 710\n  // Tor Browser bug: Math.acosh(Infinity) -> NaN\n  || $acosh(Infinity) != Infinity;\n\n// `Math.acosh` method\n// https://tc39.es/ecma262/#sec-math.acosh\n$({ target: 'Math', stat: true, forced: FORCED }, {\n  acosh: function acosh(x) {\n    return (x = +x) < 1 ? NaN : x > 94906265.62425156\n      ? log(x) + LN2\n      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));\n  }\n});\n","var log = Math.log;\n\n// `Math.log1p` method implementation\n// https://tc39.es/ecma262/#sec-math.log1p\n// eslint-disable-next-line es/no-math-log1p -- safe\nmodule.exports = Math.log1p || function log1p(x) {\n  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);\n};\n","var $ = require('../internals/export');\nvar expm1 = require('../internals/math-expm1');\n\nvar exp = Math.exp;\n\n// `Math.tanh` method\n// https://tc39.es/ecma262/#sec-math.tanh\n$({ target: 'Math', stat: true }, {\n  tanh: function tanh(x) {\n    var a = expm1(x = +x);\n    var b = expm1(-x);\n    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));\n  }\n});\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-atanh -- required for testing\nvar $atanh = Math.atanh;\nvar log = Math.log;\n\n// `Math.atanh` method\n// https://tc39.es/ecma262/#sec-math.atanh\n// Tor Browser bug: Math.atanh(-0) -> 0\n$({ target: 'Math', stat: true, forced: !($atanh && 1 / $atanh(-0) < 0) }, {\n  atanh: function atanh(x) {\n    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;\n  }\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { AbsoluteCellRange } from '../../AbsoluteCellRange';\nimport { CellError, ErrorType, simpleCellAddress } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { RowSearchStrategy } from '../../Lookup/RowSearchStrategy';\nimport { StatType } from '../../statistics';\nimport { zeroIfEmpty } from '../ArithmeticHelper';\nimport { SimpleRangeValue } from '../SimpleRangeValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class LookupPlugin extends FunctionPlugin {\n    constructor() {\n        super(...arguments);\n        this.rowSearch = new RowSearchStrategy(this.config, this.dependencyGraph);\n    }\n    /**\n     * Corresponds to VLOOKUP(key, range, index, [sorted])\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    vlookup(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('VLOOKUP'), (key, rangeValue, index, sorted) => {\n            const range = rangeValue.range();\n            if (range === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n            }\n            if (index < 1) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n            }\n            if (index > range.width()) {\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\n            }\n            return this.doVlookup(zeroIfEmpty(key), range, index - 1, sorted);\n        });\n    }\n    /**\n     * Corresponds to HLOOKUP(key, range, index, [sorted])\n     *\n     * @param ast\n     * @param formulaAddress\n     */\n    hlookup(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HLOOKUP'), (key, rangeValue, index, sorted) => {\n            const range = rangeValue.range();\n            if (range === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n            }\n            if (index < 1) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.LessThanOne);\n            }\n            if (index > range.height()) {\n                return new CellError(ErrorType.REF, ErrorMessage.IndexLarge);\n            }\n            return this.doHlookup(zeroIfEmpty(key), range, index - 1, sorted);\n        });\n    }\n    match(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MATCH'), (key, rangeValue, sorted) => {\n            const range = rangeValue.range();\n            if (range === undefined) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n            }\n            return this.doMatch(zeroIfEmpty(key), range, sorted);\n        });\n    }\n    doVlookup(key, range, index, sorted) {\n        this.dependencyGraph.stats.start(StatType.VLOOKUP);\n        const searchedRange = AbsoluteCellRange.spanFrom(range.start, 1, range.height());\n        const rowIndex = this.searchInRange(key, searchedRange, sorted, this.columnSearch);\n        this.dependencyGraph.stats.end(StatType.VLOOKUP);\n        if (rowIndex === -1) {\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\n        }\n        const address = simpleCellAddress(range.sheet, range.start.col + index, rowIndex);\n        const value = this.dependencyGraph.getCellValue(address);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n        }\n        return value;\n    }\n    doHlookup(key, range, index, sorted) {\n        const searchedRange = AbsoluteCellRange.spanFrom(range.start, range.width(), 1);\n        const colIndex = this.searchInRange(key, searchedRange, sorted, this.rowSearch);\n        if (colIndex === -1) {\n            return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\n        }\n        const address = simpleCellAddress(range.sheet, colIndex, range.start.row + index);\n        const value = this.dependencyGraph.getCellValue(address);\n        if (value instanceof SimpleRangeValue) {\n            return new CellError(ErrorType.VALUE, ErrorMessage.WrongType);\n        }\n        return value;\n    }\n    doMatch(key, range, sorted) {\n        if (range.width() > 1 && range.height() > 1) {\n            return new CellError(ErrorType.NA);\n        }\n        if (range.width() === 1) {\n            const index = this.columnSearch.find(key, range, sorted !== 0);\n            if (index === -1) {\n                return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\n            }\n            return index - range.start.row + 1;\n        }\n        else {\n            const index = this.rowSearch.find(key, range, sorted !== 0);\n            if (index === -1) {\n                return new CellError(ErrorType.NA, ErrorMessage.ValueNotFound);\n            }\n            return index - range.start.col + 1;\n        }\n    }\n    searchInRange(key, range, sorted, searchStrategy) {\n        if (!sorted && typeof key === 'string' && this.interpreter.arithmeticHelper.requiresRegex(key)) {\n            return searchStrategy.advancedFind(this.interpreter.arithmeticHelper.eqMatcherFunction(key), range);\n        }\n        else {\n            return searchStrategy.find(key, range, sorted);\n        }\n    }\n}\nLookupPlugin.implementedFunctions = {\n    'VLOOKUP': {\n        method: 'vlookup',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR },\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: true },\n        ]\n    },\n    'HLOOKUP': {\n        method: 'hlookup',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR },\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.BOOLEAN, defaultValue: true },\n        ]\n    },\n    'MATCH': {\n        method: 'match',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR },\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { forceNormalizeString } from '../interpreter/ArithmeticHelper';\nimport { rangeLowerBound } from '../interpreter/binarySearch';\nimport { getRawValue } from '../interpreter/InterpreterValue';\nimport { AdvancedFind } from './AdvancedFind';\nexport class RowSearchStrategy extends AdvancedFind {\n    constructor(config, dependencyGraph) {\n        super(dependencyGraph);\n        this.config = config;\n        this.dependencyGraph = dependencyGraph;\n    }\n    find(key, range, sorted) {\n        if (typeof key === 'string') {\n            key = forceNormalizeString(key);\n        }\n        if (range.width() < this.config.binarySearchThreshold || !sorted) {\n            const values = this.dependencyGraph.computeListOfValuesInRange(range).map(getRawValue).map(arg => (typeof arg === 'string') ? forceNormalizeString(arg) : arg);\n            const index = values.indexOf(key);\n            return index < 0 ? index : index + range.start.col;\n        }\n        else {\n            return rangeLowerBound(range, key, this.dependencyGraph, 'col');\n        }\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { getRawValue } from '../InterpreterValue';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class RomanPlugin extends FunctionPlugin {\n    roman(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ROMAN'), (val, mode) => {\n            val = Math.trunc(val);\n            if (mode === false) {\n                mode = 4;\n            }\n            else if (mode === true) {\n                mode = 0;\n            }\n            mode = getRawValue(this.coerceScalarToNumberOrError(mode));\n            if (mode instanceof CellError) {\n                return mode;\n            }\n            mode = Math.trunc(mode);\n            if (mode < 0) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueSmall);\n            }\n            if (mode > 4) {\n                return new CellError(ErrorType.VALUE, ErrorMessage.ValueLarge);\n            }\n            return romanMode(val, mode);\n        });\n    }\n    arabic(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ARABIC'), (inputString) => {\n            inputString = inputString.trim().toUpperCase();\n            let minusSign = false;\n            if (inputString.startsWith('-')) {\n                inputString = inputString.slice(1);\n                minusSign = true;\n                if (inputString === '') {\n                    return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\n                }\n            }\n            const work = { input: inputString, acc: 0 };\n            eatToken(work, { token: 'MMM', val: 3000 }, { token: 'MM', val: 2000 }, { token: 'M', val: 1000 });\n            eatToken(work, { token: 'IM', val: 999 }, { token: 'VM', val: 995 }, { token: 'XM', val: 990 }, { token: 'LM', val: 950 }, { token: 'CM', val: 900 });\n            eatToken(work, { token: 'D', val: 500 }, { token: 'ID', val: 499 }, { token: 'VD', val: 495 }, { token: 'XD', val: 490 }, { token: 'LD', val: 450 }, { token: 'CD', val: 400 });\n            eatToken(work, { token: 'CCC', val: 300 }, { token: 'CC', val: 200 }, { token: 'C', val: 100 });\n            eatToken(work, { token: 'IC', val: 99 }, { token: 'VC', val: 95 }, { token: 'XC', val: 90 });\n            eatToken(work, { token: 'L', val: 50 }, { token: 'IL', val: 49 }, { token: 'VL', val: 45 }, { token: 'XL', val: 40 });\n            eatToken(work, { token: 'XXX', val: 30 }, { token: 'XX', val: 20 }, { token: 'X', val: 10 });\n            eatToken(work, { token: 'IX', val: 9 });\n            eatToken(work, { token: 'V', val: 5 }, { token: 'IV', val: 4 });\n            eatToken(work, { token: 'III', val: 3 }, { token: 'II', val: 2 }, { token: 'I', val: 1 });\n            if (work.input !== '') {\n                return new CellError(ErrorType.VALUE, ErrorMessage.InvalidRoman);\n            }\n            else {\n                return minusSign ? -work.acc : work.acc;\n            }\n        });\n    }\n}\nRomanPlugin.implementedFunctions = {\n    'ROMAN': {\n        method: 'roman',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, lessThan: 4000 },\n            { argumentType: ArgumentTypes.NOERROR, optionalArg: true, defaultValue: 0 }\n        ],\n    },\n    'ARABIC': {\n        method: 'arabic',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING },\n        ],\n    },\n};\nfunction eatToken(inputAcc, ...tokens) {\n    for (const token of tokens) {\n        if (inputAcc.input.startsWith(token.token)) {\n            inputAcc.input = inputAcc.input.slice(token.token.length);\n            inputAcc.acc += token.val;\n            break;\n        }\n    }\n}\nfunction romanMode(input, mode) {\n    const work = { val: input % 1000, acc: 'M'.repeat(Math.floor(input / 1000)) };\n    if (mode === 4) {\n        absorb(work, 'IM', 999, 1000);\n        absorb(work, 'ID', 499, 500);\n    }\n    if (mode >= 3) {\n        absorb(work, 'VM', 995, 1000);\n        absorb(work, 'VD', 495, 500);\n    }\n    if (mode >= 2) {\n        absorb(work, 'XM', 990, 1000);\n        absorb(work, 'XD', 490, 500);\n    }\n    if (mode >= 1) {\n        absorb(work, 'LM', 950, 1000);\n        absorb(work, 'LD', 450, 500);\n    }\n    absorb(work, 'CM', 900, 1000);\n    absorb(work, 'CD', 400, 500);\n    absorb(work, 'D', 500, 900);\n    work.acc += 'C'.repeat(Math.floor(work.val / 100));\n    work.val %= 100;\n    if (mode >= 2) {\n        absorb(work, 'IC', 99, 100);\n        absorb(work, 'IL', 49, 50);\n    }\n    if (mode >= 1) {\n        absorb(work, 'VC', 95, 100);\n        absorb(work, 'VL', 45, 50);\n    }\n    absorb(work, 'XC', 90, 100);\n    absorb(work, 'XL', 40, 50);\n    absorb(work, 'L', 50, 90);\n    work.acc += 'X'.repeat(Math.floor(work.val / 10));\n    work.val %= 10;\n    absorb(work, 'IX', 9, 10);\n    absorb(work, 'IV', 4, 5);\n    absorb(work, 'V', 5, 9);\n    work.acc += 'I'.repeat(work.val);\n    return work.acc;\n}\nfunction absorb(valAcc, token, lower, upper) {\n    if (valAcc.val >= lower && valAcc.val < upper) {\n        valAcc.val -= lower;\n        valAcc.acc += token;\n    }\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class SimpleArithmerticPlugin extends FunctionPlugin {\n    add(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.ADD'), this.interpreter.arithmeticHelper.addWithEpsilon);\n    }\n    concat(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.CONCAT'), this.interpreter.arithmeticHelper.concat);\n    }\n    divide(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.DIVIDE'), this.interpreter.arithmeticHelper.divide);\n    }\n    eq(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.EQ'), this.interpreter.arithmeticHelper.eq);\n    }\n    gt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.GT'), this.interpreter.arithmeticHelper.gt);\n    }\n    gte(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.GTE'), this.interpreter.arithmeticHelper.geq);\n    }\n    lt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.LT'), this.interpreter.arithmeticHelper.lt);\n    }\n    lte(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.LTE'), this.interpreter.arithmeticHelper.leq);\n    }\n    minus(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.MINUS'), this.interpreter.arithmeticHelper.subtract);\n    }\n    multiply(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.MULTIPLY'), this.interpreter.arithmeticHelper.multiply);\n    }\n    ne(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.NE'), this.interpreter.arithmeticHelper.neq);\n    }\n    pow(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.POW'), this.interpreter.arithmeticHelper.pow);\n    }\n    uminus(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.UMINUS'), this.interpreter.arithmeticHelper.unaryMinus);\n    }\n    upercent(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.UNARY_PERCENT'), this.interpreter.arithmeticHelper.unaryPercent);\n    }\n    uplus(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HF.UPLUS'), this.interpreter.arithmeticHelper.unaryPlus);\n    }\n}\nSimpleArithmerticPlugin.implementedFunctions = {\n    'HF.ADD': {\n        method: 'add',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.CONCAT': {\n        method: 'concat',\n        parameters: [\n            { argumentType: ArgumentTypes.STRING, passSubtype: true },\n            { argumentType: ArgumentTypes.STRING, passSubtype: true },\n        ],\n    },\n    'HF.DIVIDE': {\n        method: 'divide',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.EQ': {\n        method: 'eq',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n        ]\n    },\n    'HF.GT': {\n        method: 'gt',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n        ]\n    },\n    'HF.GTE': {\n        method: 'gte',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n        ]\n    },\n    'HF.LT': {\n        method: 'lt',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n        ]\n    },\n    'HF.LTE': {\n        method: 'lte',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n        ]\n    },\n    'HF.MINUS': {\n        method: 'minus',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.MULTIPLY': {\n        method: 'multiply',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.NE': {\n        method: 'ne',\n        parameters: [\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n            { argumentType: ArgumentTypes.NOERROR, passSubtype: true },\n        ]\n    },\n    'HF.POW': {\n        method: 'pow',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.UMINUS': {\n        method: 'uminus',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.UNARY_PERCENT': {\n        method: 'upercent',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n    'HF.UPLUS': {\n        method: 'uplus',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, passSubtype: true },\n        ],\n    },\n};\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { besseli, besselj, besselk, bessely } from './3rdparty/bessel/bessel';\nimport { beta, binomial, centralF, chisquare, erf, erfc, exponential, gamma, gammafn, gammaln, hypgeom, lognormal, negbin, normal, normalci, poisson, studentt, tci, weibull } from './3rdparty/jstat/jstat';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class StatisticalPlugin extends FunctionPlugin {\n    erf(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ERF'), (lowerBound, upperBound) => {\n            if (upperBound === undefined) {\n                return erf(lowerBound);\n            }\n            else {\n                return erf(upperBound) - erf(lowerBound);\n            }\n        });\n    }\n    erfc(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('ERFC'), erfc);\n    }\n    expondist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('EXPON.DIST'), (x, lambda, cumulative) => {\n            if (cumulative) {\n                return exponential.cdf(x, lambda);\n            }\n            else {\n                return exponential.pdf(x, lambda);\n            }\n        });\n    }\n    fisher(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FISHER'), (x) => Math.log((1 + x) / (1 - x)) / 2);\n    }\n    fisherinv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FISHERINV'), (y) => 1 - 2 / (Math.exp(2 * y) + 1));\n    }\n    gamma(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GAMMA'), gammafn);\n    }\n    gammadist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GAMMA.DIST'), (value, alphaVal, betaVal, cumulative) => {\n            if (cumulative) {\n                return gamma.cdf(value, alphaVal, betaVal);\n            }\n            else {\n                return gamma.pdf(value, alphaVal, betaVal);\n            }\n        });\n    }\n    gammaln(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GAMMALN'), gammaln);\n    }\n    gammainv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GAMMA.INV'), gamma.inv);\n    }\n    gauss(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GAUSS'), (z) => normal.cdf(z, 0, 1) - 0.5);\n    }\n    betadist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BETA.DIST'), (x, alphaVal, betaVal, cumulative, A, B) => {\n            if (x <= A) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n            }\n            else if (x >= B) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            x = (x - A) / (B - A);\n            if (cumulative) {\n                return beta.cdf(x, alphaVal, betaVal);\n            }\n            else {\n                return beta.pdf(x, alphaVal, betaVal);\n            }\n        });\n    }\n    betainv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BETA.INV'), (x, alphaVal, betaVal, A, B) => {\n            if (A >= B) {\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n            }\n            else {\n                return beta.inv(x, alphaVal, betaVal) * (B - A) + A;\n            }\n        });\n    }\n    binomialdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BINOM.DIST'), (succ, trials, prob, cumulative) => {\n            if (succ > trials) {\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n            }\n            succ = Math.trunc(succ);\n            trials = Math.trunc(trials);\n            if (cumulative) {\n                return binomial.cdf(succ, trials, prob);\n            }\n            else {\n                return binomial.pdf(succ, trials, prob);\n            }\n        });\n    }\n    binomialinv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BINOM.INV'), (trials, prob, alpha) => {\n            trials = Math.trunc(trials);\n            let lower = -1;\n            let upper = trials;\n            while (upper > lower + 1) {\n                const mid = Math.trunc((lower + upper) / 2);\n                if (binomial.cdf(mid, trials, prob) >= alpha) {\n                    upper = mid;\n                }\n                else {\n                    lower = mid;\n                }\n            }\n            return upper;\n        });\n    }\n    besselifn(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BESSELI'), (x, n) => besseli(x, Math.trunc(n)));\n    }\n    besseljfn(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BESSELJ'), (x, n) => besselj(x, Math.trunc(n)));\n    }\n    besselkfn(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BESSELK'), (x, n) => besselk(x, Math.trunc(n)));\n    }\n    besselyfn(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('BESSELY'), (x, n) => bessely(x, Math.trunc(n)));\n    }\n    chisqdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHISQ.DIST'), (x, deg, cumulative) => {\n            deg = Math.trunc(deg);\n            if (cumulative) {\n                return chisquare.cdf(x, deg);\n            }\n            else {\n                return chisquare.pdf(x, deg);\n            }\n        });\n    }\n    chisqdistrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHISQ.DIST.RT'), (x, deg) => 1 - chisquare.cdf(x, Math.trunc(deg)));\n    }\n    chisqinv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHISQ.INV'), (p, deg) => chisquare.inv(p, Math.trunc(deg)));\n    }\n    chisqinvrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHISQ.INV.RT'), (p, deg) => chisquare.inv(1.0 - p, Math.trunc(deg)));\n    }\n    fdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('F.DIST'), (x, deg1, deg2, cumulative) => {\n            deg1 = Math.trunc(deg1);\n            deg2 = Math.trunc(deg2);\n            if (cumulative) {\n                return centralF.cdf(x, deg1, deg2);\n            }\n            else {\n                return centralF.pdf(x, deg1, deg2);\n            }\n        });\n    }\n    fdistrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('F.DIST.RT'), (x, deg1, deg2) => 1 - centralF.cdf(x, Math.trunc(deg1), Math.trunc(deg2)));\n    }\n    finv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('F.INV'), (p, deg1, deg2) => centralF.inv(p, Math.trunc(deg1), Math.trunc(deg2)));\n    }\n    finvrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('F.INV.RT'), (p, deg1, deg2) => centralF.inv(1.0 - p, Math.trunc(deg1), Math.trunc(deg2)));\n    }\n    weibulldist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('WEIBULL.DIST'), (x, shape, scale, cumulative) => {\n            if (cumulative) {\n                return weibull.cdf(x, scale, shape);\n            }\n            else {\n                return weibull.pdf(x, scale, shape);\n            }\n        });\n    }\n    poissondist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('POISSON.DIST'), (x, mean, cumulative) => {\n            x = Math.trunc(x);\n            if (cumulative) {\n                return poisson.cdf(x, mean);\n            }\n            else {\n                return poisson.pdf(x, mean);\n            }\n        });\n    }\n    hypgeomdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HYPGEOM.DIST'), (s, numberS, populationS, numberPop, cumulative) => {\n            if (s > numberS || s > populationS || numberS > numberPop || populationS > numberPop) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            if (s + numberPop < populationS + numberS) {\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            s = Math.trunc(s);\n            numberS = Math.trunc(numberS);\n            populationS = Math.trunc(populationS);\n            numberPop = Math.trunc(numberPop);\n            if (cumulative) {\n                return hypgeom.cdf(s, numberPop, populationS, numberS);\n            }\n            else {\n                return hypgeom.pdf(s, numberPop, populationS, numberS);\n            }\n        });\n    }\n    tdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T.DIST'), (x, deg, cumulative) => {\n            deg = Math.trunc(deg);\n            if (cumulative) {\n                return studentt.cdf(x, deg);\n            }\n            else {\n                return studentt.pdf(x, deg);\n            }\n        });\n    }\n    tdist2t(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T.DIST.2T'), (x, deg) => (1 - studentt.cdf(x, Math.trunc(deg))) * 2);\n    }\n    tdistrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T.DIST.RT'), (x, deg) => 1 - studentt.cdf(x, Math.trunc(deg)));\n    }\n    tdistold(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('TDIST'), (x, deg, mode) => mode * (1 - studentt.cdf(x, Math.trunc(deg))));\n    }\n    tinv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T.INV'), (p, deg) => studentt.inv(p, Math.trunc(deg)));\n    }\n    tinv2t(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T.INV.2T'), (p, deg) => studentt.inv(1 - p / 2, Math.trunc(deg)));\n    }\n    lognormdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LOGNORM.DIST'), (x, mean, stddev, cumulative) => {\n            if (cumulative) {\n                return lognormal.cdf(x, mean, stddev);\n            }\n            else {\n                return lognormal.pdf(x, mean, stddev);\n            }\n        });\n    }\n    lognorminv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LOGNORM.INV'), (p, mean, stddev) => lognormal.inv(p, mean, stddev));\n    }\n    normdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NORM.DIST'), (x, mean, stddev, cumulative) => {\n            if (cumulative) {\n                return normal.cdf(x, mean, stddev);\n            }\n            else {\n                return normal.pdf(x, mean, stddev);\n            }\n        });\n    }\n    norminv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NORM.INV'), (p, mean, stddev) => normal.inv(p, mean, stddev));\n    }\n    normsdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NORM.S.DIST'), (x, cumulative) => {\n            if (cumulative) {\n                return normal.cdf(x, 0, 1);\n            }\n            else {\n                return normal.pdf(x, 0, 1);\n            }\n        });\n    }\n    normsinv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NORM.S.INV'), (p) => normal.inv(p, 0, 1));\n    }\n    phi(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('PHI'), (x) => normal.pdf(x, 0, 1));\n    }\n    negbinomdist(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('NEGBINOM.DIST'), (nf, ns, p, cumulative) => {\n            nf = Math.trunc(nf);\n            ns = Math.trunc(ns);\n            if (cumulative) {\n                return negbin.cdf(nf, ns, p);\n            }\n            else {\n                return negbin.pdf(nf, ns, p);\n            }\n        });\n    }\n    confidencenorm(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CONFIDENCE.NORM'), \n        // eslint-disable-next-line\n        // @ts-ignore\n        (alpha, stddev, size) => normalci(1, alpha, stddev, Math.trunc(size))[1] - 1);\n    }\n    confidencet(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CONFIDENCE.T'), (alpha, stddev, size) => {\n            size = Math.trunc(size);\n            if (size === 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            // eslint-disable-next-line\n            // @ts-ignore\n            return tci(1, alpha, stddev, size)[1] - 1;\n        });\n    }\n    standardize(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('STANDARDIZE'), (x, mean, stddev) => (x - mean) / stddev);\n    }\n}\nStatisticalPlugin.implementedFunctions = {\n    'ERF': {\n        method: 'erf',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\n        ]\n    },\n    'ERFC': {\n        method: 'erfc',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'EXPON.DIST': {\n        method: 'expondist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'FISHER': {\n        method: 'fisher',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: -1, lessThan: 1 }\n        ]\n    },\n    'FISHERINV': {\n        method: 'fisherinv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'GAMMA': {\n        method: 'gamma',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'GAMMA.DIST': {\n        method: 'gammadist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'GAMMALN': {\n        method: 'gammaln',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 }\n        ]\n    },\n    'GAMMA.INV': {\n        method: 'gammainv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, lessThan: 1 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ]\n    },\n    'GAUSS': {\n        method: 'gauss',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'BETA.DIST': {\n        method: 'betadist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'BETA.INV': {\n        method: 'betainv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, defaultValue: 1 },\n        ]\n    },\n    'BINOM.DIST': {\n        method: 'binomialdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'BINOM.INV': {\n        method: 'binomialinv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n        ]\n    },\n    'BESSELI': {\n        method: 'besselifn',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'BESSELJ': {\n        method: 'besseljfn',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'BESSELK': {\n        method: 'besselkfn',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'BESSELY': {\n        method: 'besselyfn',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n        ]\n    },\n    'CHISQ.DIST': {\n        method: 'chisqdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'CHISQ.DIST.RT': {\n        method: 'chisqdistrt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\n        ]\n    },\n    'CHISQ.INV': {\n        method: 'chisqinv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1, maxValue: 1e10 },\n        ]\n    },\n    'CHISQ.INV.RT': {\n        method: 'chisqinvrt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'F.DIST': {\n        method: 'fdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'F.DIST.RT': {\n        method: 'fdistrt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'F.INV': {\n        method: 'finv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'F.INV.RT': {\n        method: 'finvrt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'WEIBULL.DIST': {\n        method: 'weibulldist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'POISSON.DIST': {\n        method: 'poissondist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'HYPGEOM.DIST': {\n        method: 'hypgeomdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'T.DIST': {\n        method: 'tdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'T.DIST.2T': {\n        method: 'tdist2t',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'T.DIST.RT': {\n        method: 'tdistrt',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'TDIST': {\n        method: 'tdistold',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 2 },\n        ]\n    },\n    'T.INV': {\n        method: 'tinv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'T.INV.2T': {\n        method: 'tinv2t',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ]\n    },\n    'LOGNORM.DIST': {\n        method: 'lognormdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'LOGNORM.INV': {\n        method: 'lognorminv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ]\n    },\n    'NORM.DIST': {\n        method: 'normdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'NORM.INV': {\n        method: 'norminv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ]\n    },\n    'NORM.S.DIST': {\n        method: 'normsdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'NORM.S.INV': {\n        method: 'normsinv',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n        ]\n    },\n    'PHI': {\n        method: 'phi',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER }\n        ]\n    },\n    'NEGBINOM.DIST': {\n        method: 'negbinomdist',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 1 },\n            { argumentType: ArgumentTypes.BOOLEAN },\n        ]\n    },\n    'CONFIDENCE.NORM': {\n        method: 'confidencenorm',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ],\n    },\n    'CONFIDENCE.T': {\n        method: 'confidencet',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0, lessThan: 1 },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 1 },\n        ],\n    },\n    'STANDARDIZE': {\n        method: 'standardize',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, greaterThan: 0 },\n        ],\n    },\n};\nStatisticalPlugin.aliases = {\n    NEGBINOMDIST: 'NEGBINOM.DIST',\n    EXPONDIST: 'EXPON.DIST',\n    BETADIST: 'BETA.DIST',\n    NORMDIST: 'NORM.DIST',\n    NORMINV: 'NORM.INV',\n    NORMSDIST: 'NORM.S.DIST',\n    NORMSINV: 'NORM.S.INV',\n    LOGNORMDIST: 'LOGNORM.DIST',\n    LOGINV: 'LOGNORM.INV',\n    TINV: 'T.INV.2T',\n    HYPGEOMDIST: 'HYPGEOM.DIST',\n    POISSON: 'POISSON.DIST',\n    WEIBULL: 'WEIBULL.DIST',\n    FINV: 'F.INV.RT',\n    FDIST: 'F.DIST.RT',\n    CHIDIST: 'CHISQ.DIST.RT',\n    CHIINV: 'CHISQ.INV.RT',\n    GAMMADIST: 'GAMMA.DIST',\n    'GAMMALN.PRECISE': 'GAMMALN',\n    GAMMAINV: 'GAMMA.INV',\n    BETAINV: 'BETA.INV',\n    BINOMDIST: 'BINOM.DIST',\n    CONFIDENCE: 'CONFIDENCE.NORM',\n    CRITBINOM: 'BINOM.INV',\n    WEIBULLDIST: 'WEIBULL.DIST',\n    TINV2T: 'T.INV.2T',\n    TDISTRT: 'T.DIST.RT',\n    TDIST2T: 'T.DIST.2T',\n    FINVRT: 'F.INV.RT',\n    FDISTRT: 'F.DIST.RT',\n    CHIDISTRT: 'CHISQ.DIST.RT',\n    CHIINVRT: 'CHISQ.INV.RT',\n    LOGNORMINV: 'LOGNORM.INV',\n    POISSONDIST: 'POISSON.DIST',\n};\n","/**\n * @license\n bessel.js (C) 2013-present SheetJS -- http://sheetjs.com\n \n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n 1. Definitions.\n\n \"License\" shall mean the terms and conditions for use, reproduction,\n and distribution as defined by Sections 1 through 9 of this document.\n\n \"Licensor\" shall mean the copyright owner or entity authorized by\n the copyright owner that is granting the License.\n\n \"Legal Entity\" shall mean the union of the acting entity and all\n other entities that control, are controlled by, or are under common\n control with that entity. For the purposes of this definition,\n \"control\" means (i) the power, direct or indirect, to cause the\n direction or management of such entity, whether by contract or\n otherwise, or (ii) ownership of fifty percent (50%) or more of the\n outstanding shares, or (iii) beneficial ownership of such entity.\n\n \"You\" (or \"Your\") shall mean an individual or Legal Entity\n exercising permissions granted by this License.\n\n \"Source\" form shall mean the preferred form for making modifications,\n including but not limited to software source code, documentation\n source, and configuration files.\n\n \"Object\" form shall mean any form resulting from mechanical\n transformation or translation of a Source form, including but\n not limited to compiled object code, generated documentation,\n and conversions to other media types.\n\n \"Work\" shall mean the work of authorship, whether in Source or\n Object form, made available under the License, as indicated by a\n copyright notice that is included in or attached to the work\n (an example is provided in the Appendix below).\n\n \"Derivative Works\" shall mean any work, whether in Source or Object\n form, that is based on (or derived from) the Work and for which the\n editorial revisions, annotations, elaborations, or other modifications\n represent, as a whole, an original work of authorship. For the purposes\n of this License, Derivative Works shall not include works that remain\n separable from, or merely link (or bind by name) to the interfaces of,\n the Work and Derivative Works thereof.\n\n \"Contribution\" shall mean any work of authorship, including\n the original version of the Work and any modifications or additions\n to that Work or Derivative Works thereof, that is intentionally\n submitted to Licensor for inclusion in the Work by the copyright owner\n or by an individual or Legal Entity authorized to submit on behalf of\n the copyright owner. For the purposes of this definition, \"submitted\"\n means any form of electronic, verbal, or written communication sent\n to the Licensor or its representatives, including but not limited to\n communication on electronic mailing lists, source code control systems,\n and issue tracking systems that are managed by, or on behalf of, the\n Licensor for the purpose of discussing and improving the Work, but\n excluding communication that is conspicuously marked or otherwise\n designated in writing by the copyright owner as \"Not a Contribution.\"\n\n \"Contributor\" shall mean Licensor and any individual or Legal Entity\n on behalf of whom a Contribution has been received by Licensor and\n subsequently incorporated within the Work.\n\n 2. Grant of Copyright License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n copyright license to reproduce, prepare Derivative Works of,\n publicly display, publicly perform, sublicense, and distribute the\n Work and such Derivative Works in Source or Object form.\n\n 3. Grant of Patent License. Subject to the terms and conditions of\n this License, each Contributor hereby grants to You a perpetual,\n worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n (except as stated in this section) patent license to make, have made,\n use, offer to sell, sell, import, and otherwise transfer the Work,\n where such license applies only to those patent claims licensable\n by such Contributor that are necessarily infringed by their\n Contribution(s) alone or by combination of their Contribution(s)\n with the Work to which such Contribution(s) was submitted. If You\n institute patent litigation against any entity (including a\n cross-claim or counterclaim in a lawsuit) alleging that the Work\n or a Contribution incorporated within the Work constitutes direct\n or contributory patent infringement, then any patent licenses\n granted to You under this License for that Work shall terminate\n as of the date such litigation is filed.\n\n 4. Redistribution. You may reproduce and distribute copies of the\n Work or Derivative Works thereof in any medium, with or without\n modifications, and in Source or Object form, provided that You\n meet the following conditions:\n\n (a) You must give any other recipients of the Work or\n Derivative Works a copy of this License; and\n\n (b) You must cause any modified files to carry prominent notices\n stating that You changed the files; and\n\n (c) You must retain, in the Source form of any Derivative Works\n that You distribute, all copyright, patent, trademark, and\n attribution notices from the Source form of the Work,\n excluding those notices that do not pertain to any part of\n the Derivative Works; and\n\n (d) If the Work includes a \"NOTICE\" text file as part of its\n distribution, then any Derivative Works that You distribute must\n include a readable copy of the attribution notices contained\n within such NOTICE file, excluding those notices that do not\n pertain to any part of the Derivative Works, in at least one\n of the following places: within a NOTICE text file distributed\n as part of the Derivative Works; within the Source form or\n documentation, if provided along with the Derivative Works; or,\n within a display generated by the Derivative Works, if and\n wherever such third-party notices normally appear. The contents\n of the NOTICE file are for informational purposes only and\n do not modify the License. You may add Your own attribution\n notices within Derivative Works that You distribute, alongside\n or as an addendum to the NOTICE text from the Work, provided\n that such additional attribution notices cannot be construed\n as modifying the License.\n\n You may add Your own copyright statement to Your modifications and\n may provide additional or different license terms and conditions\n for use, reproduction, or distribution of Your modifications, or\n for any such Derivative Works as a whole, provided Your use,\n reproduction, and distribution of the Work otherwise complies with\n the conditions stated in this License.\n\n 5. Submission of Contributions. Unless You explicitly state otherwise,\n any Contribution intentionally submitted for inclusion in the Work\n by You to the Licensor shall be under the terms and conditions of\n this License, without any additional terms or conditions.\n Notwithstanding the above, nothing herein shall supersede or modify\n the terms of any separate license agreement you may have executed\n with Licensor regarding such Contributions.\n\n 6. Trademarks. This License does not grant permission to use the trade\n names, trademarks, service marks, or product names of the Licensor,\n except as required for reasonable and customary use in describing the\n origin of the Work and reproducing the content of the NOTICE file.\n\n 7. Disclaimer of Warranty. Unless required by applicable law or\n agreed to in writing, Licensor provides the Work (and each\n Contributor provides its Contributions) on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n implied, including, without limitation, any warranties or conditions\n of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n PARTICULAR PURPOSE. You are solely responsible for determining the\n appropriateness of using or redistributing the Work and assume any\n risks associated with Your exercise of permissions under this License.\n\n 8. Limitation of Liability. In no event and under no legal theory,\n whether in tort (including negligence), contract, or otherwise,\n unless required by applicable law (such as deliberate and grossly\n negligent acts) or agreed to in writing, shall any Contributor be\n liable to You for damages, including any direct, indirect, special,\n incidental, or consequential damages of any character arising as a\n result of this License or out of the use or inability to use the\n Work (including but not limited to damages for loss of goodwill,\n work stoppage, computer failure or malfunction, or any and all\n other commercial damages or losses), even if such Contributor\n has been advised of the possibility of such damages.\n\n 9. Accepting Warranty or Additional Liability. While redistributing\n the Work or Derivative Works thereof, You may choose to offer,\n and charge a fee for, acceptance of support, warranty, indemnity,\n or other liability obligations and/or rights consistent with this\n License. However, in accepting such obligations, You may act only\n on Your own behalf and on Your sole responsibility, not on behalf\n of any other Contributor, and only if You agree to indemnify,\n defend, and hold each Contributor harmless for any liability\n incurred by, or claims asserted against, such Contributor by reason\n of your accepting any such warranty or additional liability.\n\n END OF TERMS AND CONDITIONS\n\n APPENDIX: How to apply the Apache License to your work.\n\n To apply the Apache License to your work, attach the following\n boilerplate notice, with the fields enclosed by brackets \"{}\"\n replaced with your own identifying information. (Don't include\n the brackets!)  The text should be enclosed in the appropriate\n comment syntax for the file format. We also recommend that a\n file or class name and description of purpose be included on the\n same \"printed page\" as the copyright notice for easier\n identification within third-party archives.\n\n Copyright (C) 2013-present   SheetJS LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n */\nvar M = Math;\n// @ts-ignore\nfunction _horner(arr, v) {\n    for (var i = 0, z = 0; i < arr.length; ++i) {\n        z = v * z + arr[i];\n    }\n    return z;\n}\n// @ts-ignore\nfunction _bessel_iter(x, n, f0, f1, sign) {\n    if (n === 0)\n        return f0;\n    if (n === 1)\n        return f1;\n    var tdx = 2 / x, f2 = f1;\n    for (var o = 1; o < n; ++o) {\n        f2 = f1 * o * tdx + sign * f0;\n        f0 = f1;\n        f1 = f2;\n    }\n    return f2;\n}\n// @ts-ignore\nfunction _bessel_wrap(bessel0, bessel1, name, nonzero, sign) {\n    // @ts-ignore\n    return function bessel(x, n) {\n        if (nonzero) {\n            if (x === 0)\n                return (nonzero == 1 ? -Infinity : Infinity);\n            else if (x < 0)\n                return NaN;\n        }\n        if (n === 0)\n            return bessel0(x);\n        if (n === 1)\n            return bessel1(x);\n        if (n < 0)\n            return NaN;\n        n |= 0;\n        var b0 = bessel0(x), b1 = bessel1(x);\n        return _bessel_iter(x, n, b0, b1, sign);\n    };\n}\nexport var besselj = (function () {\n    var W = 0.636619772; // 2 / Math.PI\n    var b0_a1a = [57568490574.0, -13362590354.0, 651619640.7, -11214424.18, 77392.33017, -184.9052456].reverse();\n    var b0_a2a = [57568490411.0, 1029532985.0, 9494680.718, 59272.64853, 267.8532712, 1.0].reverse();\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934935152e-7].reverse();\n    // @ts-ignore\n    function bessel0(x) {\n        var a = 0, a1 = 0, a2 = 0, y = x * x;\n        if (x < 8) {\n            a1 = _horner(b0_a1a, y);\n            a2 = _horner(b0_a2a, y);\n            a = a1 / a2;\n        }\n        else {\n            var xx = x - 0.785398164;\n            y = 64 / y;\n            a1 = _horner(b0_a1b, y);\n            a2 = _horner(b0_a2b, y);\n            a = M.sqrt(W / x) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / x);\n        }\n        return a;\n    }\n    var b1_a1a = [72362614232.0, -7895059235.0, 242396853.1, -2972611.439, 15704.48260, -30.16036606].reverse();\n    var b1_a2a = [144725228442.0, 2300535178.0, 18583304.74, 99447.43394, 376.9991397, 1.0].reverse();\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\n    // @ts-ignore\n    function bessel1(x) {\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = M.abs(x) - 2.356194491;\n        if (Math.abs(x) < 8) {\n            a1 = x * _horner(b1_a1a, y);\n            a2 = _horner(b1_a2a, y);\n            a = a1 / a2;\n        }\n        else {\n            y = 64 / y;\n            a1 = _horner(b1_a1b, y);\n            a2 = _horner(b1_a2b, y);\n            a = M.sqrt(W / M.abs(x)) * (M.cos(xx) * a1 - M.sin(xx) * a2 * 8 / M.abs(x));\n            if (x < 0)\n                a = -a;\n        }\n        return a;\n    }\n    // @ts-ignore\n    return function besselj(x, n) {\n        n = Math.round(n);\n        if (!isFinite(x))\n            return isNaN(x) ? x : 0;\n        if (n < 0)\n            return ((n % 2) ? -1 : 1) * besselj(x, -n);\n        if (x < 0)\n            return ((n % 2) ? -1 : 1) * besselj(-x, n);\n        if (n === 0)\n            return bessel0(x);\n        if (n === 1)\n            return bessel1(x);\n        if (x === 0)\n            return 0;\n        var ret = 0.0;\n        if (x > n) {\n            ret = _bessel_iter(x, n, bessel0(x), bessel1(x), -1);\n        }\n        else {\n            var m = 2 * M.floor((n + M.floor(M.sqrt(40 * n))) / 2);\n            var jsum = false;\n            var bjp = 0.0, sum = 0.0;\n            var bj = 1.0, bjm = 0.0;\n            var tox = 2 / x;\n            for (var j = m; j > 0; j--) {\n                bjm = j * tox * bj - bjp;\n                bjp = bj;\n                bj = bjm;\n                if (M.abs(bj) > 1E10) {\n                    bj *= 1E-10;\n                    bjp *= 1E-10;\n                    ret *= 1E-10;\n                    sum *= 1E-10;\n                }\n                if (jsum)\n                    sum += bj;\n                jsum = !jsum;\n                if (j == n)\n                    ret = bjp;\n            }\n            sum = 2.0 * sum - bj;\n            ret /= sum;\n        }\n        return ret;\n    };\n})();\nexport var bessely = (function () {\n    var W = 0.636619772;\n    var b0_a1a = [-2957821389.0, 7062834065.0, -512359803.6, 10879881.29, -86327.92757, 228.4622733].reverse();\n    var b0_a2a = [40076544269.0, 745249964.8, 7189466.438, 47447.26470, 226.1030244, 1.0].reverse();\n    var b0_a1b = [1.0, -0.1098628627e-2, 0.2734510407e-4, -0.2073370639e-5, 0.2093887211e-6].reverse();\n    var b0_a2b = [-0.1562499995e-1, 0.1430488765e-3, -0.6911147651e-5, 0.7621095161e-6, -0.934945152e-7].reverse();\n    // @ts-ignore\n    function bessel0(x) {\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 0.785398164;\n        if (x < 8) {\n            a1 = _horner(b0_a1a, y);\n            a2 = _horner(b0_a2a, y);\n            a = a1 / a2 + W * besselj(x, 0) * M.log(x);\n        }\n        else {\n            y = 64 / y;\n            a1 = _horner(b0_a1b, y);\n            a2 = _horner(b0_a2b, y);\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\n        }\n        return a;\n    }\n    var b1_a1a = [-0.4900604943e13, 0.1275274390e13, -0.5153438139e11, 0.7349264551e9, -0.4237922726e7, 0.8511937935e4].reverse();\n    var b1_a2a = [0.2499580570e14, 0.4244419664e12, 0.3733650367e10, 0.2245904002e8, 0.1020426050e6, 0.3549632885e3, 1].reverse();\n    var b1_a1b = [1.0, 0.183105e-2, -0.3516396496e-4, 0.2457520174e-5, -0.240337019e-6].reverse();\n    var b1_a2b = [0.04687499995, -0.2002690873e-3, 0.8449199096e-5, -0.88228987e-6, 0.105787412e-6].reverse();\n    // @ts-ignore\n    function bessel1(x) {\n        var a = 0, a1 = 0, a2 = 0, y = x * x, xx = x - 2.356194491;\n        if (x < 8) {\n            a1 = x * _horner(b1_a1a, y);\n            a2 = _horner(b1_a2a, y);\n            a = a1 / a2 + W * (besselj(x, 1) * M.log(x) - 1 / x);\n        }\n        else {\n            y = 64 / y;\n            a1 = _horner(b1_a1b, y);\n            a2 = _horner(b1_a2b, y);\n            a = M.sqrt(W / x) * (M.sin(xx) * a1 + M.cos(xx) * a2 * 8 / x);\n        }\n        return a;\n    }\n    return _bessel_wrap(bessel0, bessel1, 'BESSELY', 1, -1);\n})();\nexport var besseli = (function () {\n    var b0_a = [1.0, 3.5156229, 3.0899424, 1.2067492, 0.2659732, 0.360768e-1, 0.45813e-2].reverse();\n    var b0_b = [0.39894228, 0.1328592e-1, 0.225319e-2, -0.157565e-2, 0.916281e-2, -0.2057706e-1, 0.2635537e-1, -0.1647633e-1, 0.392377e-2].reverse();\n    // @ts-ignore\n    function bessel0(x) {\n        if (x <= 3.75)\n            return _horner(b0_a, x * x / (3.75 * 3.75));\n        return M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b0_b, 3.75 / M.abs(x));\n    }\n    var b1_a = [0.5, 0.87890594, 0.51498869, 0.15084934, 0.2658733e-1, 0.301532e-2, 0.32411e-3].reverse();\n    var b1_b = [0.39894228, -0.3988024e-1, -0.362018e-2, 0.163801e-2, -0.1031555e-1, 0.2282967e-1, -0.2895312e-1, 0.1787654e-1, -0.420059e-2].reverse();\n    // @ts-ignore\n    function bessel1(x) {\n        if (x < 3.75)\n            return x * _horner(b1_a, x * x / (3.75 * 3.75));\n        return (x < 0 ? -1 : 1) * M.exp(M.abs(x)) / M.sqrt(M.abs(x)) * _horner(b1_b, 3.75 / M.abs(x));\n    }\n    // @ts-ignore\n    return function besseli(x, n) {\n        n = Math.round(n);\n        if (n === 0)\n            return bessel0(x);\n        if (n === 1)\n            return bessel1(x);\n        if (n < 0)\n            return NaN;\n        if (M.abs(x) === 0)\n            return 0;\n        if (x == Infinity)\n            return Infinity;\n        var ret = 0.0, j, tox = 2 / M.abs(x), bip = 0.0, bi = 1.0, bim = 0.0;\n        var m = 2 * M.round((n + M.round(M.sqrt(40 * n))) / 2);\n        for (j = m; j > 0; j--) {\n            bim = j * tox * bi + bip;\n            bip = bi;\n            bi = bim;\n            if (M.abs(bi) > 1E10) {\n                bi *= 1E-10;\n                bip *= 1E-10;\n                ret *= 1E-10;\n            }\n            if (j == n)\n                ret = bip;\n        }\n        ret *= besseli(x, 0) / bi;\n        return x < 0 && (n % 2) ? -ret : ret;\n    };\n})();\nexport var besselk = (function () {\n    var b0_a = [-0.57721566, 0.42278420, 0.23069756, 0.3488590e-1, 0.262698e-2, 0.10750e-3, 0.74e-5].reverse();\n    var b0_b = [1.25331414, -0.7832358e-1, 0.2189568e-1, -0.1062446e-1, 0.587872e-2, -0.251540e-2, 0.53208e-3].reverse();\n    // @ts-ignore\n    function bessel0(x) {\n        if (x <= 2)\n            return -M.log(x / 2) * besseli(x, 0) + _horner(b0_a, x * x / 4);\n        return M.exp(-x) / M.sqrt(x) * _horner(b0_b, 2 / x);\n    }\n    var b1_a = [1.0, 0.15443144, -0.67278579, -0.18156897, -0.1919402e-1, -0.110404e-2, -0.4686e-4].reverse();\n    var b1_b = [1.25331414, 0.23498619, -0.3655620e-1, 0.1504268e-1, -0.780353e-2, 0.325614e-2, -0.68245e-3].reverse();\n    // @ts-ignore\n    function bessel1(x) {\n        if (x <= 2)\n            return M.log(x / 2) * besseli(x, 1) + (1 / x) * _horner(b1_a, x * x / 4);\n        return M.exp(-x) / M.sqrt(x) * _horner(b1_b, 2 / x);\n    }\n    return _bessel_wrap(bessel0, bessel1, 'BESSELK', 2, 1);\n})();\n","/**\n * @license\n Copyright (c) 2013 jStat\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\nexport function erf(x) {\n    const cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n        -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n        4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n        1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n        6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n        -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n        -6.886027e-12, 8.94487e-13, 3.13092e-13,\n        -1.12708e-13, 3.81e-16, 7.106e-15,\n        -1.523e-15, -9.4e-17, 1.21e-16,\n        -2.8e-17];\n    let j = cof.length - 1;\n    let isneg = false;\n    let d = 0;\n    let dd = 0;\n    let t, ty, tmp, res;\n    if (x === 0) {\n        return 0;\n    }\n    if (x < 0) {\n        x = -x;\n        isneg = true;\n    }\n    t = 2 / (2 + x);\n    ty = 4 * t - 2;\n    for (; j > 0; j--) {\n        tmp = d;\n        d = ty * d - dd + cof[j];\n        dd = tmp;\n    }\n    res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n    return isneg ? res - 1 : 1 - res;\n}\nexport function erfc(x) {\n    return 1 - erf(x);\n}\nfunction erfcinv(p) {\n    let j = 0;\n    let x, err, t, pp;\n    if (p >= 2)\n        return -100;\n    if (p <= 0)\n        return 100;\n    pp = (p < 1) ? p : 2 - p;\n    t = Math.sqrt(-2 * Math.log(pp / 2));\n    x = -0.70711 * ((2.30753 + t * 0.27061) /\n        (1 + t * (0.99229 + t * 0.04481)) - t);\n    for (; j < 2; j++) {\n        err = erfc(x) - pp;\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n    }\n    return (p < 1) ? x : -x;\n}\nexport const exponential = {\n    pdf: (x, rate) => {\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\n    },\n    cdf: (x, rate) => {\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n    },\n};\nexport function gammafn(x) {\n    const p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n        629.3311553128184, 866.9662027904133, -31451.272968848367,\n        -36144.413418691176, 66456.14382024054\n    ];\n    const q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n        -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n        -134659.9598649693, -115132.2596755535];\n    let fact = false;\n    let n = 0;\n    let xden = 0;\n    let xnum = 0;\n    let y = x;\n    let i, z, yi, res;\n    if (x > 171.6243769536076) {\n        return Infinity;\n    }\n    if (y <= 0) {\n        res = y % 1;\n        if (res) {\n            fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n            y = 1 - y;\n        }\n        else {\n            return Infinity;\n        }\n    }\n    yi = y;\n    if (y < 1) {\n        z = y++;\n    }\n    else {\n        z = (y -= n = (y | 0) - 1) - 1;\n    }\n    for (i = 0; i < 8; ++i) {\n        xnum = (xnum + p[i]) * z;\n        xden = xden * z + q[i];\n    }\n    res = xnum / xden + 1;\n    if (yi < y) {\n        res /= yi;\n    }\n    else if (yi > y) {\n        for (i = 0; i < n; ++i) {\n            res *= y;\n            y++;\n        }\n    }\n    if (fact) {\n        res = fact / res;\n    }\n    return res;\n}\nexport const gamma = {\n    pdf: function pdf(x, shape, scale) {\n        if (x < 0)\n            return 0;\n        return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                gammaln(shape) - shape * Math.log(scale));\n    },\n    cdf: function cdf(x, shape, scale) {\n        if (x < 0)\n            return 0;\n        return lowRegGamma(shape, x / scale);\n    },\n    inv: function (p, shape, scale) {\n        return gammapinv(p, shape) * scale;\n    }\n};\nexport function gammaln(x) {\n    let j = 0;\n    const cof = [\n        76.18009172947146, -86.50532032941677, 24.01409824083091,\n        -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n    ];\n    let ser = 1.000000000190015;\n    let xx, y, tmp;\n    tmp = (y = xx = x) + 5.5;\n    tmp -= (xx + 0.5) * Math.log(tmp);\n    for (; j < 6; j++)\n        ser += cof[j] / ++y;\n    return Math.log(2.5066282746310005 * ser / xx) - tmp;\n}\nfunction lowRegGamma(a, x) {\n    const aln = gammaln(a);\n    let ap = a;\n    let sum = 1 / a;\n    let del = sum;\n    let b = x + 1 - a;\n    let c = 1 / 1.0e-30;\n    let d = 1 / b;\n    let h = d;\n    let i = 1;\n    // calculate maximum number of itterations required for a\n    const ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n    let an;\n    if (x < 0 || a <= 0) {\n        return NaN;\n    }\n    else if (x < a + 1) {\n        for (; i <= ITMAX; i++) {\n            sum += del *= x / ++ap;\n        }\n        return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n    }\n    for (; i <= ITMAX; i++) {\n        an = -i * (i - a);\n        b += 2;\n        d = an * d + b;\n        c = b + an / c;\n        d = 1 / d;\n        h *= d * c;\n    }\n    return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n}\nfunction gammapinv(p, a) {\n    let j = 0;\n    const a1 = a - 1;\n    const EPS = 1e-8;\n    const gln = gammaln(a);\n    let x, err, t, u, pp;\n    let lna1;\n    let afac;\n    if (p >= 1)\n        return Math.max(100, a + 100 * Math.sqrt(a));\n    if (p <= 0)\n        return 0;\n    if (a > 1) {\n        lna1 = Math.log(a1);\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\n        pp = (p < 0.5) ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5)\n            x = -x;\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n    }\n    else {\n        t = 1 - a * (0.253 + a * 0.12);\n        if (p < t)\n            x = Math.pow(p / t, 1 / a);\n        else\n            x = 1 - Math.log(1 - (p - t) / (1 - t));\n    }\n    for (; j < 12; j++) {\n        if (x <= 0)\n            return 0;\n        err = lowRegGamma(a, x) - p;\n        if (a > 1)\n            t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n        else\n            t = Math.exp(-x + a1 * Math.log(x) - gln);\n        u = err / t;\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n        if (x <= 0)\n            x = 0.5 * (x + t);\n        if (Math.abs(t) < EPS * x)\n            break;\n    }\n    return x;\n}\nexport const normal = {\n    pdf: function pdf(x, mean, std) {\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n            Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n    },\n    cdf: function cdf(x, mean, std) {\n        return 0.5 * (1 + erf((x - mean) / Math.sqrt(2 * std * std)));\n    },\n    inv: function (p, mean, std) {\n        return -1.41421356237309505 * std * erfcinv(2 * p) + mean;\n    }\n};\nexport const beta = {\n    pdf: function pdf(x, alpha, beta) {\n        // PDF is zero outside the support\n        if (x > 1 || x < 0)\n            return 0;\n        // PDF is one for the uniform case\n        if (alpha == 1 && beta == 1)\n            return 1;\n        if (alpha < 512 && beta < 512) {\n            return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n                betafn(alpha, beta);\n        }\n        else {\n            return Math.exp((alpha - 1) * Math.log(x) +\n                (beta - 1) * Math.log(1 - x) -\n                betaln(alpha, beta));\n        }\n    },\n    cdf: function cdf(x, alpha, beta) {\n        return (x > 1 || x < 0) ? +(x > 1) : ibeta(x, alpha, beta);\n    },\n    inv: function inv(x, alpha, beta) {\n        return ibetainv(x, alpha, beta);\n    },\n};\nfunction betafn(x, y) {\n    // ensure arguments are positive\n    if (x <= 0 || y <= 0)\n        return undefined;\n    // make sure x + y doesn't exceed the upper limit of usable values\n    return (x + y > 170)\n        ? Math.exp(betaln(x, y))\n        : gammafn(x) * gammafn(y) / gammafn(x + y);\n}\n;\nfunction betaln(x, y) {\n    return gammaln(x) + gammaln(y) - gammaln(x + y);\n}\n;\nfunction ibetainv(p, a, b) {\n    var EPS = 1e-8;\n    var a1 = a - 1;\n    var b1 = b - 1;\n    var j = 0;\n    var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n    if (p <= 0)\n        return 0;\n    if (p >= 1)\n        return 1;\n    if (a >= 1 && b >= 1) {\n        pp = (p < 0.5) ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5)\n            x = -x;\n        al = (x * x - 3) / 6;\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n        w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n            (al + 5 / 6 - 2 / (3 * h));\n        x = a / (a + b * Math.exp(2 * w));\n    }\n    else {\n        lna = Math.log(a / (a + b));\n        lnb = Math.log(b / (a + b));\n        t = Math.exp(a * lna) / a;\n        u = Math.exp(b * lnb) / b;\n        w = t + u;\n        if (p < t / w)\n            x = Math.pow(a * w * p, 1 / a);\n        else\n            x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n    }\n    afac = -gammaln(a) - gammaln(b) + gammaln(a + b);\n    for (; j < 10; j++) {\n        if (x === 0 || x === 1)\n            return x;\n        // @ts-ignore\n        err = ibeta(x, a, b) - p;\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n        u = err / t;\n        x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n        if (x <= 0)\n            x = 0.5 * (x + t);\n        if (x >= 1)\n            x = 0.5 * (x + t + 1);\n        if (Math.abs(t) < EPS * x && j > 0)\n            break;\n    }\n    return x;\n}\n;\nfunction ibeta(x, a, b) {\n    // Factors in front of the continued fraction.\n    var bt = (x === 0 || x === 1) ? 0 :\n        Math.exp(gammaln(a + b) - gammaln(a) -\n            gammaln(b) + a * Math.log(x) + b *\n            Math.log(1 - x));\n    if (x < 0 || x > 1)\n        return false;\n    if (x < (a + 1) / (a + b + 2))\n        // Use continued fraction directly.\n        return bt * betacf(x, a, b) / a;\n    // else use continued fraction after making the symmetry transformation.\n    return 1 - bt * betacf(1 - x, b, a) / b;\n}\n;\nfunction betacf(x, a, b) {\n    var fpmin = 1e-30;\n    var m = 1;\n    var qab = a + b;\n    var qap = a + 1;\n    var qam = a - 1;\n    var c = 1;\n    var d = 1 - qab * x / qap;\n    var m2, aa, del, h;\n    // These q's will be used in factors that occur in the coefficients\n    if (Math.abs(d) < fpmin)\n        d = fpmin;\n    d = 1 / d;\n    h = d;\n    for (; m <= 100; m++) {\n        m2 = 2 * m;\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n        // One step (the even one) of the recurrence\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin)\n            d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin)\n            c = fpmin;\n        d = 1 / d;\n        h *= d * c;\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n        // Next step of the recurrence (the odd one)\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin)\n            d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin)\n            c = fpmin;\n        d = 1 / d;\n        del = d * c;\n        h *= del;\n        if (Math.abs(del - 1.0) < 3e-7)\n            break;\n    }\n    return h;\n}\n;\nexport const binomial = {\n    pdf: function (k, n, p) {\n        return (p === 0 || p === 1) ?\n            ((n * p) === k ? 1 : 0) :\n            combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n    },\n    cdf: function (x, n, p) {\n        var betacdf;\n        var eps = 1e-10;\n        if (x < 0)\n            return 0;\n        if (x >= n)\n            return 1;\n        if (p < 0 || p > 1 || n <= 0)\n            return NaN;\n        x = Math.floor(x);\n        var z = p;\n        var a = x + 1;\n        var b = n - x;\n        var s = a + b;\n        var bt = Math.exp(gammaln(s) - gammaln(b) -\n            gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n        if (z < (a + 1) / (s + 2))\n            betacdf = bt * betinc(z, a, b, eps);\n        else\n            betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n    }\n};\nfunction betinc(x, a, b, eps) {\n    var a0 = 0;\n    var b0 = 1;\n    var a1 = 1;\n    var b1 = 1;\n    var m9 = 0;\n    var a2 = 0;\n    var c9;\n    while (Math.abs((a1 - a2) / a1) > eps) {\n        a2 = a1;\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n        a0 = a1 + c9 * a0;\n        b0 = b1 + c9 * b0;\n        m9 = m9 + 1;\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n        a1 = a0 + c9 * a1;\n        b1 = b0 + c9 * b1;\n        a0 = a0 / b1;\n        b0 = b0 / b1;\n        a1 = a1 / b1;\n        b1 = 1;\n    }\n    return a1 / a;\n}\nfunction combination(n, m) {\n    // make sure n or m don't exceed the upper limit of usable values\n    return (n > 170 || m > 170)\n        ? Math.exp(combinationln(n, m))\n        : (factorial(n) / factorial(m)) / factorial(n - m);\n}\n;\nfunction combinationln(n, m) {\n    return factorialln(n) - factorialln(m) - factorialln(n - m);\n}\n;\n// natural log factorial of n\nexport function factorialln(n) {\n    return n < 0 ? NaN : gammaln(n + 1);\n}\n;\n// factorial of n\nexport function factorial(n) {\n    return n < 0 ? NaN : gammafn(n + 1);\n}\n;\nexport const chisquare = {\n    pdf: function pdf(x, dof) {\n        if (x < 0)\n            return 0;\n        return (x === 0 && dof === 2) ? 0.5 :\n            Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                Math.log(2) - gammaln(dof / 2));\n    },\n    cdf: function cdf(x, dof) {\n        if (x < 0)\n            return 0;\n        return lowRegGamma(dof / 2, x / 2);\n    },\n    inv: function (p, dof) {\n        return 2 * gammapinv(p, 0.5 * dof);\n    }\n};\nexport const centralF = {\n    // This implementation of the pdf function avoids float overflow\n    // See the way that R calculates this value:\n    // https://svn.r-project.org/R/trunk/src/nmath/df.c\n    pdf: function pdf(x, df1, df2) {\n        var p, q, f;\n        if (x < 0)\n            return 0;\n        if (df1 <= 2) {\n            if (x === 0 && df1 < 2) {\n                return Infinity;\n            }\n            if (x === 0 && df1 === 2) {\n                return 1;\n            }\n            return (1 / betafn(df1 / 2, df2 / 2)) *\n                Math.pow(df1 / df2, df1 / 2) *\n                Math.pow(x, (df1 / 2) - 1) *\n                Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n        }\n        p = (df1 * x) / (df2 + x * df1);\n        q = df2 / (df2 + x * df1);\n        f = df1 * q / 2.0;\n        return f * binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n    },\n    cdf: function cdf(x, df1, df2) {\n        if (x < 0)\n            return 0;\n        return ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n    },\n    inv: function inv(x, df1, df2) {\n        return df2 / (df1 * (1 / ibetainv(x, df1 / 2, df2 / 2) - 1));\n    },\n};\nexport const weibull = {\n    pdf: function pdf(x, scale, shape) {\n        if (x < 0 || scale < 0 || shape < 0)\n            return 0;\n        return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n            Math.exp(-(Math.pow((x / scale), shape)));\n    },\n    cdf: function cdf(x, scale, shape) {\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n    },\n};\nexport const poisson = {\n    pdf: function pdf(k, l) {\n        if (l < 0 || (k % 1) !== 0 || k < 0) {\n            return 0;\n        }\n        return Math.pow(l, k) * Math.exp(-l) / factorial(k);\n    },\n    cdf: function cdf(x, l) {\n        var k = 0;\n        if (x < 0)\n            return 0;\n        var sum = 0;\n        for (; k <= x; k++) {\n            sum += poisson.pdf(k, l);\n        }\n        return sum;\n    },\n};\nexport const hypgeom = {\n    pdf: function pdf(k, N, m, n) {\n        // Hypergeometric PDF.\n        // A simplification of the CDF algorithm below.\n        // k = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n        // if(k !== k | 0) {\n        //   return false;\n        // } else\n        if (k < 0 || k < m - (N - n)) {\n            // It's impossible to have this few successes drawn.\n            return 0;\n        }\n        else if (k > n || k > m) {\n            // It's impossible to have this many successes drawn.\n            return 0;\n        }\n        else if (m * 2 > N) {\n            // More than half the population is successes.\n            if (n * 2 > N) {\n                // More than half the population is sampled.\n                return hypgeom.pdf(N - m - n + k, N, N - m, N - n);\n            }\n            else {\n                // Half or less of the population is sampled.\n                return hypgeom.pdf(n - k, N, N - m, n);\n            }\n        }\n        else if (n * 2 > N) {\n            // Half or less is successes.\n            return hypgeom.pdf(m - k, N, m, N - n);\n        }\n        else if (m < n) {\n            // We want to have the number of things sampled to be less than the\n            // successes available. So swap the definitions of successful and sampled.\n            return hypgeom.pdf(k, N, n, m);\n        }\n        else {\n            // If we get here, half or less of the population was sampled, half or\n            // less of it was successes, and we had fewer sampled things than\n            // successes. Now we can do this complicated iterative algorithm in an\n            // efficient way.\n            // The basic premise of the algorithm is that we partially normalize our\n            // intermediate product to keep it in a numerically good region, and then\n            // finish the normalization at the end.\n            // This variable holds the scaled probability of the current number of\n            // successes.\n            var scaledPDF = 1;\n            // This keeps track of how much we have normalized.\n            var samplesDone = 0;\n            for (var i = 0; i < k; i++) {\n                // For every possible number of successes up to that observed...\n                while (scaledPDF > 1 && samplesDone < n) {\n                    // Intermediate result is growing too big. Apply some of the\n                    // normalization to shrink everything.\n                    scaledPDF *= 1 - (m / (N - samplesDone));\n                    // Say we've normalized by this sample already.\n                    samplesDone++;\n                }\n                // Work out the partially-normalized hypergeometric PDF for the next\n                // number of successes\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n            }\n            for (; samplesDone < n; samplesDone++) {\n                // Apply all the rest of the normalization\n                scaledPDF *= 1 - (m / (N - samplesDone));\n            }\n            // Bound answer sanely before returning.\n            return Math.min(1, Math.max(0, scaledPDF));\n        }\n    },\n    cdf: function cdf(x, N, m, n) {\n        // Hypergeometric CDF.\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n        // and comes from his hypergeometric test calculator at\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n        // x = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n        if (x < 0 || x < m - (N - n)) {\n            // It's impossible to have this few successes drawn or fewer.\n            return 0;\n        }\n        else if (x >= n || x >= m) {\n            // We will always have this many successes or fewer.\n            return 1;\n        }\n        else if (m * 2 > N) {\n            // More than half the population is successes.\n            if (n * 2 > N) {\n                // More than half the population is sampled.\n                return cdf(N - m - n + x, N, N - m, N - n);\n            }\n            else {\n                // Half or less of the population is sampled.\n                return 1 - hypgeom.cdf(n - x - 1, N, N - m, n);\n            }\n        }\n        else if (n * 2 > N) {\n            // Half or less is successes.\n            return 1 - hypgeom.cdf(m - x - 1, N, m, N - n);\n        }\n        else if (m < n) {\n            // We want to have the number of things sampled to be less than the\n            // successes available. So swap the definitions of successful and sampled.\n            return hypgeom.cdf(x, N, n, m);\n        }\n        else {\n            // If we get here, half or less of the population was sampled, half or\n            // less of it was successes, and we had fewer sampled things than\n            // successes. Now we can do this complicated iterative algorithm in an\n            // efficient way.\n            // The basic premise of the algorithm is that we partially normalize our\n            // intermediate sum to keep it in a numerically good region, and then\n            // finish the normalization at the end.\n            // Holds the intermediate, scaled total CDF.\n            var scaledCDF = 1;\n            // This variable holds the scaled probability of the current number of\n            // successes.\n            var scaledPDF = 1;\n            // This keeps track of how much we have normalized.\n            var samplesDone = 0;\n            for (var i = 0; i < x; i++) {\n                // For every possible number of successes up to that observed...\n                while (scaledCDF > 1 && samplesDone < n) {\n                    // Intermediate result is growing too big. Apply some of the\n                    // normalization to shrink everything.\n                    var factor = 1 - (m / (N - samplesDone));\n                    scaledPDF *= factor;\n                    scaledCDF *= factor;\n                    // Say we've normalized by this sample already.\n                    samplesDone++;\n                }\n                // Work out the partially-normalized hypergeometric PDF for the next\n                // number of successes\n                scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n                // Add to the CDF answer.\n                scaledCDF += scaledPDF;\n            }\n            for (; samplesDone < n; samplesDone++) {\n                // Apply all the rest of the normalization\n                scaledCDF *= 1 - (m / (N - samplesDone));\n            }\n            // Bound answer sanely before returning.\n            return Math.min(1, Math.max(0, scaledCDF));\n        }\n    }\n};\nexport const studentt = {\n    pdf: function pdf(x, dof) {\n        dof = dof > 1e100 ? 1e100 : dof;\n        return (1 / (Math.sqrt(dof) * betafn(0.5, dof / 2))) *\n            Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n    },\n    cdf: function cdf(x, dof) {\n        var dof2 = dof / 2;\n        return ibeta((x + Math.sqrt(x * x + dof)) /\n            (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n    },\n    inv: function (p, dof) {\n        var x = ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n        x = Math.sqrt(dof * (1 - x) / x);\n        return (p > 0.5) ? x : -x;\n    },\n};\nexport const lognormal = {\n    pdf: function pdf(x, mu, sigma) {\n        if (x <= 0)\n            return 0;\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n            Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n            (2 * sigma * sigma));\n    },\n    cdf: function cdf(x, mu, sigma) {\n        if (x < 0)\n            return 0;\n        return 0.5 +\n            (0.5 * erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n    },\n    inv: function (p, mu, sigma) {\n        return Math.exp(-1.41421356237309505 * sigma * erfcinv(2 * p) + mu);\n    },\n};\nexport const negbin = {\n    pdf: function pdf(k, r, p) {\n        if (k !== k >>> 0)\n            return false;\n        if (k < 0)\n            return 0;\n        return combination(k + r - 1, r - 1) *\n            Math.pow(1 - p, k) * Math.pow(p, r);\n    },\n    cdf: function cdf(x, r, p) {\n        var sum = 0, k = 0;\n        if (x < 0)\n            return 0;\n        for (; k <= x; k++) {\n            sum += negbin.pdf(k, r, p);\n        }\n        return sum;\n    }\n};\nfunction sum(arr) {\n    var sum = 0;\n    var i = arr.length;\n    while (--i >= 0)\n        sum += arr[i];\n    return sum;\n}\n;\nexport function mean(arr) {\n    return sum(arr) / arr.length;\n}\n;\nexport function sumsqerr(arr) {\n    var meanv = mean(arr);\n    var sum = 0;\n    var i = arr.length;\n    var tmp;\n    while (--i >= 0) {\n        tmp = arr[i] - meanv;\n        sum += tmp * tmp;\n    }\n    return sum;\n}\n;\nexport function variance(arr, flag) {\n    return sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n}\nexport function stdev(arr, flag) {\n    return Math.sqrt(variance(arr, flag));\n}\n// 2 different parameter setups\n// (value, alpha, sd, n)\n// (value, alpha, array)\nexport function normalci() {\n    var args = [].slice.call(arguments), ans = new Array(2), change;\n    if (args.length === 4) {\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) *\n            args[2] / Math.sqrt(args[3]));\n    }\n    else {\n        // @ts-ignore\n        change = Math.abs(normal.inv(args[1] / 2, 0, 1) * stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n}\nexport function tci() {\n    var args = [].slice.call(arguments), ans = new Array(2), change;\n    if (args.length === 4) {\n        change = Math.abs(studentt.inv(args[1] / 2, args[3] - 1) *\n            args[2] / Math.sqrt(args[3]));\n    }\n    else {\n        // @ts-ignore\n        change = Math.abs(studentt.inv(args[1] / 2, args[2].length - 1) * stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n}\nfunction product(arr) {\n    var prod = 1;\n    var i = arr.length;\n    while (--i >= 0)\n        prod *= arr[i];\n    return prod;\n}\nexport function geomean(arr) {\n    return Math.pow(product(arr), 1 / arr.length);\n}\nexport function covariance(arr1, arr2) {\n    var u = mean(arr1);\n    var v = mean(arr2);\n    var arr1Len = arr1.length;\n    var sq_dev = new Array(arr1Len);\n    var i;\n    for (i = 0; i < arr1Len; i++)\n        sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n    return sum(sq_dev) / (arr1Len - 1);\n}\nexport function corrcoeff(arr1, arr2) {\n    return covariance(arr1, arr2) /\n        stdev(arr1, 1) /\n        stdev(arr2, 1);\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class MathPlugin extends FunctionPlugin {\n    fact(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FACT'), (arg) => {\n            arg = Math.trunc(arg);\n            let ret = 1;\n            for (let i = 1; i <= arg; i++) {\n                ret *= i;\n            }\n            return ret;\n        });\n    }\n    factdouble(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('FACTDOUBLE'), (arg) => {\n            arg = Math.trunc(arg);\n            let ret = 1;\n            for (let i = arg; i >= 1; i -= 2) {\n                ret *= i;\n            }\n            return ret;\n        });\n    }\n    combin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COMBIN'), (n, m) => {\n            if (m > n) {\n                return new CellError(ErrorType.NUM, ErrorMessage.WrongOrder);\n            }\n            n = Math.trunc(n);\n            m = Math.trunc(m);\n            return combin(n, m);\n        });\n    }\n    combina(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COMBINA'), (n, m) => {\n            n = Math.trunc(n);\n            m = Math.trunc(m);\n            if (n + m - 1 >= 1030) {\n                //Product #2 does not enforce this\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            if (n === 0 && m === 0) {\n                return 1;\n            }\n            return combin(n + m - 1, m);\n        });\n    }\n    gcd(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GCD'), (...args) => {\n            const processedArgs = this.interpreter.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\n            if (processedArgs instanceof CellError) {\n                return processedArgs;\n            }\n            let ret = 0;\n            for (const val of processedArgs) {\n                if (val < 0) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                }\n                ret = binaryGCD(ret, Math.trunc(val));\n            }\n            if (ret > Number.MAX_SAFE_INTEGER) {\n                //inconsistency with product #1\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            return ret;\n        });\n    }\n    lcm(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('LCM'), (...args) => {\n            const processedArgs = this.interpreter.arithmeticHelper.coerceNumbersCoerceRangesDropNulls(args);\n            if (processedArgs instanceof CellError) {\n                return processedArgs;\n            }\n            let ret = 1;\n            for (const val of processedArgs) {\n                if (val < 0) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                }\n                ret = binaryLCM(ret, Math.trunc(val));\n            }\n            if (ret > Number.MAX_SAFE_INTEGER) {\n                //inconsistency with product #1\n                return new CellError(ErrorType.NUM, ErrorMessage.ValueLarge);\n            }\n            return ret;\n        });\n    }\n    mround(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MROUND'), (nom, denom) => {\n            if (denom === 0) {\n                return 0;\n            }\n            if ((nom > 0 && denom < 0) || (nom < 0 && denom > 0)) {\n                return new CellError(ErrorType.NUM, ErrorMessage.DistinctSigns);\n            }\n            return Math.round(nom / denom) * denom;\n        });\n    }\n    multinomial(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('MULTINOMIAL'), (...args) => {\n            let n = 0;\n            let ans = 1;\n            for (let arg of args) {\n                if (arg < 0) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                }\n                arg = Math.trunc(arg);\n                for (let i = 1; i <= arg; i++) {\n                    ans *= (n + i) / i;\n                }\n                n += arg;\n            }\n            return Math.round(ans);\n        });\n    }\n    quotient(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('QUOTIENT'), (nom, denom) => {\n            if (denom === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return Math.trunc(nom / denom);\n        });\n    }\n    seriessum(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SERIESSUM'), (x, n, m, range) => {\n            const coefs = this.interpreter.arithmeticHelper.manyToOnlyNumbersDropNulls(range.valuesFromTopLeftCorner());\n            if (coefs instanceof CellError) {\n                return coefs;\n            }\n            let ret = 0;\n            coefs.reverse();\n            for (const coef of coefs) {\n                ret *= Math.pow(x, m);\n                ret += coef;\n            }\n            return ret * Math.pow(x, n);\n        });\n    }\n    sign(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SIGN'), (arg) => {\n            if (arg > 0) {\n                return 1;\n            }\n            else if (arg < 0) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        });\n    }\n    sumx2my2(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUMX2MY2'), (rangeX, rangeY) => {\n            const valsX = rangeX.valuesFromTopLeftCorner();\n            const valsY = rangeY.valuesFromTopLeftCorner();\n            if (valsX.length !== valsY.length) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const n = valsX.length;\n            let ret = 0;\n            for (let i = 0; i < n; i++) {\n                const valX = valsX[i];\n                const valY = valsY[i];\n                if (valX instanceof CellError) {\n                    return valX;\n                }\n                if (valY instanceof CellError) {\n                    return valY;\n                }\n                if (typeof valX === 'number' && typeof valY === 'number') {\n                    ret += Math.pow(valX, 2) - Math.pow(valY, 2);\n                }\n            }\n            return ret;\n        });\n    }\n    sumx2py2(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUMX2PY2'), (rangeX, rangeY) => {\n            const valsX = rangeX.valuesFromTopLeftCorner();\n            const valsY = rangeY.valuesFromTopLeftCorner();\n            if (valsX.length !== valsY.length) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const n = valsX.length;\n            let ret = 0;\n            for (let i = 0; i < n; i++) {\n                const valX = valsX[i];\n                const valY = valsY[i];\n                if (valX instanceof CellError) {\n                    return valX;\n                }\n                if (valY instanceof CellError) {\n                    return valY;\n                }\n                if (typeof valX === 'number' && typeof valY === 'number') {\n                    ret += Math.pow(valX, 2) + Math.pow(valY, 2);\n                }\n            }\n            return ret;\n        });\n    }\n    sumxmy2(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SUMXMY2'), (rangeX, rangeY) => {\n            const valsX = rangeX.valuesFromTopLeftCorner();\n            const valsY = rangeY.valuesFromTopLeftCorner();\n            if (valsX.length !== valsY.length) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const n = valsX.length;\n            let ret = 0;\n            for (let i = 0; i < n; i++) {\n                const valX = valsX[i];\n                const valY = valsY[i];\n                if (valX instanceof CellError) {\n                    return valX;\n                }\n                if (valY instanceof CellError) {\n                    return valY;\n                }\n                if (typeof valX === 'number' && typeof valY === 'number') {\n                    ret += Math.pow(valX - valY, 2);\n                }\n            }\n            return ret;\n        });\n    }\n}\nMathPlugin.implementedFunctions = {\n    'FACT': {\n        method: 'fact',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 170 }\n        ]\n    },\n    'FACTDOUBLE': {\n        method: 'factdouble',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, maxValue: 288 }\n        ]\n    },\n    'COMBIN': {\n        method: 'combin',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0, lessThan: 1030 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\n        ]\n    },\n    'COMBINA': {\n        method: 'combina',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 },\n            { argumentType: ArgumentTypes.NUMBER, minValue: 0 }\n        ]\n    },\n    'GCD': {\n        method: 'gcd',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'LCM': {\n        method: 'lcm',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'MROUND': {\n        method: 'mround',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'MULTINOMIAL': {\n        method: 'multinomial',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n        repeatLastArgs: 1,\n        expandRanges: true,\n    },\n    'QUOTIENT': {\n        method: 'quotient',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'SERIESSUM': {\n        method: 'seriessum',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'SIGN': {\n        method: 'sign',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'SUMX2MY2': {\n        method: 'sumx2my2',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'SUMX2PY2': {\n        method: 'sumx2py2',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'SUMXMY2': {\n        method: 'sumxmy2',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n};\nfunction combin(n, m) {\n    if (2 * m > n) {\n        m = n - m;\n    }\n    let ret = 1;\n    for (let i = 1; i <= m; i++) {\n        ret *= (n - m + i) / i;\n    }\n    return Math.round(ret);\n}\nfunction binaryGCD(a, b) {\n    if (a < b) {\n        [a, b] = [b, a];\n    }\n    while (b > 0) {\n        [a, b] = [b, a % b];\n    }\n    return a;\n}\nfunction binaryLCM(a, b) {\n    if (a === 0 || b === 0) {\n        return 0;\n    }\n    return a * (b / binaryGCD(a, b));\n}\n","var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.es/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { coerceComplexToString } from '../ArithmeticHelper';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class ComplexPlugin extends FunctionPlugin {\n    complex(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COMPLEX'), (re, im, unit) => {\n            if (unit !== 'i' && unit !== 'j') {\n                return new CellError(ErrorType.VALUE, ErrorMessage.ShouldBeIorJ);\n            }\n            return coerceComplexToString([re, im], unit);\n        });\n    }\n    imabs(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMABS'), abs);\n    }\n    imaginary(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMAGINARY'), ([re, im]) => im);\n    }\n    imreal(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMREAL'), ([re, im]) => re);\n    }\n    imargument(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMARGUMENT'), ([re, im]) => {\n            if (re === 0 && im === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return Math.atan2(im, re);\n        });\n    }\n    imconjugate(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMCONJUGATE'), ([re, im]) => coerceComplexToString([re, -im]));\n    }\n    imcos(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMCOS'), (arg) => coerceComplexToString(cos(arg)));\n    }\n    imcosh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMCOSH'), (arg) => coerceComplexToString(cosh(arg)));\n    }\n    imcot(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMCOT'), (arg) => coerceComplexToString(div(cos(arg), sin(arg))));\n    }\n    imcsc(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMCSC'), (arg) => coerceComplexToString(div([1, 0], sin(arg))));\n    }\n    imcsch(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMCSCH'), (arg) => coerceComplexToString(div([1, 0], sinh(arg))));\n    }\n    imsec(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSEC'), (arg) => coerceComplexToString(div([1, 0], cos(arg))));\n    }\n    imsech(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSECH'), (arg) => coerceComplexToString(div([1, 0], cosh(arg))));\n    }\n    imsin(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSIN'), (arg) => coerceComplexToString(sin(arg)));\n    }\n    imsinh(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSINH'), (arg) => coerceComplexToString(sinh(arg)));\n    }\n    imtan(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMTAN'), (arg) => coerceComplexToString(div(sin(arg), cos(arg))));\n    }\n    imdiv(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMDIV'), (arg1, arg2) => coerceComplexToString(div(arg1, arg2)));\n    }\n    improduct(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMPRODUCT'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceComplexExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            let prod = [1, 0];\n            for (const val of coerced) {\n                prod = mul(prod, val);\n            }\n            return coerceComplexToString(prod);\n        });\n    }\n    imsum(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSUM'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceComplexExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            let sum = [0, 0];\n            for (const val of coerced) {\n                sum = add(sum, val);\n            }\n            return coerceComplexToString(sum);\n        });\n    }\n    imsub(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSUB'), (arg1, arg2) => coerceComplexToString(sub(arg1, arg2)));\n    }\n    imexp(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMEXP'), (arg) => coerceComplexToString(exp(arg)));\n    }\n    imln(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMLN'), (arg) => coerceComplexToString(ln(arg)));\n    }\n    imlog10(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMLOG10'), (arg) => {\n            const [re, im] = ln(arg);\n            const c = Math.log(10);\n            return coerceComplexToString([re / c, im / c]);\n        });\n    }\n    imlog2(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMLOG2'), (arg) => {\n            const [re, im] = ln(arg);\n            const c = Math.log(2);\n            return coerceComplexToString([re / c, im / c]);\n        });\n    }\n    impower(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMPOWER'), (arg, n) => coerceComplexToString(power(arg, n)));\n    }\n    imsqrt(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('IMSQRT'), (arg) => coerceComplexToString(power(arg, 0.5)));\n    }\n}\nComplexPlugin.implementedFunctions = {\n    'COMPLEX': {\n        method: 'complex',\n        parameters: [\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.STRING, defaultValue: 'i' },\n        ],\n    },\n    'IMABS': {\n        method: 'imabs',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMAGINARY': {\n        method: 'imaginary',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMREAL': {\n        method: 'imreal',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMARGUMENT': {\n        method: 'imargument',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMCONJUGATE': {\n        method: 'imconjugate',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMCOS': {\n        method: 'imcos',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMCOSH': {\n        method: 'imcosh',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMCOT': {\n        method: 'imcot',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMCSC': {\n        method: 'imcsc',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMCSCH': {\n        method: 'imcsch',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMSEC': {\n        method: 'imsec',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMSECH': {\n        method: 'imsech',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMSIN': {\n        method: 'imsin',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMSINH': {\n        method: 'imsinh',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMTAN': {\n        method: 'imtan',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMDIV': {\n        method: 'imdiv',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMPRODUCT': {\n        method: 'improduct',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1,\n    },\n    'IMSUM': {\n        method: 'imsum',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1,\n    },\n    'IMSUB': {\n        method: 'imsub',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMEXP': {\n        method: 'imexp',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMLN': {\n        method: 'imln',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMLOG10': {\n        method: 'imlog10',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMLOG2': {\n        method: 'imlog2',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n    'IMPOWER': {\n        method: 'impower',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n            { argumentType: ArgumentTypes.NUMBER },\n        ],\n    },\n    'IMSQRT': {\n        method: 'imsqrt',\n        parameters: [\n            { argumentType: ArgumentTypes.COMPLEX },\n        ],\n    },\n};\nfunction add([re1, im1], [re2, im2]) {\n    return [re1 + re2, im1 + im2];\n}\nfunction sub([re1, im1], [re2, im2]) {\n    return [re1 - re2, im1 - im2];\n}\nfunction mul([re1, im1], [re2, im2]) {\n    return [re1 * re2 - im1 * im2, re1 * im2 + re2 * im1];\n}\nfunction div([re1, im1], [re2, im2]) {\n    const denom = Math.pow(re2, 2) + Math.pow(im2, 2);\n    const [nomRe, nomIm] = mul([re1, im1], [re2, -im2]);\n    return [nomRe / denom, nomIm / denom];\n}\nfunction cos([re, im]) {\n    return [Math.cos(re) * Math.cosh(im), -Math.sin(re) * Math.sinh(im)];\n}\nfunction cosh([re, im]) {\n    return [Math.cosh(re) * Math.cos(im), Math.sinh(re) * Math.sin(im)];\n}\nfunction sin([re, im]) {\n    return [Math.sin(re) * Math.cosh(im), Math.cos(re) * Math.sinh(im)];\n}\nfunction sinh([re, im]) {\n    return [Math.sinh(re) * Math.cos(im), Math.cosh(re) * Math.sin(im)];\n}\nfunction exp([re, im]) {\n    return [Math.exp(re) * Math.cos(im), Math.exp(re) * Math.sin(im)];\n}\nfunction abs([re, im]) {\n    return Math.sqrt(re * re + im * im);\n}\nfunction ln([re, im]) {\n    return [Math.log(abs([re, im])), Math.atan2(im, re)];\n}\nfunction power(arg, n) {\n    const [re, im] = ln(arg);\n    return exp([n * re, n * im]);\n}\n","/**\n * @license\n * Copyright (c) 2021 Handsoncode. All rights reserved.\n */\nimport { CellError, ErrorType } from '../../Cell';\nimport { ErrorMessage } from '../../error-message';\nimport { getRawValue, isExtendedNumber } from '../InterpreterValue';\nimport { centralF, chisquare, corrcoeff, covariance, geomean, mean, normal, stdev, studentt, sumsqerr, variance } from './3rdparty/jstat/jstat';\nimport { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';\nexport class StatisticalAggregationPlugin extends FunctionPlugin {\n    avedev(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('AVEDEV'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            if (coerced.length === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            const avg = mean(coerced);\n            return coerced.reduce((a, b) => a + Math.abs(b - avg), 0) / coerced.length;\n        });\n    }\n    devsq(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('DEVSQ'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            if (coerced.length === 0) {\n                return 0;\n            }\n            return sumsqerr(coerced);\n        });\n    }\n    geomean(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('GEOMEAN'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            if (coerced.length === 0) {\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\n            }\n            for (const val of coerced) {\n                if (val <= 0) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                }\n            }\n            return geomean(coerced);\n        });\n    }\n    harmean(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('HARMEAN'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            if (coerced.length === 0) {\n                return new CellError(ErrorType.NUM, ErrorMessage.OneValue);\n            }\n            for (const val of coerced) {\n                if (val <= 0) {\n                    return new CellError(ErrorType.NUM, ErrorMessage.ValueSmall);\n                }\n            }\n            return coerced.length / (coerced.reduce((a, b) => a + 1 / b, 0));\n        });\n    }\n    correl(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CORREL'), (dataX, dataY) => {\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            const n = ret[0].length;\n            if (n <= 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n            }\n            return corrcoeff(ret[0], ret[1]);\n        });\n    }\n    rsq(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('RSQ'), (dataX, dataY) => {\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            const n = ret[0].length;\n            if (n <= 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n            }\n            return Math.pow(corrcoeff(ret[0], ret[1]), 2);\n        });\n    }\n    covariancep(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COVARIANCE.P'), (dataX, dataY) => {\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            const n = ret[0].length;\n            if (n < 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.OneValue);\n            }\n            if (n === 1) {\n                return 0;\n            }\n            return covariance(ret[0], ret[1]) * (n - 1) / n;\n        });\n    }\n    covariances(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('COVARIANCE.S'), (dataX, dataY) => {\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            const n = ret[0].length;\n            if (n <= 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n            }\n            return covariance(ret[0], ret[1]);\n        });\n    }\n    ztest(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('Z.TEST'), (range, x, sigma) => {\n            const vals = this.interpreter.arithmeticHelper.manyToExactNumbers(range.valuesFromTopLeftCorner());\n            if (vals instanceof CellError) {\n                return vals;\n            }\n            const n = vals.length;\n            if (sigma === undefined) {\n                if (n < 2) {\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n                }\n                sigma = stdev(vals, true);\n            }\n            if (n < 1) {\n                return new CellError(ErrorType.NA, ErrorMessage.OneValue);\n            }\n            if (sigma === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return 1 - normal.cdf((mean(vals) - x) / (sigma / Math.sqrt(n)), 0, 1);\n        });\n    }\n    ftest(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('F.TEST'), (dataX, dataY) => {\n            const arrX = this.interpreter.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\n            const arrY = this.interpreter.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\n            if (arrX instanceof CellError) {\n                return arrX;\n            }\n            if (arrY instanceof CellError) {\n                return arrY;\n            }\n            if (arrX.length <= 1 || arrY.length <= 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            const vx = variance(arrX, true);\n            const vy = variance(arrY, true);\n            if (vx === 0 || vy === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            const r = vx / vy;\n            const v = centralF.cdf(r, arrX.length - 1, arrY.length - 1);\n            return 2 * Math.min(v, 1 - v);\n        });\n    }\n    steyx(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('STEYX'), (dataX, dataY) => {\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            const n = ret[0].length;\n            if (n <= 2) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\n            }\n            return Math.sqrt((sumsqerr(ret[0]) - Math.pow(covariance(ret[0], ret[1]) * (n - 1), 2) / sumsqerr(ret[1])) / (n - 2));\n        });\n    }\n    slope(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SLOPE'), (dataX, dataY) => {\n            if (dataX.numberOfElements() !== dataY.numberOfElements()) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            const n = ret[0].length;\n            if (n <= 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n            }\n            return covariance(ret[0], ret[1]) * (n - 1) / sumsqerr(ret[1]);\n        });\n    }\n    chisqtest(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('CHISQ.TEST'), (dataX, dataY) => {\n            const r = dataX.height();\n            const c = dataX.width();\n            if (dataY.height() !== r || dataY.width() !== c) {\n                return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n            }\n            const ret = parseTwoArrays(dataX, dataY);\n            if (ret instanceof CellError) {\n                return ret;\n            }\n            if (ret[0].length <= 1) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n            }\n            let sum = 0;\n            for (let i = 0; i < ret[0].length; i++) {\n                if (ret[1][i] === 0) {\n                    return new CellError(ErrorType.DIV_BY_ZERO);\n                }\n                sum += Math.pow(ret[0][i] - ret[1][i], 2) / ret[1][i];\n            }\n            if (sum < 0) {\n                return new CellError(ErrorType.NUM, ErrorMessage.NaN);\n            }\n            return 1 - chisquare.cdf(sum, (r > 1 && c > 1) ? (r - 1) * (c - 1) : r * c - 1);\n        });\n    }\n    ttest(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('T.TEST'), (dataX, dataY, tails, type) => {\n            const arrX = this.interpreter.arithmeticHelper.manyToExactNumbers(dataX.valuesFromTopLeftCorner());\n            const arrY = this.interpreter.arithmeticHelper.manyToExactNumbers(dataY.valuesFromTopLeftCorner());\n            if (arrX instanceof CellError) {\n                return arrX;\n            }\n            if (arrY instanceof CellError) {\n                return arrY;\n            }\n            const n = arrX.length;\n            const m = arrY.length;\n            if (type === 1) {\n                if (m !== n) {\n                    return new CellError(ErrorType.NA, ErrorMessage.EqualLength);\n                }\n                if (n <= 1) {\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n                }\n                const sub = Array(n);\n                for (let i = 0; i < n; i++) {\n                    sub[i] = arrX[i] - arrY[i];\n                }\n                const s = stdev(sub, true);\n                if (s === 0) {\n                    return new CellError(ErrorType.DIV_BY_ZERO);\n                }\n                const t = Math.abs(Math.sqrt(n) * mean(sub) / s);\n                return tails * (1 - studentt.cdf(t, n - 1));\n            }\n            else if (type === 2) {\n                if (n <= 1 || m <= 1) {\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n                }\n                const s = (sumsqerr(arrX) + sumsqerr(arrY)) / (n + m - 2);\n                if (s === 0) {\n                    return new CellError(ErrorType.DIV_BY_ZERO);\n                }\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(s * (1 / n + 1 / m)));\n                return tails * (1 - studentt.cdf(t, n + m - 2));\n            }\n            else { //type === 3\n                if (n <= 1 || m <= 1) {\n                    return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.TwoValues);\n                }\n                const sx = variance(arrX, true);\n                const sy = variance(arrY, true);\n                if (sx === 0 && sy === 0) {\n                    return new CellError(ErrorType.DIV_BY_ZERO);\n                }\n                const t = Math.abs((mean(arrX) - mean(arrY)) / Math.sqrt(sx / n + sy / m));\n                const v = Math.pow(sx / n + sy / m, 2) / (Math.pow(sx / n, 2) / (n - 1) + Math.pow(sy / m, 2) / (m - 1));\n                return tails * (1 - studentt.cdf(t, v));\n            }\n        });\n    }\n    skew(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SKEW'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            const n = coerced.length;\n            if (n < 3) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\n            }\n            const avg = mean(coerced);\n            const s = stdev(coerced, true);\n            if (s === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) * n / (n - 1) / (n - 2);\n        });\n    }\n    skewp(ast, formulaAddress) {\n        return this.runFunction(ast.args, formulaAddress, this.metadata('SKEW.P'), (...args) => {\n            const coerced = this.interpreter.arithmeticHelper.coerceNumbersExactRanges(args);\n            if (coerced instanceof CellError) {\n                return coerced;\n            }\n            const n = coerced.length;\n            if (n < 3) {\n                return new CellError(ErrorType.DIV_BY_ZERO, ErrorMessage.ThreeValues);\n            }\n            const avg = mean(coerced);\n            const s = stdev(coerced, false);\n            if (s === 0) {\n                return new CellError(ErrorType.DIV_BY_ZERO);\n            }\n            return coerced.reduce((a, b) => a + Math.pow((b - avg) / s, 3), 0) / n;\n        });\n    }\n}\nStatisticalAggregationPlugin.implementedFunctions = {\n    'AVEDEV': {\n        method: 'avedev',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'DEVSQ': {\n        method: 'devsq',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'GEOMEAN': {\n        method: 'geomean',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'HARMEAN': {\n        method: 'harmean',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'CORREL': {\n        method: 'correl',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'RSQ': {\n        method: 'rsq',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'COVARIANCE.P': {\n        method: 'covariancep',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'COVARIANCE.S': {\n        method: 'covariances',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'Z.TEST': {\n        method: 'ztest',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.NUMBER },\n            { argumentType: ArgumentTypes.NUMBER, optionalArg: true },\n        ],\n    },\n    'F.TEST': {\n        method: 'ftest',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'STEYX': {\n        method: 'steyx',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'SLOPE': {\n        method: 'slope',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'CHISQ.TEST': {\n        method: 'chisqtest',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n        ],\n    },\n    'T.TEST': {\n        method: 'ttest',\n        parameters: [\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.RANGE },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 2 },\n            { argumentType: ArgumentTypes.INTEGER, minValue: 1, maxValue: 3 },\n        ],\n    },\n    'SKEW': {\n        method: 'skew',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n    'SKEW.P': {\n        method: 'skewp',\n        parameters: [\n            { argumentType: ArgumentTypes.ANY },\n        ],\n        repeatLastArgs: 1\n    },\n};\nStatisticalAggregationPlugin.aliases = {\n    COVAR: 'COVARIANCE.P',\n    FTEST: 'F.TEST',\n    PEARSON: 'CORREL',\n    ZTEST: 'Z.TEST',\n    CHITEST: 'CHISQ.TEST',\n    TTEST: 'T.TEST',\n    COVARIANCEP: 'COVARIANCE.P',\n    COVARIANCES: 'COVARIANCE.S',\n    SKEWP: 'SKEW.P',\n};\nfunction parseTwoArrays(dataX, dataY) {\n    const xit = dataX.iterateValuesFromTopLeftCorner();\n    const yit = dataY.iterateValuesFromTopLeftCorner();\n    let x, y;\n    const arrX = [];\n    const arrY = [];\n    while (x = xit.next(), y = yit.next(), !x.done && !y.done) {\n        const xval = x.value;\n        const yval = y.value;\n        if (xval instanceof CellError) {\n            return xval;\n        }\n        else if (yval instanceof CellError) {\n            return yval;\n        }\n        else if (isExtendedNumber(xval) && isExtendedNumber(yval)) {\n            arrX.push(getRawValue(xval));\n            arrY.push(getRawValue(yval));\n        }\n    }\n    return [arrX, arrY];\n}\n"],"sourceRoot":""}