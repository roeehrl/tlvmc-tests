/**
 * @license
 * Copyright (c) 2021 Handsoncode. All rights reserved.
 */
import { SimpleCellAddress } from '../../Cell';
import { ProcedureAst } from '../../parser';
import { InternalScalarValue } from '../InterpreterValue';
import { ArgumentTypes, FunctionPlugin } from './FunctionPlugin';
export declare class LogarithmPlugin extends FunctionPlugin {
    static implementedFunctions: {
        LOG10: {
            method: string;
            parameters: {
                argumentType: ArgumentTypes;
            }[];
        };
        LOG: {
            method: string;
            parameters: ({
                argumentType: ArgumentTypes;
                greaterThan: number;
                defaultValue?: undefined;
            } | {
                argumentType: ArgumentTypes;
                defaultValue: number;
                greaterThan: number;
            })[];
        };
        LN: {
            method: string;
            parameters: {
                argumentType: ArgumentTypes;
            }[];
        };
    };
    log10(ast: ProcedureAst, formulaAddress: SimpleCellAddress): InternalScalarValue;
    log(ast: ProcedureAst, formulaAddress: SimpleCellAddress): InternalScalarValue;
    ln(ast: ProcedureAst, formulaAddress: SimpleCellAddress): InternalScalarValue;
}
